[{"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Cleopatra_V_of_Egypt> . ?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "SerialNumber": "6", "question": "Which royalty was married to ptolemy XIII Theos Philopator and had mother named Cleopatra V ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cleopatra_V_of_Egypt", "label": "Cleopatra V"}, {"uri": "http://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator", "label": "ptolemy XIII Theos Philopator"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mother", "label": "mother"}, {"uri": "http://dbpedia.org/property/spouse", "label": "married"}, {"uri": "http://dbpedia.org/ontology/Royalty", "label": "royalty"}], "id": "e963127fc9c048e089c071e56b80f214"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures> . ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Doctor_Who_Confidential> . }", "SerialNumber": "15", "question": "What tv series can be said to be related to the sarah jane adventure and dr who confidential?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures", "label": "the sarah jane adventure "}, {"uri": "http://dbpedia.org/resource/Doctor_Who_Confidential", "label": "dr who confidential"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/related", "label": "related"}, {"uri": "http://dbpedia.org/ontology/related", "label": "related"}], "id": "6ff03a568e2e4105b491ab1c1411c1ab"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abhijit_Kunte> <http://dbpedia.org/property/knownFor> ?uri. <http://dbpedia.org/resource/Virtual_Kasparov> <http://dbpedia.org/ontology/genre> ?uri} ", "SerialNumber": "18", "question": "What is the common genere of Abhijit Kunte and Kasparov ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Abhijit_Kunte", "label": "Abhijit Kunte"}, {"uri": "http://dbpedia.org/resource/Virtual_Kasparov", "label": "kasparov"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/knownFor", "label": "@@@"}, {"uri": "http://dbpedia.org/ontology/genre", "label": "genere"}], "id": "8b08c0d0fc3d45e1936149c78c6637df"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Samur\u2013Absheron_channel> <http://dbpedia.org/ontology/sourceCountry> ?uri. <http://dbpedia.org/resource/Anar_Salmanov> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "SerialNumber": "21", "question": "Which source country of SamurAbsheron channel is the birth place of Anar Salmanov ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Samur\u2013Absheron_channel", "label": "SamurAbsheron channel"}, {"uri": "http://dbpedia.org/resource/Anar_Salmanov", "label": "Anar Salmanov"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourceCountry", "label": "country source"}, {"uri": "http://dbpedia.org/property/placeOfBirth", "label": "birth place"}], "id": "62fc3395a7ce4c27ba5bfb82e020dab6"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Sunrise_(How_I_Met_Your_Mother)> <http://dbpedia.org/property/guests> <http://dbpedia.org/resource/Tim_Gunn> }", "SerialNumber": "25", "question": "Did Timm Gunn guest in Sunrise (HIMYM)?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sunrise_(How_I_Met_Your_Mother)", "label": "Sunrise"}, {"uri": "http://dbpedia.org/resource/Tim_Gunn", "label": "Timm Gunn"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/guests", "label": "guest"}], "id": "502ef78b55df4f73beb3f5df73483a51"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2000\u201301_Aston_Villa_F.C._season> <http://dbpedia.org/property/name> ?uri. <http://dbpedia.org/resource/2009\u201310_Middlesbrough_F.C._season> <http://dbpedia.org/ontology/manager> ?uri} ", "SerialNumber": "30", "question": "Who is the common manager of Aston Villa 2000-02 season and aldo the manager of Middlesbrough F.C. season 2009-10", "entity mapping": [{"uri": "http://dbpedia.org/resource/2000\u201301_Aston_Villa_F.C._season", "label": "Aston Villa 2000-02 season"}, {"uri": "http://dbpedia.org/resource/2009\u201310_Middlesbrough_F.C._season", "label": "Middlesbrough F.C. season 2009-10"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/name", "label": "Who"}, {"uri": "http://dbpedia.org/ontology/manager", "label": "manager"}], "id": "e1b83f5a76aa411aa260424b3255ce89"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/PCL_Construction> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . }", "SerialNumber": "32", "question": "How many tenats have been there, of the constructions of PCL constructures?", "entity mapping": [{"uri": "http://dbpedia.org/resource/PCL_Construction", "label": "PCL constructures"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/builder", "label": "constructions"}, {"uri": "http://dbpedia.org/ontology/tenant", "label": "tenats"}], "id": "ce216d620d154f13814dd2f6b967c292"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/discoverer> <http://dbpedia.org/resource/Johann_Gottfried_Galle> . ?uri <http://dbpedia.org/ontology/discoverer> <http://dbpedia.org/resource/Urbain_Le_Verrier>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Planet>}", "SerialNumber": "51", "question": "Which planet was discovered by Johann Gottfried and Urbain Le Verrier ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Johann_Gottfried_Galle", "label": "Johann Gottfried"}, {"uri": "http://dbpedia.org/resource/Urbain_Le_Verrier", "label": "Urbain Le Verrier"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/discoverer", "label": "discovered by"}, {"uri": "http://dbpedia.org/ontology/Planet", "label": "planet"}], "id": "3f7a7a7d95104fcb8c6ebe00786a990b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1997_Canadian_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri. <http://dbpedia.org/resource/1994_Spanish_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri . }", "SerialNumber": "56", "question": "Who started at the pole position in both 1997 canadian grand prix and the 94 spanish one?", "entity mapping": [{"uri": "http://dbpedia.org/resource/1997_Canadian_Grand_Prix", "label": "1997 canadian grand prix"}, {"uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix", "label": "94 spanish one"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/poleDriver", "label": "pole position"}], "id": "3f53ed3c088c4ede9a3582e26303ee83"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri. <http://dbpedia.org/resource/Sam_Carrick> <http://dbpedia.org/property/draftTeam> ?uri} ", "SerialNumber": "59", "question": "Which tenants of the Master Card center is also th draft team of Sam Carrick ", "entity mapping": [{"uri": "http://dbpedia.org/resource/MasterCard_Centre", "label": "Master Card center"}, {"uri": "http://dbpedia.org/resource/Sam_Carrick", "label": "Sam Carrick"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/tenants", "label": "tenants"}, {"uri": "http://dbpedia.org/property/draftTeam", "label": "draft team"}], "id": "94d9288c52b54642bdac4aba4fedcc04"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Zaman_Shah_Durrani> <http://dbpedia.org/property/title> ?uri. <http://dbpedia.org/resource/Salahuddin_Rabbani> <http://dbpedia.org/ontology/nationality> ?uri} ", "SerialNumber": "85", "question": "Which title of Zaman Shah Durrani is also the nationality of Salahuddin ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Zaman_Shah_Durrani", "label": "Zaman Shah Durrani"}, {"uri": "http://dbpedia.org/resource/Salahuddin_Rabbani", "label": "Salahuddin"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/title", "label": "title"}, {"uri": "http://dbpedia.org/ontology/nationality", "label": "nationality"}], "id": "34d6402839924ecbbffe213ce8966124"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Mating_Habits_of_the_Earthbound_Human> <http://dbpedia.org/property/starring> ?uri. <http://dbpedia.org/resource/Mams_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri . }", "SerialNumber": "96", "question": "What woman acted in the mating habits of earthbound humans and is often associated with Mams taylor?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Mating_Habits_of_the_Earthbound_Human", "label": "the mating habits of earthbound humans"}, {"uri": "http://dbpedia.org/resource/Mams_Taylor", "label": "Mams taylor"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/starring", "label": "acted"}, {"uri": "http://dbpedia.org/ontology/associatedMusicalArtist", "label": "associated"}], "id": "6d1d440ec5414694a662782baff67759"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/carries> <http://dbpedia.org/resource/Motor_vehicle> . ?x <http://dbpedia.org/property/crosses> ?uri  . }", "SerialNumber": "128", "question": "How many things are crossed over by bridges which can carry cars?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Motor_vehicle", "label": "cars"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/carries", "label": "carry"}, {"uri": "http://dbpedia.org/property/crosses", "label": "crossed"}], "id": "62a255d7774446fca4a570b227bc463e"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Chestnut_white-bellied_rat> <http://dbpedia.org/ontology/class> <http://dbpedia.org/resource/Mammal> }", "SerialNumber": "143", "question": "Is the chestnut white bellied rat a mammal?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chestnut_white-bellied_rat", "label": "chestnut bellied white rat"}, {"uri": "http://dbpedia.org/resource/Mammal", "label": "mammal"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/class", "label": "a"}], "id": "dc3644ed1dfc4da882751c8ba8661e2a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/Vishwajyot_High_School> <http://dbpedia.org/ontology/sport> ?uri . }", "SerialNumber": "149", "question": "what are some common games played at both Fr Agnel Multipurpose School and Vishwajyot High School?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College", "label": "Fr Agnel Multipurpose School"}, {"uri": "http://dbpedia.org/resource/Vishwajyot_High_School", "label": "Vishwajyot High School"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sport", "label": "games"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "games"}], "id": "cc5a0469264f4b9db2f762d99fac320f"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_of_Damascus> <http://dbpedia.org/ontology/canonizedBy> ?uri. <http://dbpedia.org/resource/Josiah_Idowu-Fearon> <http://dbpedia.org/ontology/religion> ?uri} ", "SerialNumber": "165", "question": "What relegious affiliation of Josiah Idowu-Fearon was canonized by john of Damasucs ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_of_Damascus", "label": "john of Damasucs"}, {"uri": "http://dbpedia.org/resource/Josiah_Idowu-Fearon", "label": "Josiah Idowu-Fearon"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/canonizedBy", "label": "canonized by"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "relegious"}], "id": "30d274c7ebc944d6ac4e29e01c552fbb"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Kazuo_Hirai> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }", "SerialNumber": "173", "question": "Count all that was built by a company whose leader is Kazuo Hirai?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kazuo_Hirai", "label": "Kazuo Hirai"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/keyPeople", "label": "leader"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "built by"}], "id": "058b1ad027e8461f8bdc3cbe71af5877"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dan_Shamash> <http://dbpedia.org/ontology/team> ?uri. <http://dbpedia.org/resource/EverBank_Field> <http://dbpedia.org/ontology/tenant> ?uri} ", "SerialNumber": "175", "question": "Name the tenant of Ever bank field which has also has player named Dan Shamash ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dan_Shamash", "label": "Dan Shamash"}, {"uri": "http://dbpedia.org/resource/EverBank_Field", "label": "Ever bank field"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/team", "label": "player"}, {"uri": "http://dbpedia.org/ontology/tenant", "label": "tenant"}], "id": "af9721be263d4f1183dd36c6263b988a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/San_Marcos_River> <http://dbpedia.org/ontology/sourceMountain> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "SerialNumber": "177", "question": "What is the largest city in the country where the San Marcos River originates?", "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Marcos_River", "label": "San Marcos River"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourceMountain", "label": "originates"}, {"uri": "http://dbpedia.org/ontology/largestCity", "label": "largest city"}, {"uri": "http://dbpedia.org/ontology/Country", "label": "country"}], "id": "40d8dc6cc6a44008b90476173e0fcbe3"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Jazz_fusion> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "SerialNumber": "178", "question": "Give a list of all the labels that have jazz fusion artists signed up with them?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jazz_fusion", "label": "jazz fusion"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/genre", "label": "artists"}, {"uri": "http://dbpedia.org/ontology/recordLabel", "label": "label"}, {"uri": "http://dbpedia.org/ontology/MusicalArtist", "label": "artists"}], "id": "0d89f5d0f59b44e8a5353d50205fefa4"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pope_Gregory_I> <http://dbpedia.org/property/veneratedIn> ?uri } ", "SerialNumber": "181", "question": "Which holy places did consider Pope Gregory I as a saint?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pope_Gregory_I", "label": "Pope Gregory I"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/veneratedIn", "label": "saint"}], "id": "c57100a716d5441bb8cc6a588c54982b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/otherParty> <http://dbpedia.org/resource/Human_Rights_Party_(Cambodia)> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "182", "question": "List the religion of people in the Cambodian human rights party?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Human_Rights_Party_(Cambodia)", "label": "human rights party"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/otherParty", "label": "party"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "148cdeb62654466ba6820ef343817fdb"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Croix_de_guerre_1939\u20131945_(France)> . ?x <http://dbpedia.org/property/battles> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "184", "question": "Count the wars in which people awarded with the Croix de guerre fought.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Croix_de_guerre_1939\u20131945_(France)", "label": "Croix de guerre"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/awards", "label": "awarded"}, {"uri": "http://dbpedia.org/property/battles", "label": "fought"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "wars"}], "id": "f1e12faf9fbc416a9f4c648088eb0ce4"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Azam_F.C.> <http://dbpedia.org/property/name> ?x . ?x <http://dbpedia.org/ontology/team> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}", "SerialNumber": "185", "question": "For which clubs do the players of Azam F.C. play for?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Azam_F.C.", "label": "Azam F.C."}], "predicate mapping": [{"uri": "http://dbpedia.org/property/name", "label": "azam"}, {"uri": "http://dbpedia.org/ontology/team", "label": "club"}, {"uri": "http://dbpedia.org/ontology/SoccerPlayer", "label": "players"}], "id": "fdfee7b9d0c14c7eb2865ce63f009f2d"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/INKAS> <http://dbpedia.org/property/locations> ?uri. <http://dbpedia.org/resource/T.I._Ahmadiyya_Senior_High_School,_Kumasi> <http://dbpedia.org/ontology/denomination> ?uri} ", "SerialNumber": "186", "question": "Which location of  INKAS is also the location of  T.I. Ahmadiyya Senior High School, Kumasi ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/INKAS", "label": "INKAS"}, {"uri": "http://dbpedia.org/resource/T.I._Ahmadiyya_Senior_High_School,_Kumasi", "label": "T.I. Ahmadiyya Senior High School, Kumasi"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/locations", "label": "location"}, {"uri": "http://dbpedia.org/ontology/denomination", "label": "location"}], "id": "e24e471cc44e4ea99d44a35f6932aa9b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia> . ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Ikelenge_District>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "190", "question": "Name a  river with source country as Zambia and source location as Ikelenge  District?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Zambia", "label": "Zambia"}, {"uri": "http://dbpedia.org/resource/Ikelenge_District", "label": "Ikelenge  District"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourceCountry", "label": "source country"}, {"uri": "http://dbpedia.org/property/sourceLocation", "label": "source location"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "0e83db3bc85c4c33bbc49dafc2825eb4"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Society>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "SerialNumber": "191", "question": "Which researchers received fellowship from Royal Society?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_Society", "label": "Royal Society"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/award", "label": "fellowship"}, {"uri": "http://dbpedia.org/ontology/Scientist", "label": "researchers"}], "id": "7f65c4ab542e475aa78b39ba487c66d2"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Acer_nigrum> } ", "SerialNumber": "192", "question": "acer nigrum is used in making what?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Acer_nigrum", "label": "acer nigrum"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/ingredient", "label": "in making"}], "id": "e166d5d43fdf4091b8a0c9a5482c75c5"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/Filipinos> } ", "SerialNumber": "193", "question": "what are some famous people out of the Filipinos?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Filipinos", "label": "Filipinos"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/stateOfOrigin", "label": "filipinos"}], "id": "89b2ce4827404f8bbd451c6143340f72"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tessa_Dahl> <http://dbpedia.org/ontology/parent> ?uri } ", "SerialNumber": "198", "question": "To whom was Tessa Dahl born to?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tessa_Dahl", "label": "Tessa Dahl"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/parent", "label": "born"}], "id": "139da48f4c4e4d1e91d23b6890ef6f4f"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ananda_College> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "201", "question": "Count the number of religions followed by the alumini of Ananda College.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ananda_College", "label": "Ananda College"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/almaMater", "label": "alumini"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}], "id": "a0423af0bfd24f718c7e57062d36a615"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014\u201315_Panionios_G.S.S._season> <http://dbpedia.org/property/stadium> ?uri. <http://dbpedia.org/resource/Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri} ", "SerialNumber": "202", "question": "Which city located on Mediterranean Sea is also the stadium of Panionios G.S.S. season ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2014\u201315_Panionios_G.S.S._season", "label": "Panionios G.S.S. season"}, {"uri": "http://dbpedia.org/resource/Mediterranean_Sea", "label": "Mediterranean Sea"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/stadium", "label": "stadium"}, {"uri": "http://dbpedia.org/property/cities", "label": "city"}], "id": "ebe64596063a43719e1b6479a9d09d94"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Cowombat_Flat> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Murray_Mouth>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "203", "question": "What is the river whose source is Cowombat  Flat and has it's mouth located in Murray Mouth?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cowombat_Flat", "label": "Cowombat  Flat"}, {"uri": "http://dbpedia.org/resource/Murray_Mouth", "label": "Murray Mouth"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/source", "label": "source"}, {"uri": "http://dbpedia.org/ontology/riverMouth", "label": "river mouth"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "7b9c6c00806d42ef9ece1689ddac88c8"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/season> <http://dbpedia.org/resource/2015_Argentine_Primera_Divisi\u00f3n> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }", "SerialNumber": "205", "question": "Who were in the youth clubs that were in season of 2015 Argentine Primera Division?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2015_Argentine_Primera_Divisi\u00f3n", "label": "2015 Argentine Primera Division"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/season", "label": "season"}, {"uri": "http://dbpedia.org/property/youthclubs", "label": "youth clubs"}], "id": "43659f479aa14b2aa8703e06d7a71405"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth> . ?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Vangelis>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "208", "question": "What is the name of the movie whose director of photography was Jordan Cronenweth and music composer was Vangelis?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jordan_Cronenweth", "label": "Jordan Cronenweth"}, {"uri": "http://dbpedia.org/resource/Vangelis", "label": "Vangelis"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/cinematography", "label": "photography"}, {"uri": "http://dbpedia.org/ontology/musicComposer", "label": "music composer"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "ce7341ebdfa44c9b8066a65553c210b4"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Klang_Valley> . ?x <http://dbpedia.org/property/country> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "SerialNumber": "209", "question": "From how many coutries do companies come, which are headquartered in the Klang Valley?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Klang_Valley", "label": "Klang Valley"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/headquarters", "label": "headquarter"}, {"uri": "http://dbpedia.org/property/country", "label": "coutries"}, {"uri": "http://dbpedia.org/ontology/Country", "label": "coutries"}], "id": "515d73dc046545aa893eb5a29754ae6d"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/ontology/parentOrganisation> ?uri. <http://dbpedia.org/resource/The_Galleria> <http://dbpedia.org/ontology/owner> ?uri} ", "SerialNumber": "215", "question": "Which parent organization of Get TV also owns the Galleria ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/GetTV", "label": "Get TV"}, {"uri": "http://dbpedia.org/resource/The_Galleria", "label": "the Galleria"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/parentOrganisation", "label": "parent organization"}, {"uri": "http://dbpedia.org/ontology/owner", "label": "owns"}], "id": "37e79131355440699c0b9efeb17ecc4a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Populous_(company)> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "SerialNumber": "220", "question": "Who all have rented the stadium whose architect is Populous?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Populous_(company)", "label": "Populous"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/architect", "label": "architect"}, {"uri": "http://dbpedia.org/ontology/tenant", "label": "rented"}, {"uri": "http://dbpedia.org/ontology/Stadium", "label": "stadium"}], "id": "c6237ded5fec4e6e88b97e8bf24b84c8"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Chumash_people> . ?x <http://dbpedia.org/ontology/governingBody> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "SerialNumber": "221", "question": "Which body governs over the place made by the chumash people?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chumash_people", "label": "chumash people"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/architect", "label": "made by"}, {"uri": "http://dbpedia.org/ontology/governingBody", "label": "governs"}, {"uri": "http://dbpedia.org/ontology/Place", "label": "place"}], "id": "fca07533e88d461686cd3a1827d8d790"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke> . ?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "223", "question": "Which TV show developed by J. Michael Stracznski has artist as Christopher Franke ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Christopher_Franke", "label": "Christopher Franke"}, {"uri": "http://dbpedia.org/resource/J._Michael_Straczynski", "label": "J. Michael Stracznski"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/artist", "label": "artist"}, {"uri": "http://dbpedia.org/ontology/developer", "label": "developed by"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "e54d1194593e4fabba95e42efed756c9"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Merlin_Express> <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Cibao_International_Airport> }", "SerialNumber": "228", "question": "Does the merlin express have a hub at the cibano international airport?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Merlin_Express", "label": "merlin express"}, {"uri": "http://dbpedia.org/resource/Cibao_International_Airport", "label": "cibano international airport"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/hubAirport", "label": "airport hub"}], "id": "d97aad57df5d45eb95490446fc978a61"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Wilton,_Connecticut>  . }", "SerialNumber": "229", "question": "How many people live in Wilton, Connecticut?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Wilton,_Connecticut", "label": "Wilton, Connecticut"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/residence", "label": "live"}], "id": "c6aec20e26bf401b81d1b6aa04ae91a5"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Ontario> . ?x <http://dbpedia.org/ontology/draftTeam> ?uri  . }", "SerialNumber": "230", "question": "For how many different teams have Ontarians been drafted ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ontario", "label": "Ontaria"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBirth", "label": ""}, {"uri": "http://dbpedia.org/ontology/draftTeam", "label": "drafted"}], "id": "859ca6438ab1484a8e5317f11e6d7dba"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest> . ?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "231", "question": "Which Fox  show is presented by Ryan Seacrest?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ryan_Seacrest", "label": "Ryan Seacrest"}, {"uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company", "label": "Fox"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/presenter", "label": "presented"}, {"uri": "http://dbpedia.org/property/channel", "label": "show"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show is"}], "id": "10c87cc916094a9a81664a0eed9decea"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Box_girder_bridge> . ?x <http://dbpedia.org/property/crosses> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "232", "question": "How many rivers are crossed by different Box Girder bridges?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Box_girder_bridge", "label": "Box Girder bridge"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/design", "label": "bridges"}, {"uri": "http://dbpedia.org/property/crosses", "label": "crossed"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "21dcb126b1924db68d44a389f565f443"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Public_Transport_Authority_(Western_Australia)> . ?x <http://dbpedia.org/ontology/servingRailwayLine> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Station>}", "SerialNumber": "234", "question": "What railway lines go through the stations maintained by Western Australian Public Transport Authority?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Public_Transport_Authority_(Western_Australia)", "label": "Western Australian Public Transport Authority"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owningOrganisation", "label": "maintained by"}, {"uri": "http://dbpedia.org/ontology/servingRailwayLine", "label": "railway lines"}, {"uri": "http://dbpedia.org/ontology/Station", "label": "station"}], "id": "3b7070ada99b44be80d9025524919a86"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Herzogenaurach> } ", "SerialNumber": "239", "question": "What sporting goods companies are located in Herzogenaurach?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Herzogenaurach", "label": "Herzogenaurach"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/location", "label": "located"}], "id": "d07c4caf5e9b42379ae12c0f145c97dc"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Blizzard_Entertainment> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "SerialNumber": "241", "question": "What genre of games are made by Blizzard Entertainment studios?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Blizzard_Entertainment", "label": "Blizzard Entertainment studios"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/developer", "label": "made"}, {"uri": "http://dbpedia.org/property/genre", "label": "genre"}, {"uri": "http://dbpedia.org/ontology/VideoGame", "label": "games"}], "id": "c98f57f9e1cc479eb0dcea4abd33d23a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/tenants> <http://dbpedia.org/resource/Costa_Rica_national_football_team> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "SerialNumber": "243", "question": "Who built the stadium which was rented by Costa Rica national football team?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Costa_Rica_national_football_team", "label": "Costa Rica national football team"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/tenants", "label": "rented by"}, {"uri": "http://dbpedia.org/ontology/builder", "label": "built"}, {"uri": "http://dbpedia.org/ontology/Stadium", "label": "stadium"}], "id": "0975db6bce494a3ca9713353d0589ad3"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Scientology>  . }", "SerialNumber": "246", "question": "Count all the scientologists.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Scientology", "label": "scientologi"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/religion", "label": ""}], "id": "eeeeba8f2afb457886b8942434d292ac"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Commodore_CDTV> . ?x <http://dbpedia.org/ontology/genre> ?uri  . }", "SerialNumber": "250", "question": "How many genres of games can I find on the commodore CDTV?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Commodore_CDTV", "label": "commodore CDTV"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/computingPlatform", "label": ""}, {"uri": "http://dbpedia.org/ontology/genre", "label": "genre"}], "id": "573991970f0e4f4c84b043e20bedf9ef"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Mark_Johnson_(producer)> . ?x <http://dbpedia.org/ontology/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "251", "question": "List the cast member of the movies whose producer is Mark Johnson.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mark_Johnson_(producer)", "label": "Mark Johnson"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/producer", "label": "producer"}, {"uri": "http://dbpedia.org/ontology/starring", "label": "cast member"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "8e4a97eb98a546acb53208b55d2b191a"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Fusil_Gras_mle_1874> <http://dbpedia.org/ontology/usedInWar> ?x . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "253", "question": "In how many  territories were the wars fought where Fusil Gras Mile 1874 were used?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fusil_Gras_mle_1874", "label": "Fusil Gras Mile 1874"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/usedInWar", "label": "used"}, {"uri": "http://dbpedia.org/ontology/territory", "label": "territories"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "wars"}], "id": "229566aad8594cd09f94da93dbe723fb"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/CNN> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }", "SerialNumber": "257", "question": "Where do the CNN employees typically graduate from?", "entity mapping": [{"uri": "http://dbpedia.org/resource/CNN", "label": "CNN"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/employer", "label": "employees"}, {"uri": "http://dbpedia.org/ontology/almaMater", "label": "graduate"}], "id": "7b8f4f86aea64af6bca2e94f317956c2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/system> <http://dbpedia.org/resource/Norfolk_Southern_Railway> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}", "SerialNumber": "258", "question": "Who has stock in the railway lines managed by Norfolk Southern Railway?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Norfolk_Southern_Railway", "label": "Norfolk Southern Railway"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/system", "label": ""}, {"uri": "http://dbpedia.org/property/owner", "label": "managed"}, {"uri": "http://dbpedia.org/ontology/RailwayLine", "label": "railway line"}], "id": "3de0478033a3450e981f4086b2f53e3e"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Asiana_Airlines> <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Jeju_International_Airport> }", "SerialNumber": "265", "question": "Do the asiana airlines fly  to Jeju airport?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Asiana_Airlines", "label": "asiana airlines"}, {"uri": "http://dbpedia.org/resource/Jeju_International_Airport", "label": "Jeju airport"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/targetAirport", "label": "fly"}], "id": "89044eb32d9442b1b3b0e8dab3d7a99d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Ishir\u014d_Honda>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "268", "question": "Which motion picture stories were edited by Ishir Honda?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ishir\u014d_Honda", "label": "Ishir Honda"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/writer", "label": "edited by"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "motion picture"}], "id": "c937de2356174723a6ec3e5563b02fa8"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Alpine_skiing_at_the_1964_Winter_Olympics_\u2013_Men's_slalom> <http://dbpedia.org/ontology/bronzeMedalist> ?x . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Skier>}", "SerialNumber": "269", "question": "What is the location of death of the skier who was the bronze medalist of Alpine skiing at the 1964 Winter Olympics  Men's slalom ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Alpine_skiing_at_the_1964_Winter_Olympics_\u2013_Men's_slalom", "label": "Alpine skiing at the 1964 Winter Olympics  Men's slalom"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/bronzeMedalist", "label": "bronze medalist"}, {"uri": "http://dbpedia.org/property/deathPlace", "label": "location of death"}, {"uri": "http://dbpedia.org/ontology/Skier", "label": "skier"}], "id": "938480f17cdc4fbfaa215a3e4217843d"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sisterStation> <http://dbpedia.org/resource/Virgin_Radio> . ?x <http://dbpedia.org/property/location> ?uri  . }", "SerialNumber": "270", "question": "Where all does the sister station of virgin radio play?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Virgin_Radio", "label": "virgin radio"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sisterStation", "label": "sister station"}, {"uri": "http://dbpedia.org/property/location", "label": "Where"}], "id": "745acda3a54043fab3bafce782bae4f9"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/\u014ctani_University> <http://dbpedia.org/property/affiliation> ?uri } ", "SerialNumber": "271", "question": "What is the affiliation of tani University ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/\u014ctani_University", "label": "tani University"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/affiliation", "label": "affiliation"}], "id": "549f424393e345c0b173231ac5954fd1"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Dowra> } ", "SerialNumber": "272", "question": "Which rivers originate from Dowra?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dowra", "label": "Dowra"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourceMountain", "label": "originate"}], "id": "2069abd16c734d1f8e9758bea35da77d"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Pittsburgh_Pirates> . ?x <http://dbpedia.org/property/architect> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "SerialNumber": "273", "question": "Who was the architect of the stadium currently run by the Pittsburgh Pirates?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pittsburgh_Pirates", "label": "Pittsburgh Pirates"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/operator", "label": "run by"}, {"uri": "http://dbpedia.org/property/architect", "label": "architect"}, {"uri": "http://dbpedia.org/ontology/Stadium", "label": "stadium"}], "id": "4d1bbe0ed05744749e253c143259609c"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "274", "question": "How many TV shows have been created by Simon Fuller ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Simon_Fuller", "label": "Simon Fuller"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/creator", "label": "created"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "TV shows"}], "id": "876df0eecd7c4e78a79daa9a1e7b3343"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ford_Model_C> <http://dbpedia.org/ontology/designCompany> <http://dbpedia.org/resource/Henry_Ford> }", "SerialNumber": "276", "question": "Did Henry Ford design the Model C?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Model_C", "label": "Model C"}, {"uri": "http://dbpedia.org/resource/Henry_Ford", "label": "Henry Ford"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/designCompany", "label": "design"}], "id": "4d489bcad0334bd58b83cdeedbd1c5ec"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Providence_Chapel,_Charlwood> <http://dbpedia.org/property/style> ?uri. <http://dbpedia.org/resource/Joseph_Case_High_School> <http://dbpedia.org/ontology/region> ?uri} ", "SerialNumber": "278", "question": "WHich region of the Providence Chapel, Charlwood is also the region of the Joseph Case High School", "entity mapping": [{"uri": "http://dbpedia.org/resource/Providence_Chapel,_Charlwood", "label": "Providence Chapel, Charlwood"}, {"uri": "http://dbpedia.org/resource/Joseph_Case_High_School", "label": "Joseph Case High School"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/style", "label": ""}, {"uri": "http://dbpedia.org/ontology/region", "label": "region"}], "id": "09b0466736b646098262ca3fce5092aa"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/John_Robert_Woodyard> . ?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "SerialNumber": "279", "question": "Name the scientist whose supervisor was John Robert Woodyard and has won Norbert Wiener Award for Social and Professional Responsibility?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Robert_Woodyard", "label": "John Robert Woodyard"}, {"uri": "http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility", "label": "Norbert Wiener Award for Social and Professional Responsibility"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/doctoralAdvisor", "label": "supervisor"}, {"uri": "http://dbpedia.org/property/prizes", "label": "won"}, {"uri": "http://dbpedia.org/ontology/Scientist", "label": "scientist"}], "id": "2cc0b2ad617642aaace9eab113615942"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_G._Siebels,_Jr.> <http://dbpedia.org/property/branch> ?uri. <http://dbpedia.org/resource/LeRoy_Collins> <http://dbpedia.org/property/branch> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}", "SerialNumber": "280", "question": "Which branch of american military have both George Siebels jr and Leroy Collins served?", "entity mapping": [{"uri": "http://dbpedia.org/resource/George_G._Siebels,_Jr.", "label": "George Siebels jr"}, {"uri": "http://dbpedia.org/resource/LeRoy_Collins", "label": "Leroy Collins"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/branch", "label": "branch"}, {"uri": "http://dbpedia.org/property/branch", "label": "branch"}, {"uri": "http://dbpedia.org/ontology/MilitaryUnit", "label": "military"}], "id": "5091ad9fb7954f7b90ab7da686543728"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Germany> . ?x <http://dbpedia.org/ontology/relation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}", "SerialNumber": "281", "question": "What are some relatives of armymen who died in Germany?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Germany", "label": "Germany"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfDeath", "label": "died"}, {"uri": "http://dbpedia.org/ontology/relation", "label": "relatives"}, {"uri": "http://dbpedia.org/ontology/MilitaryPerson", "label": "armymen"}], "id": "c4d7c24ab2a34c4ea2ff5945ba35ef69"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Ashton_Historic_District> . ?x <http://dbpedia.org/property/college> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}", "SerialNumber": "284", "question": "What is the college of the baseball player who lives in Ashton Historic district?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ashton_Historic_District", "label": "Ashton Historic district"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/birthPlace", "label": "lives"}, {"uri": "http://dbpedia.org/property/college", "label": "college"}, {"uri": "http://dbpedia.org/ontology/BaseballPlayer", "label": "baseball player"}], "id": "6bd921a06e6e42a39a5c041bfb20eb9e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Greater_Napanee>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "285", "question": "Greater Napanee is the home town of what people?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Greater_Napanee", "label": "Greater Napanee"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/hometown", "label": "home town"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "489c3ac08b304bbaae50df383689eebe"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive> . ?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/United_States>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "288", "question": "Name the company founded in US and provides OneDrive as service ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/OneDrive", "label": "OneDrive"}, {"uri": "http://dbpedia.org/resource/United_States", "label": "US"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/services", "label": "service"}, {"uri": "http://dbpedia.org/property/foundation", "label": "founded"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "2a6c65a45e7249bebfda9d7ab36715ad"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/French_language> . ?x <http://dbpedia.org/ontology/currency> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Currency>}", "SerialNumber": "293", "question": "How many currencies are in used in places where people speak French?", "entity mapping": [{"uri": "http://dbpedia.org/resource/French_language", "label": "French"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/officialLanguage", "label": "speak"}, {"uri": "http://dbpedia.org/ontology/currency", "label": "currencies"}, {"uri": "http://dbpedia.org/ontology/Currency", "label": "currencies"}], "id": "2ffbfa007109419280e603e3a3512ac9"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baraily> <http://dbpedia.org/ontology/leaderName> ?uri. <http://dbpedia.org/resource/Jowai> <http://dbpedia.org/ontology/leaderName> ?uri . }", "SerialNumber": "294", "question": "What political party has governed both in Baraily,MP and Jowai?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Baraily", "label": "Baraily"}, {"uri": "http://dbpedia.org/resource/Jowai", "label": "Jowai"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/leaderName", "label": "governed"}, {"uri": "http://dbpedia.org/ontology/leaderName", "label": "governed"}], "id": "6701db8180aa493ba901a225bd9a6ff2"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Siege_of_Fort_Recovery>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "295", "question": "Which officers fought in the war of Siege of Fort Recovery?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Siege_of_Fort_Recovery", "label": "Siege of Fort Recovery"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/battle", "label": "war"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "officers"}], "id": "5ff2409a01034c5ba98c340602657d3b"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Duane_Allman> <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_Les_Paul> }", "SerialNumber": "297", "question": "Was Duanne Allman known to play the Les Paul?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Duane_Allman", "label": "Duanne Allman"}, {"uri": "http://dbpedia.org/resource/Gibson_Les_Paul", "label": "Les Paul"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/notableInstruments", "label": "known to play"}], "id": "4eba9f2aaa744ba699fd23239145e64b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Tanzania_national_football_team> . ?x <http://dbpedia.org/ontology/team> ?uri  . }", "SerialNumber": "298", "question": "For which other teams do members of tanzanian national football team play?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tanzania_national_football_team", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/nationalteam", "label": "national team"}, {"uri": "http://dbpedia.org/ontology/team", "label": "teams"}], "id": "aaab23649cce43d6957cdd09c3a4ea47"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri } ", "SerialNumber": "302", "question": "What is Jon Speelman famous for?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jon_Speelman", "label": "Jon Speelman"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/field", "label": "famous"}], "id": "b83ff0ecbd954891879ab98e725eb333"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Tonl\u00e9_Sap> } ", "SerialNumber": "307", "question": "tonle sap flows into which river?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tonl\u00e9_Sap", "label": "tonle sap"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/rightTributary", "label": "river"}], "id": "c1149b9f20bf470fad0154de4f2e72b7"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/currentMember> <http://dbpedia.org/resource/Ndonga_Mianga> . ?x <http://dbpedia.org/property/name> ?uri  . }", "SerialNumber": "309", "question": "List some teammates of Ndonga Mianga?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ndonga_Mianga", "label": "Ndonga Mianga"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/currentMember", "label": "teammates"}, {"uri": "http://dbpedia.org/property/name", "label": ""}], "id": "f0f45ed050d342e9bfdffc12670f1bfc"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Papeete> . ?uri <http://dbpedia.org/property/archipelago> ?x  . }", "SerialNumber": "310", "question": "Give me a count of everything under the archipelago, where Papeete is the biggest town.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Papeete", "label": "Papeete"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/largestCity", "label": "biggest town"}, {"uri": "http://dbpedia.org/property/archipelago", "label": "archipelago"}], "id": "3922223c92bd4c62a2b341fe8c73879c"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Benjamin_Franklin_Terry> <http://dbpedia.org/property/placeofburial> ?uri. <http://dbpedia.org/resource/U.S._Route_59_in_Texas> <http://dbpedia.org/property/junction> ?uri} ", "SerialNumber": "314", "question": "Where is Benjamin Franklin Terry buried, and US Route 59 has a junction?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Benjamin_Franklin_Terry", "label": "Benjamin Franklin Terry"}, {"uri": "http://dbpedia.org/resource/U.S._Route_59_in_Texas", "label": "US Route 59"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeofburial", "label": "buried,"}, {"uri": "http://dbpedia.org/property/junction", "label": "junction"}], "id": "f86ad7519a244286acaa2a1bf42446cf"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/James_S._Langer> <http://dbpedia.org/ontology/doctoralStudent> ?x . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }", "SerialNumber": "315", "question": "Where were the doctoral students of James Langer born?", "entity mapping": [{"uri": "http://dbpedia.org/resource/James_S._Langer", "label": "James Langer"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/doctoralStudent", "label": "doctoral student"}, {"uri": "http://dbpedia.org/property/placeOfBirth", "label": "born"}], "id": "d50f2ea2f8f0440c87444bcf085f6899"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/A_Foreign_Policy_of_Freedom> <http://dbpedia.org/property/coverArtist> <http://dbpedia.org/resource/John_Trumbull> }", "SerialNumber": "316", "question": "Was A foreign policy on freedom covered by John Trumbull?", "entity mapping": [{"uri": "http://dbpedia.org/resource/A_Foreign_Policy_of_Freedom", "label": "freedom foreign policy"}, {"uri": "http://dbpedia.org/resource/John_Trumbull", "label": "John Trumbull"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/coverArtist", "label": "covered"}], "id": "e6f3d395b66f485cb8901bfbcb1c4c0c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Edwin_Catmull>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "318", "question": "What company's leader is Edwin Catmull?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Edwin_Catmull", "label": "Edwin Catmull"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/keyPeople", "label": "leader"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "9650115540914f179ceb06bf8beef981"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/Dallas> . ?uri <http://dbpedia.org/ontology/foundationPlace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "321", "question": "What are some companies which are founded in Dallas Jurisdiction?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dallas", "label": "Dallas"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/governingBody", "label": "Jusrisdiction"}, {"uri": "http://dbpedia.org/ontology/foundationPlace", "label": "founded"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "companies"}], "id": "4b257aeff6b340ebb07ca27538749ed4"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/editor> <http://dbpedia.org/resource/Stephen_Law> . ?uri <http://dbpedia.org/property/discipline> <http://dbpedia.org/resource/Philosophy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}", "SerialNumber": "323", "question": "Which philosophy journal has compiler as Stephen Law ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Stephen_Law", "label": "Stephen Law"}, {"uri": "http://dbpedia.org/resource/Philosophy", "label": "philosophy"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/editor", "label": "compiler"}, {"uri": "http://dbpedia.org/property/discipline", "label": ""}, {"uri": "http://dbpedia.org/ontology/AcademicJournal", "label": "journal"}], "id": "01710e1b53c94aaf85bd50e8344efefa"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Jose_Cha_Cha_Jimenez> . ?x <http://dbpedia.org/property/international> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}", "SerialNumber": "326", "question": "In which country is there a political party whose leader is Jose Cha Cha Jimenez?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jose_Cha_Cha_Jimenez", "label": "Jose Cha Cha Jimenez"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/leader", "label": "leader"}, {"uri": "http://dbpedia.org/property/international", "label": ""}, {"uri": "http://dbpedia.org/ontology/PoliticalParty", "label": "political party"}], "id": "023818b03dce457481b4859b9adf89c5"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Korea_Presbyterian_Theological_Seminary> <http://dbpedia.org/property/nickname> ?uri. <http://dbpedia.org/resource/Celal_Bayar_University> <http://dbpedia.org/property/mascot> ?uri} ", "SerialNumber": "329", "question": "Which mascot of Celal Bayer university is also the nickname of kore Presbyterian Theological Seminar ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Korea_Presbyterian_Theological_Seminary", "label": "kore Presbyterian Theological Seminar"}, {"uri": "http://dbpedia.org/resource/Celal_Bayar_University", "label": "Celal Bayer university"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/nickname", "label": "nickname"}, {"uri": "http://dbpedia.org/property/mascot", "label": "mascot"}], "id": "aa123035cddf49b293de9bdddbd4fcf9"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Yasmin_Paige> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "331", "question": "Give me some series related to the one which had Yasmin Paige in them.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Yasmin_Paige", "label": "Yasmin Paige"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/starring", "label": "in"}, {"uri": "http://dbpedia.org/ontology/related", "label": "related"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "series"}], "id": "f2e2e1b4a67049c092236c11cfbef795"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Heinz_Kokott> <http://dbpedia.org/ontology/relation> ?uri } ", "SerialNumber": "332", "question": "With whom is Heinz Kokott a relative to who also served Nazi Army?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Heinz_Kokott", "label": "Heinz Kokott"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relation", "label": "relative"}], "id": "32db83b5ad5b4e198ff2e7e7eee6f790"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/settlementType> <http://dbpedia.org/resource/Thesaban>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>}", "SerialNumber": "337", "question": "What are the towns who have Thesaban system?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Thesaban", "label": "Thesaban"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/settlementType", "label": "system"}, {"uri": "http://dbpedia.org/ontology/Town", "label": "town"}], "id": "07133019a5a74f7f83b418752c785bbf"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/The_Best_of_Both_Worlds_(song)> . ?uri <http://dbpedia.org/property/executiveProducer> <http://dbpedia.org/resource/Steven_Peterman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "341", "question": "Which TV show's  opening theme is The Best of Both Worlds (song) and executive producer is Steven Peterman?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Best_of_Both_Worlds_(song)", "label": "The Best of Both Worlds (song)"}, {"uri": "http://dbpedia.org/resource/Steven_Peterman", "label": "Steven Peterman"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/openingTheme", "label": "opening theme"}, {"uri": "http://dbpedia.org/property/executiveProducer", "label": "executive producer"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "TV show"}], "id": "53a9beca92384cdda4e74205f5800cb0"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/editor> <http://dbpedia.org/resource/Paul_Morphy> . ?x <http://dbpedia.org/property/discipline> ?uri  . }", "SerialNumber": "343", "question": "Paul Morphy compiled journals of which field?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Morphy", "label": "Paul Morphy"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/editor", "label": "compiled"}, {"uri": "http://dbpedia.org/property/discipline", "label": "field"}], "id": "337774a6b5bc4fb4bdf86ecb5abf0a33"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Corringham_railway_station> <http://dbpedia.org/property/borough> ?uri } ", "SerialNumber": "354", "question": "In which city is Corringham railway station located?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Corringham_railway_station", "label": "Corringham railway station"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/borough", "label": "located"}], "id": "00a22ab72d9d4286a7d3d61c4d67c0b4"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)> <http://dbpedia.org/ontology/narrator> <http://dbpedia.org/resource/Stan_Lee> }", "SerialNumber": "355", "question": "Did stan lee narrate the incredible hulk tv show?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)", "label": "incredible hulk"}, {"uri": "http://dbpedia.org/resource/Stan_Lee", "label": "stan lee"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/narrator", "label": "narrate"}], "id": "4d935fb5d0694c4fbfba00b5d22705a2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/sisterStations> <http://dbpedia.org/resource/Al_Khaleejiya_100.9> . ?x <http://dbpedia.org/property/location> ?uri  . }", "SerialNumber": "357", "question": "Where do the sister stations of Al Khaleejiya 100.9 play?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Al_Khaleejiya_100.9", "label": "Al Khaleejiya 100.9"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/sisterStations", "label": "sister stations"}, {"uri": "http://dbpedia.org/property/location", "label": "Where"}], "id": "fd3f2656075c476493d51a420c168054"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/religiousAffiliation> <http://dbpedia.org/resource/Harvest_Christian_Center> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "SerialNumber": "358", "question": "Which sports are played in schools affiliated with the Harvest Christian Center?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Harvest_Christian_Center", "label": "Harvest Christian Center"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/religiousAffiliation", "label": "affiliated"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}, {"uri": "http://dbpedia.org/ontology/School", "label": "school"}], "id": "74a2300b33df4ad6a44b4184c0c8642d"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Virtual_Kasparov> <http://dbpedia.org/ontology/genre> ?uri. <http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College> <http://dbpedia.org/ontology/sport> ?uri} ", "SerialNumber": "360", "question": "What is common between sports played at Fr Agnel School and Jr college, and the genre of Virtual Kasparov?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Virtual_Kasparov", "label": "Virtual Kasparov"}, {"uri": "http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/genre", "label": "genre"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}], "id": "4cb08818578d4dfaa26b1d3490c0610a"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Blizzard_Entertainment> . ?x <http://dbpedia.org/property/genre> ?uri  . }", "SerialNumber": "362", "question": "How many different genres of games are produced by Blizzard?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Blizzard_Entertainment", "label": "blizzard"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/developer", "label": "produced"}, {"uri": "http://dbpedia.org/property/genre", "label": "genre"}], "id": "9f609480ea4647028bd3694a224482f1"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Reading,_Berkshire> . ?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Gloucestershire>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "364", "question": "Name the river flowing through Reading and source place as Gloucestershire ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Reading,_Berkshire", "label": "reading"}, {"uri": "http://dbpedia.org/resource/Gloucestershire", "label": "Gloucestershire"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/city", "label": "in"}, {"uri": "http://dbpedia.org/ontology/sourcePlace", "label": "source place"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "304ccd0b380a4d59a9dfc01c77cf3ec1"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Gelnhausen> . ?uri <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Pepperdine_University>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "365", "question": "List the people who were born in Gelnhausen and graduated from Pepperdine University?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gelnhausen", "label": "Gelnhausen"}, {"uri": "http://dbpedia.org/resource/Pepperdine_University", "label": "Pepperdine University"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/birthPlace", "label": "born in"}, {"uri": "http://dbpedia.org/property/education", "label": "graduated from"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "ad3dd519fa5749e789a15373b17b25db"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Fort_Barrancas> . ?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Fort_Gadsden> . }", "SerialNumber": "368", "question": "Who was in conflicts of Fort Barrancas and Gadsden?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fort_Barrancas", "label": "Fort Barrancas"}, {"uri": "http://dbpedia.org/resource/Fort_Gadsden", "label": "gadsden fort"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/battle", "label": "in conflict"}, {"uri": "http://dbpedia.org/ontology/battle", "label": "in conflict"}], "id": "56d56e554afa47df8316e2975165949d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Richard_H._Immerman> <http://dbpedia.org/property/education> ?uri. <http://dbpedia.org/resource/Franklin_W._Olin> <http://dbpedia.org/property/education> ?uri . }", "SerialNumber": "369", "question": "Which university was attended by both Richard H Immerman and Franklin W Olin?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Richard_H._Immerman", "label": "immerman richard"}, {"uri": "http://dbpedia.org/resource/Franklin_W._Olin", "label": "franklin olin"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/education", "label": "attended"}, {"uri": "http://dbpedia.org/property/education", "label": "attended"}], "id": "ba2570473e36467c8a631f60944cd2bd"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Occupation_of_Japan> . ?uri <http://dbpedia.org/property/knownFor> ?x  . }", "SerialNumber": "370", "question": "Name someone known for a project involved in the Occupation of Japan?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Occupation_of_Japan", "label": "Occupation of Japan"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/battle", "label": "project"}, {"uri": "http://dbpedia.org/property/knownFor", "label": "known for"}], "id": "2a27443085d84446813f5a30b2152d6c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Monroe_Carell_Jr._Children's_Hospital_at_Vanderbilt> <http://dbpedia.org/property/affiliation> ?uri. <http://dbpedia.org/resource/Vanderbilt_University_Medical_Center> <http://dbpedia.org/property/affiliation> ?uri . }", "SerialNumber": "371", "question": "What are Monrow Carell Jr Children Hospital and Vanderbilt University Medical Center both affiliated with?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Monroe_Carell_Jr._Children's_Hospital_at_Vanderbilt", "label": "vanderbilt hospital children"}, {"uri": "http://dbpedia.org/resource/Vanderbilt_University_Medical_Center", "label": "Vanderbilt University Medical Center"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/affiliation", "label": "affiliated"}, {"uri": "http://dbpedia.org/property/affiliation", "label": "affiliated"}], "id": "38c50543e2ca4c8ba2f11406ebb1f0c9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/GM_B_platform> . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "SerialNumber": "372", "question": "What are some cars which came before the ones on a GM B base?", "entity mapping": [{"uri": "http://dbpedia.org/resource/GM_B_platform", "label": "GM B"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/automobilePlatform", "label": "base"}, {"uri": "http://dbpedia.org/ontology/predecessor", "label": "before"}, {"uri": "http://dbpedia.org/ontology/Automobile", "label": "cars"}], "id": "5dd1957c2b5c46c4bcb3c8d94b4df437"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Counterpoint_(horse)> <http://dbpedia.org/property/grandsire> ?x . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}", "SerialNumber": "374", "question": "What is the awards given to the horse whose grandson is the famous Counterpoint?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Counterpoint_(horse)", "label": "Counterpoint"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/grandsire", "label": "grandson"}, {"uri": "http://dbpedia.org/ontology/honours", "label": "awards"}, {"uri": "http://dbpedia.org/ontology/Horse", "label": "horse"}], "id": "400f95dfb86547a18c1426b3fc417bb7"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/PC-9800_Series> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "SerialNumber": "375", "question": "what kind of games can I find for PC 9800?", "entity mapping": [{"uri": "http://dbpedia.org/resource/PC-9800_Series", "label": "9800"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/computingPlatform", "label": "PC"}, {"uri": "http://dbpedia.org/property/genre", "label": "kind"}, {"uri": "http://dbpedia.org/ontology/VideoGame", "label": "games"}], "id": "7da5440ab8834b4ca92805e80dd7b5a2"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/languageFamily> <http://dbpedia.org/resource/Anglo-Frisian_languages> . ?uri <http://dbpedia.org/property/languages> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}", "SerialNumber": "376", "question": "Count all the ethinic group who speaks language which belongs to Anglo-Frisian language family ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Anglo-Frisian_languages", "label": "Anglo-Frisian language "}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/languageFamily", "label": "language family"}, {"uri": "http://dbpedia.org/property/languages", "label": "language"}, {"uri": "http://dbpedia.org/ontology/EthnicGroup", "label": "ethinic group"}], "id": "786455b1e7fa4fed9f46d49db488e88d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Tony_Bennett> . ?uri <http://dbpedia.org/ontology/spouse> ?x  . }", "SerialNumber": "377", "question": "Name all those whose spouses have performed with Tony Bennett?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tony_Bennett", "label": "Tony Bennett"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/associatedMusicalArtist", "label": "performed"}, {"uri": "http://dbpedia.org/ontology/spouse", "label": "spouse"}], "id": "bd739b63ea0e48d19bbd74153447ff73"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Novelas_ejemplares> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "SerialNumber": "379", "question": "What are the books written by the the person who made the Novelas ejemplares?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Novelas_ejemplares", "label": "Novelas ejemplares"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/notableWork", "label": "made"}, {"uri": "http://dbpedia.org/ontology/author", "label": "written by"}, {"uri": "http://dbpedia.org/ontology/Book", "label": "book"}], "id": "7881083538c54de4a888d1e28df7238c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Anne_Spielberg>  . }", "SerialNumber": "380", "question": "Whos a famous relative of anne spielberg?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Anne_Spielberg", "label": "anne spielberg"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relation", "label": "relative"}], "id": "815d064630b3451baa5acb5bedd5e7ad"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/NBC> . ?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "381", "question": "Name the TV show whose network is NBC and is the subsequent work of Fraiser ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/NBC", "label": "NBC"}, {"uri": "http://dbpedia.org/resource/Frasier", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/network", "label": "network"}, {"uri": "http://dbpedia.org/ontology/subsequentWork", "label": "subsequent work"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "ace6e364c8cc4f1fb0813dc404b6fae6"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ivan_III_of_Russia> <http://dbpedia.org/property/placeOfBurial> ?uri } ", "SerialNumber": "387", "question": "Where is the grave of Ivan III of Russia ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ivan_III_of_Russia", "label": "Ivan III"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBurial", "label": "grave"}], "id": "3aaf4525a6d24e27be8fe037d5ba28c2"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Spanish_language> . ?uri <http://dbpedia.org/ontology/location> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "SerialNumber": "392", "question": "how many companies are located in a spanish speaking region?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Spanish_language", "label": "spanish"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/language", "label": "speaking"}, {"uri": "http://dbpedia.org/ontology/location", "label": "located in"}, {"uri": "http://dbpedia.org/ontology/Organisation", "label": "companies"}], "id": "b541f708c7fd48ad8eb1c5c9489444e1"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }", "SerialNumber": "393", "question": "What are some US citizens famous for?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": "US"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/nationality", "label": "citizens"}, {"uri": "http://dbpedia.org/ontology/knownFor", "label": "famous"}], "id": "88f9b624d17b45edb9e1ec11cdb1db22"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Random_House> . ?x <http://dbpedia.org/property/subject> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "SerialNumber": "394", "question": "Which genre of books are published by Random House?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Random_House", "label": "Random House"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/publisher", "label": "published"}, {"uri": "http://dbpedia.org/property/subject", "label": "genre"}, {"uri": "http://dbpedia.org/ontology/Book", "label": "book"}], "id": "246e38b975c94fdbbbe94ec51f1540eb"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Lori_Black> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Henry_E._Catto,_Jr.>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "395", "question": "Name the office holder whose child is Lori Black and predecessor is Henry E. Catto Jr ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lori_Black", "label": "Lori Black"}, {"uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr.", "label": "henry catto"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/children", "label": "child"}, {"uri": "http://dbpedia.org/ontology/predecessor", "label": "predecessor"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "office holder"}], "id": "c919ac2e708f41ee93b91d3731428939"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/Arizona_State_Sun_Devils>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>}", "SerialNumber": "396", "question": "How many golf players are there in Arizona State Sun Devils ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Arizona_State_Sun_Devils", "label": "Arizona State Sun Devils"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/college", "label": "in"}, {"uri": "http://dbpedia.org/ontology/GolfPlayer", "label": "golf player"}], "id": "279ba468ad7c402ea5b91c6b11a7dd1c"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/Wyoming> } ", "SerialNumber": "397", "question": "Which rivers start in Wyoming?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Wyoming", "label": "Wyoming"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourceRegion", "label": "start"}], "id": "5e356a23a8734f9d987c09850314cf36"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jeffrey_Werleman> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/American_Mediterranean_Sea> <http://dbpedia.org/ontology/country> ?uri . }", "SerialNumber": "400", "question": "What country is Jeffrey Werleman from, which also has the American Mediterranean Sea?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jeffrey_Werleman", "label": "Jeffrey Werleman"}, {"uri": "http://dbpedia.org/resource/American_Mediterranean_Sea", "label": "American Mediterranean Sea"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/birthPlace", "label": "from"}, {"uri": "http://dbpedia.org/ontology/country", "label": "country"}], "id": "c5ddb0c77d054690b00ec818448e108c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Khmer_Issarak> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>}", "SerialNumber": "401", "question": "The Prime minister who worked in the Khmer Issarak follows which religion?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Khmer_Issarak", "label": "Khmer Issarak"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/militaryBranch", "label": "worked"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}, {"uri": "http://dbpedia.org/ontology/PrimeMinister", "label": "Prime minister"}], "id": "a785e76da4ec49cea487642d65c77144"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/currentMember> <http://dbpedia.org/resource/Jason_Hayne> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OrganisationMember>}", "SerialNumber": "408", "question": "List the other members of the team where Jason Hayne currently plays?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jason_Hayne", "label": "Jason Hayne"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/currentMember", "label": "currently plays"}, {"uri": "http://dbpedia.org/property/name", "label": "members"}, {"uri": "http://dbpedia.org/ontology/OrganisationMember", "label": "team"}], "id": "25b1049cd35247ecb0c2f42335ca48a1"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/1211_Avenue_of_the_Americas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}", "SerialNumber": "413", "question": "List the newspapers whose offices are situated in 1211 Avenue of the Americas?", "entity mapping": [{"uri": "http://dbpedia.org/resource/1211_Avenue_of_the_Americas", "label": "1211 Avenue of the Americas"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/headquarter", "label": "offices"}, {"uri": "http://dbpedia.org/ontology/Newspaper", "label": "newspaper"}], "id": "f068beeb6bd0423cb18dd641ec14bc2f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Chris-Craft_Industries> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "416", "question": "Name the sitcoms whose network's owning company is Chris-Craft Industries?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chris-Craft_Industries", "label": "Chris-Craft Industries"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owningCompany", "label": "owning company"}, {"uri": "http://dbpedia.org/ontology/network", "label": "network"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "sitcoms"}], "id": "e9433939da964198814e9dcd3e3cdc47"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}", "SerialNumber": "417", "question": "Which astronauts went on the Gemini 8 mission?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gemini_8", "label": "Gemini 8"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mission", "label": "mission"}, {"uri": "http://dbpedia.org/ontology/Astronaut", "label": "astronaut"}], "id": "dbc798f969d840c7b737048f657342d2"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Lightning_McQueen> <http://dbpedia.org/ontology/voice> ?x . ?x <http://dbpedia.org/ontology/developer> ?uri  . }", "SerialNumber": "418", "question": "How many developers have games where I can hear Lightning McQueen?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lightning_McQueen", "label": "Lightning McQueen"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/voice", "label": "hear"}, {"uri": "http://dbpedia.org/ontology/developer", "label": "developer"}], "id": "00da309171bc4424aad2bbb3071aee17"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Caroline_Augusta_Foley_Rhys_Davids> <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Buddhism> }", "SerialNumber": "421", "question": "Does Caroline Augusta Foley Rhys Davids study Buddhism?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Caroline_Augusta_Foley_Rhys_Davids", "label": "Caroline Augusta Foley Rhys Davids"}, {"uri": "http://dbpedia.org/resource/Buddhism", "label": "Buddhism"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/field", "label": "study"}], "id": "115415a95f22482aa6e5441ccf0b6f31"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Nebraska> <http://dbpedia.org/ontology/language> ?x . ?x <http://dbpedia.org/property/region> ?uri  . }", "SerialNumber": "423", "question": "In how many other states do people live, whose languages are spoken in Nebraska?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Nebraska", "label": "Nebraska"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/language", "label": "language"}, {"uri": "http://dbpedia.org/property/region", "label": "states"}], "id": "4d672dceaf7f4e9382ae34c3623f7b85"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/First_Church_of_Christ,_Scientist_(Pittsburgh)> <http://dbpedia.org/property/locationTown> ?x . ?x <http://dbpedia.org/ontology/founder> ?uri  . }", "SerialNumber": "424", "question": "Who founded the city where First Church of Christ, Scientist is located?", "entity mapping": [{"uri": "http://dbpedia.org/resource/First_Church_of_Christ,_Scientist_(Pittsburgh)", "label": "First Church of Christ, Scientist"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/locationTown", "label": "located"}, {"uri": "http://dbpedia.org/ontology/founder", "label": "founded"}], "id": "366d5c6e16434f55ad841357ad55f327"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cam_Plante> <http://dbpedia.org/property/playedFor> ?uri. <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri} ", "SerialNumber": "428", "question": "Name the team for which Cam Plante played for which were also the tenants of MasterCard center ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cam_Plante", "label": "Cam Plante"}, {"uri": "http://dbpedia.org/resource/MasterCard_Centre", "label": "mastercard"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/playedFor", "label": "played for"}, {"uri": "http://dbpedia.org/property/tenants", "label": "tenants"}], "id": "24e7a1c8ce674304a0400059c245e3d3"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carmel_Winery> <http://dbpedia.org/property/locationCountry> ?uri } ", "SerialNumber": "430", "question": "Where is Carmel Winery?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Carmel_Winery", "label": "Carmel Winery"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/locationCountry", "label": "Where"}], "id": "89ed257c1a244e339c0b5129de2cbce9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/stadium> <http://dbpedia.org/resource/Nea_Smyrni_Stadium> . ?x <http://dbpedia.org/property/stadium> ?uri  . }", "SerialNumber": "432", "question": "List the stadium of the teams which uses Nea Smyrni  as one of the stadium ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Nea_Smyrni_Stadium", "label": "stadium smyrni"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/stadium", "label": "stadium"}, {"uri": "http://dbpedia.org/property/stadium", "label": "stadium"}], "id": "a7070d6a40cf48d4bf91099e23350ddf"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ingmar_Bergman> <http://dbpedia.org/property/awards> ?uri. <http://dbpedia.org/resource/James_F._O'Brien> <http://dbpedia.org/ontology/award> ?uri} ", "SerialNumber": "433", "question": "What awards have been awarded both to Ingmar bergman and James O'Brien?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ingmar_Bergman", "label": "Ingmar bergman"}, {"uri": "http://dbpedia.org/resource/James_F._O'Brien", "label": "o'brien james"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/awards", "label": "awarded"}, {"uri": "http://dbpedia.org/ontology/award", "label": "awarded"}], "id": "4df17f35aff7484b8f81fb0f1fafd50f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Militia> . ?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)>  . }", "SerialNumber": "434", "question": "List the colonel with branch as Militia ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Militia", "label": "Militia"}, {"uri": "http://dbpedia.org/resource/Colonel_(United_States)", "label": "colonel"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/branch", "label": "branch"}, {"uri": "http://dbpedia.org/property/rank", "label": "with"}], "id": "378830c0afdf4906b1f824f35f822318"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Toronto>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "435", "question": "How many companies are located in Toronto ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto", "label": "Toronto"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locationCity", "label": "located"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "companies"}], "id": "bc0a6b36790b465ea463c2ec3ead0fda"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mike_Salmon> <http://dbpedia.org/property/currentclub> ?x . ?x <http://dbpedia.org/property/chairman> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}", "SerialNumber": "436", "question": "Name the chairman of the soccer club for which Mike Salmon currently plays?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mike_Salmon", "label": "Mike Salmon"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentclub", "label": "currently plays"}, {"uri": "http://dbpedia.org/property/chairman", "label": "chairman"}, {"uri": "http://dbpedia.org/ontology/SoccerClub", "label": "soccer club"}], "id": "0ce4ccee1f484ba7b18881040f845d12"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Julius_Caesar> . ?x <http://dbpedia.org/ontology/successor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "SerialNumber": "437", "question": "Who is a successor of Kingship whose parents were Julius Caesar?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Julius_Caesar", "label": "Julius Caesar"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/parent", "label": "parent"}, {"uri": "http://dbpedia.org/ontology/successor", "label": "successor"}, {"uri": "http://dbpedia.org/ontology/Royalty", "label": "Kingship"}], "id": "2c3ccc326827477db7ba435118944617"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/basedOn> <http://dbpedia.org/resource/Mary_Poppins> . ?x <http://dbpedia.org/ontology/author> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}", "SerialNumber": "438", "question": "Who wrote the musical based on Mary Poppins?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mary_Poppins", "label": "Mary Poppins"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/basedOn", "label": "based on"}, {"uri": "http://dbpedia.org/ontology/author", "label": "wrote"}, {"uri": "http://dbpedia.org/ontology/Musical", "label": "musical"}], "id": "e6871a80517d4e3a993fc667347d30aa"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/property/discipline> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}", "SerialNumber": "440", "question": "Which fields are covered by academic journals in the US?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": "US"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/country", "label": "in"}, {"uri": "http://dbpedia.org/property/discipline", "label": "fields"}, {"uri": "http://dbpedia.org/ontology/AcademicJournal", "label": "academic journal"}], "id": "a60454067d7b4592bc6169e7a7d9a6cd"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Indian_Ocean> . ?uri <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "441", "question": "What river ends in Indian Ocean and also starts somewhere in Zambia?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Indian_Ocean", "label": "Indian Ocean"}, {"uri": "http://dbpedia.org/resource/Zambia", "label": "Zambia"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/riverMouth", "label": "river"}, {"uri": "http://dbpedia.org/ontology/sourceCountry", "label": "starts"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "198cb4233ecc4e64a23d2ce9e2c20cc9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Panathinaikos_F.C.> . ?x <http://dbpedia.org/property/residence> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "442", "question": "Where do the people, famous for the Panathinaikos FC reside?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Panathinaikos_F.C.", "label": "Panathinaikos FC"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/knownFor", "label": "famous"}, {"uri": "http://dbpedia.org/property/residence", "label": "reside"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "7f2f6e1a38ab4f07be61d11e39732b54"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Clamp_(manga_artists)> . ?x <http://dbpedia.org/ontology/voice> ?uri  . }", "SerialNumber": "443", "question": "How many people have voiced characters sculpted by Clamp?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Clamp_(manga_artists)", "label": "Clamp"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/creator", "label": "sculpted"}, {"uri": "http://dbpedia.org/ontology/voice", "label": "voice"}], "id": "6d4c25756b6346589f78aefa48a0d4ec"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Raymond_Conner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "444", "question": "To which company does Raymond Conner is critical to?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Raymond_Conner", "label": "Raymond Conner"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/keyPeople", "label": "critical"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "a78468ab14af48d8a7e5c8649b7b7da6"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/El\u017cbieta_Czartoryska_(1905\u20131989)> <http://dbpedia.org/property/deathPlace> ?uri. <http://dbpedia.org/resource/Charles_Journet> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "SerialNumber": "446", "question": "What is the death place of the Elbieta Czartoryska which is also place of birth of the Charles Journet", "entity mapping": [{"uri": "http://dbpedia.org/resource/El\u017cbieta_Czartoryska_(1905\u20131989)", "label": "czartoryska"}, {"uri": "http://dbpedia.org/resource/Charles_Journet", "label": "Charles Journet"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/deathPlace", "label": "death place"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "place"}], "id": "46ae412ded1647d0af1f52f6db1953d7"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philippe_Tesni\u00e8re> <http://dbpedia.org/property/placeOfDeath> ?uri. <http://dbpedia.org/resource/Judson_Huss> <http://dbpedia.org/property/placeOfDeath> ?uri . }", "SerialNumber": "448", "question": "In which country did Philippe tesnire and judson huss die?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Philippe_Tesni\u00e8re", "label": "Philippe tesnire"}, {"uri": "http://dbpedia.org/resource/Judson_Huss", "label": "judson huss"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfDeath", "label": "die"}, {"uri": "http://dbpedia.org/property/placeOfDeath", "label": "die"}], "id": "be2d43507d27490580cef0ab4aca9355"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/voices> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "449", "question": "Which shows are voiced be US citizens?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": "US"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/stateOfOrigin", "label": "citizens"}, {"uri": "http://dbpedia.org/property/voices", "label": "voiced"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "ce1b21f49b74424fb4c6ab11cc56fedd"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Jim_Dooley> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmusementParkAttraction>}", "SerialNumber": "450", "question": "Who has starred in the amusement park attractions where Jim Dooley was performing?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jim_Dooley", "label": "Jim Dooley"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/music", "label": "performing"}, {"uri": "http://dbpedia.org/property/starring", "label": "starred"}, {"uri": "http://dbpedia.org/ontology/AmusementParkAttraction", "label": "amusement park attraction"}], "id": "9d8c57c836a840a28c591ca7d8a2de8d"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Derg> <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/Ethiopia> }", "SerialNumber": "451", "question": "Was Derg the anthem of Ethopia?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Derg", "label": "Derg"}, {"uri": "http://dbpedia.org/resource/Ethiopia", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/anthem", "label": "anthem"}], "id": "e56c54175e0941fd9afe385c983ce16a"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Mario_Oliverio> } ", "SerialNumber": "453", "question": "what region is governed by Mario Olivero?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mario_Oliverio", "label": "Mario Olivero"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/leader", "label": "governed"}], "id": "ea7a3cc64bcc4334ad16e18130602c7f"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Vitis_vinifera> . ?x <http://dbpedia.org/ontology/origin> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "SerialNumber": "459", "question": "Count the different origins of members of the Vitis Vinifera species.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Vitis_vinifera", "label": "Vitis Vinifera"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/species", "label": "species"}, {"uri": "http://dbpedia.org/ontology/origin", "label": "origin"}, {"uri": "http://dbpedia.org/ontology/Place", "label": " "}], "id": "96454da162fa47f48d85f23ed72f4933"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Manchester_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "SerialNumber": "463", "question": "Where do the airlines garrisoned at Manchester airport fly to?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Manchester_Airport", "label": "Manchester airport"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/headquarter", "label": "garrisoned"}, {"uri": "http://dbpedia.org/property/destinations", "label": "fly to"}, {"uri": "http://dbpedia.org/ontology/Airline", "label": "airline"}], "id": "4c039e3d1eab4b4e906e046cc3096bbc"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Doctor_Who_Extra> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "466", "question": "List the show related to the which was followed by Doctor Who Extra?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Doctor_Who_Extra", "label": "Doctor Who Extra"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/subsequentWork", "label": "followed by"}, {"uri": "http://dbpedia.org/ontology/related", "label": "related"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "09ec259ff20c48b09885b7efccb5acd0"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gaza\u2013Israel_conflict> <http://dbpedia.org/property/result> ?uri. <http://dbpedia.org/resource/Qaqun> <http://dbpedia.org/property/place> ?uri} ", "SerialNumber": "470", "question": "What is the result of the GazaIsrael conflict is also  the  place of the Qaqun?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gaza\u2013Israel_conflict", "label": ""}, {"uri": "http://dbpedia.org/resource/Qaqun", "label": "Qaqun"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/result", "label": "result"}, {"uri": "http://dbpedia.org/property/place", "label": "place"}], "id": "03e2743086c3467287d376e6e7e01dea"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Delhi> . ?x <http://dbpedia.org/property/party> ?uri  . }", "SerialNumber": "471", "question": "Members of how many political parties have died in Delhi?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Delhi", "label": "Delhi"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfDeath", "label": "died in"}, {"uri": "http://dbpedia.org/property/party", "label": "parties"}], "id": "7a22387ad6c34f20a9681b0d18d27390"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Gatwick_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "SerialNumber": "472", "question": "To how many places does the airlines fly, whose head office is located at the Gatwick Airport?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gatwick_Airport", "label": "Gatwick Airport"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/headquarter", "label": "head office"}, {"uri": "http://dbpedia.org/property/destinations", "label": "fly"}, {"uri": "http://dbpedia.org/ontology/Place", "label": "place"}], "id": "80727b167d9247f4a7228327aa7d521a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/National_Geographic_(magazine)> . ?x <http://dbpedia.org/ontology/residence> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Photographer>}", "SerialNumber": "475", "question": "Where do current famous NatGeo photographers live?", "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Geographic_(magazine)", "label": "NatGeo"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/knownFor", "label": "famous"}, {"uri": "http://dbpedia.org/ontology/residence", "label": "live"}, {"uri": "http://dbpedia.org/ontology/Photographer", "label": "photographer"}], "id": "6665d7d8a4f34fc1953ceda037ad3451"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Italy> . ?x <http://dbpedia.org/property/awards> ?uri  . }", "SerialNumber": "476", "question": "How many awards have been given to Italians?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Italy", "label": "Itali"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/birthPlace", "label": "ans"}, {"uri": "http://dbpedia.org/property/awards", "label": "awards"}], "id": "0e7a98d81f2644ccad9cf21e77378c3b"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Malaysia> }", "SerialNumber": "478", "question": "Is Hyundai Lavita assembled in Malaysia?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Hyundai_Lavita", "label": "Hyundai Lavita"}, {"uri": "http://dbpedia.org/resource/Malaysia", "label": "Malaysia"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/assembly", "label": "assembled"}], "id": "576ea9f202d7463cb793f77628511e97"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/majorShrine> <http://dbpedia.org/resource/Pozna\u0144> . ?x <http://dbpedia.org/ontology/majorShrine> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}", "SerialNumber": "483", "question": "List the shrines of the saint whose one of the shrine is Ponza ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pozna\u0144", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/majorShrine", "label": "shrine"}, {"uri": "http://dbpedia.org/ontology/majorShrine", "label": "shrine"}, {"uri": "http://dbpedia.org/ontology/Saint", "label": "saint"}], "id": "cf7aca2e48a445299efbf5664c867e8e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Dalilah_Sappenfield> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . }", "SerialNumber": "485", "question": "Who is the former partner of the pupil of Dalilah Sappenfield?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dalilah_Sappenfield", "label": "Dalilah Sappenfield"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/coach", "label": "pupil"}, {"uri": "http://dbpedia.org/ontology/formerPartner", "label": "former partner"}], "id": "1422749d46f24fb7bf292b5370dcae01"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Morphine>  . }", "SerialNumber": "486", "question": "Who died due to Morphine ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Morphine", "label": "Morphine"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/deathCause", "label": "died due"}], "id": "44bacf63913b413c97f15d7f4de91547"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Tower_of_London> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "488", "question": "How many people were opponents of the ones buried in the tower of London?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tower_of_London", "label": "tower of London"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/restingPlace", "label": "buried in"}, {"uri": "http://dbpedia.org/ontology/opponent", "label": "opponent"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "8f2af1e74b9f40ac84e66b6aea4f3770"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stanford_Cardinal> <http://dbpedia.org/ontology/university> ?uri. <http://dbpedia.org/resource/Jim_Wylie> <http://dbpedia.org/ontology/university> ?uri . }", "SerialNumber": "489", "question": "Name the common university of the Cardinal and Jim Wylie?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Stanford_Cardinal", "label": "cardinal"}, {"uri": "http://dbpedia.org/resource/Jim_Wylie", "label": "Jim Wylie"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/university", "label": "university"}, {"uri": "http://dbpedia.org/ontology/university", "label": "university"}], "id": "dbf6b1fd3ef142aa8fa7dadd70dcd502"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Ursula_H\u00e4nle> . ?x <http://dbpedia.org/property/nationalOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Aircraft>}", "SerialNumber": "491", "question": "In which country did the planes designed by Ursula Hanle originate?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ursula_H\u00e4nle", "label": "Ursula Hanle"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/designer", "label": "designed"}, {"uri": "http://dbpedia.org/property/nationalOrigin", "label": "originate"}, {"uri": "http://dbpedia.org/ontology/Aircraft", "label": "planes"}], "id": "abc719a6e7a1435ba3b1472897a5249c"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Judge_Advocate_General's_Corps,_United_States_Army> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}", "SerialNumber": "493", "question": "From how many different institutes have the members of Judge Advocate General's Corps graduated?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Judge_Advocate_General's_Corps,_United_States_Army", "label": "Judge Advocate General 's Corps"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/militaryRank", "label": "members"}, {"uri": "http://dbpedia.org/ontology/almaMater", "label": "graduated"}, {"uri": "http://dbpedia.org/ontology/EducationalInstitution", "label": "institutes"}], "id": "e8328bd8391f448d93a1ea6a456e32dd"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Swedish_language> . ?uri <http://dbpedia.org/property/owners> <http://dbpedia.org/resource/Schibsted>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}", "SerialNumber": "494", "question": "Which newspaper owned by Schibsted is published in Swedish ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Swedish_language", "label": "swedish"}, {"uri": "http://dbpedia.org/resource/Schibsted", "label": "Schibsted"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/language", "label": "Swedish"}, {"uri": "http://dbpedia.org/property/owners", "label": "owned"}, {"uri": "http://dbpedia.org/ontology/Newspaper", "label": "newspaper"}], "id": "d06c3f86937f45449b1e81e9448f48ed"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Ethics> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "SerialNumber": "495", "question": "In how many different places have ehtics philosophers died?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ethics", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mainInterests", "label": "philosophers"}, {"uri": "http://dbpedia.org/property/placeOfDeath", "label": "died"}, {"uri": "http://dbpedia.org/ontology/Place", "label": "place"}], "id": "f2abcff9c290486ab8f1affd60f412f8"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Palang_Dharma_Party> <http://dbpedia.org/ontology/ideology> ?uri. <http://dbpedia.org/resource/Inthakin> <http://dbpedia.org/ontology/type> ?uri} ", "SerialNumber": "496", "question": "What political ideology of the Palang Dharma Party is relegion of Inthakin?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Palang_Dharma_Party", "label": "Palang Dharma Party"}, {"uri": "http://dbpedia.org/resource/Inthakin", "label": "Inthakin"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/ideology", "label": "ideology"}, {"uri": "http://dbpedia.org/ontology/type", "label": " "}], "id": "c7bac34e1c854968971d32c09b321bf0"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season> <http://dbpedia.org/ontology/ground> ?uri } ", "SerialNumber": "497", "question": "Where did Fort Lauderdale Strikers season of 16 take place?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season", "label": "Fort Lauderdale Strikers season of 16"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/ground", "label": "place"}], "id": "34130d2812d84c70bdaaf30ade9a2204"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Operation_Barbarossa> . ?x <http://dbpedia.org/ontology/relation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "498", "question": "What are some relatives of the people who fought in Operation Barbarossa?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Operation_Barbarossa", "label": "Operation Barbarossa"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/battle", "label": "fought"}, {"uri": "http://dbpedia.org/ontology/relation", "label": "relatives"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "a65384e0c6d64302868aa3c04c47d3e9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Iyasu_II> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Monarch>}", "SerialNumber": "503", "question": "Where is the king buried whose predecessor was Iyasu II?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Iyasu_II", "label": "Iyasu II"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/predecessor", "label": "predecessor"}, {"uri": "http://dbpedia.org/property/placeOfBurial", "label": "buried"}, {"uri": "http://dbpedia.org/ontology/Monarch", "label": "king"}], "id": "9b7b9393ba92438d807402980092a498"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Audie_Murphy> <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Arlington_National_Cemetery> }", "SerialNumber": "504", "question": "Is Audie Murphy buried in the Arlington national cementery?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Audie_Murphy", "label": "Audie Murphy"}, {"uri": "http://dbpedia.org/resource/Arlington_National_Cemetery", "label": "arlington national"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeofburial", "label": "buried"}], "id": "0f64ebf1ec944faa999a799ae051e373"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/Tokyo_Broadcasting_System> . ?x <http://dbpedia.org/property/writer> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "506", "question": "How many people have written stuff broadcasted on the Tokyo Broadcasting System?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tokyo_Broadcasting_System", "label": "Tokyo Broadcasting System"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/network", "label": "broadcasted"}, {"uri": "http://dbpedia.org/property/writer", "label": "written"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "9fcaa73b3dca47a9a3bf12a42abe54b7"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Raptors_905> <http://dbpedia.org/property/arena> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "SerialNumber": "508", "question": "How many more teams have rented the stadium used by Raptors 905?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Raptors_905", "label": "Raptors 905"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/arena", "label": " "}, {"uri": "http://dbpedia.org/ontology/tenant", "label": "rented"}, {"uri": "http://dbpedia.org/ontology/Stadium", "label": "stadium"}], "id": "609a310df5854bada8e182bcc9f2fee9"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/George_Beauchamp> . ?uri <http://dbpedia.org/ontology/instrument> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "SerialNumber": "509", "question": "Give me a count of musicians who play an instrument developed by George Beauchamp ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/George_Beauchamp", "label": "George Beauchamp"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/keyPeople", "label": "developed"}, {"uri": "http://dbpedia.org/ontology/instrument", "label": "instrument"}, {"uri": "http://dbpedia.org/ontology/MusicalArtist", "label": "musician"}], "id": "331ab7e173c740318ed2adfa0f08046b"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Saint_Lawrence_River> <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Kingston,_Ontario> }", "SerialNumber": "511", "question": "Does the St lawrence river start in Kingston, Ontario?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Saint_Lawrence_River", "label": "St lawrence river"}, {"uri": "http://dbpedia.org/resource/Kingston,_Ontario", "label": "Kingston, Ontario"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourceMountain", "label": "start"}], "id": "d4ed4754c8194ab69b712750149fdd7a"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/MTR> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }", "SerialNumber": "512", "question": "Give me an estimate of the number of manufacturers whose products are managed by MTR?", "entity mapping": [{"uri": "http://dbpedia.org/resource/MTR", "label": "MTR"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/operator", "label": "managed"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "manufacturer"}], "id": "3fe7d243d8064aadbe198b10a38cf9b4"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mac_OS_9> <http://dbpedia.org/ontology/developer> ?uri. <http://dbpedia.org/resource/Tiny_Tower> <http://dbpedia.org/property/distributor> ?uri . }", "SerialNumber": "517", "question": "What company developed Mac OS 9 and also brought Tiny Tower to the market?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mac_OS_9", "label": "Mac OS 9"}, {"uri": "http://dbpedia.org/resource/Tiny_Tower", "label": "Tiny Tower"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/developer", "label": "developed"}, {"uri": "http://dbpedia.org/property/distributor", "label": "market"}], "id": "51504ea36f364007a53aea8d7060e17d"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/VDE-Gallo_Records> <http://dbpedia.org/ontology/distributingLabel> ?x . ?x <http://dbpedia.org/property/currency> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "SerialNumber": "518", "question": "Which currency is primarily used by the company which is the distributing label of VDE-Gallo Records?", "entity mapping": [{"uri": "http://dbpedia.org/resource/VDE-Gallo_Records", "label": "VDE-Gallo Records"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/distributingLabel", "label": "distributing label"}, {"uri": "http://dbpedia.org/property/currency", "label": "currency"}, {"uri": "http://dbpedia.org/ontology/Organisation", "label": "company"}], "id": "3bdef03debd5421ab0cd7f4a3758b46b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Electric_Lady_Studios> . ?uri <http://dbpedia.org/property/associatedActs> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "519", "question": "Who all have been in bands which have recorded their work in the Electric Lady Studios?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Electric_Lady_Studios", "label": "Electric Lady Studios"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/recordedIn", "label": "recorded"}, {"uri": "http://dbpedia.org/property/associatedActs", "label": "bands"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "Who"}], "id": "13fc91a5ba564ac6aaa2be0d37c03aa1"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/If_(band)> . ?x <http://dbpedia.org/property/label> ?uri  . }", "SerialNumber": "520", "question": "What is the label of things produced by the band If?", "entity mapping": [{"uri": "http://dbpedia.org/resource/If_(band)", "label": "the band If"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/artist", "label": "produced by"}, {"uri": "http://dbpedia.org/property/label", "label": "label"}], "id": "30f39069de5b4672a6f01513ae7e3491"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Ridgewood,_New_Jersey>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "522", "question": "What people were born in Ridgewood, New Jersey?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ridgewood,_New_Jersey", "label": "Ridgewood, New Jersey"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/birthPlace", "label": "born in"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "ff87b9ebc25a4997a01aed4bac145920"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Fusajiro_Yamauchi>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "524", "question": "What is the company to which Fusajiro Yamauchi proprietor to ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fusajiro_Yamauchi", "label": "Fusajiro Yamauchi"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/foundedBy", "label": "proprietor"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "8b84e189a1384ad4bf36163f27e3acac"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/P\u014dmare_I> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }", "SerialNumber": "527", "question": "What is the POD of the successor of Pmare I ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/P\u014dmare_I", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/successor", "label": "successor"}, {"uri": "http://dbpedia.org/ontology/deathPlace", "label": "POD"}], "id": "54e96a6a9d9749f6878cac13550c192a"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Utopian_and_dystopian_fiction>  . }", "SerialNumber": "530", "question": "How many utopian and dystopian fiction books are there?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Utopian_and_dystopian_fiction", "label": "utopian and dystopian fiction"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/literaryGenre", "label": "books"}], "id": "d0847ee1f87a43a88507df1216bc342b"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Westchester_Avenue> <http://dbpedia.org/property/counties> <http://dbpedia.org/resource/The_Bronx> }", "SerialNumber": "533", "question": "Does the Westchester Avenue fall under the Bronx?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Westchester_Avenue", "label": "Westchester Avenue"}, {"uri": "http://dbpedia.org/resource/The_Bronx", "label": "Bronx"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/counties", "label": "fall under"}], "id": "74a5cff93ee946babd0e69d98b975931"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Prime_Minister's_House_(Colombo)> . ?uri <http://dbpedia.org/ontology/leader> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}", "SerialNumber": "538", "question": "Which parties have their members live in the PM House, Colombo?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Prime_Minister's_House_(Colombo)", "label": "colombo"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/residence", "label": "live in"}, {"uri": "http://dbpedia.org/ontology/leader", "label": "members"}, {"uri": "http://dbpedia.org/ontology/PoliticalParty", "label": "parties"}], "id": "2c3d0f285c6140879c32fc68bf2d2cfb"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WTJC-LP> <http://dbpedia.org/property/format> ?uri } ", "SerialNumber": "542", "question": "On what subject does WTJC-LP air?", "entity mapping": [{"uri": "http://dbpedia.org/resource/WTJC-LP", "label": "WTJC-LP"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/format", "label": "subject"}], "id": "a1a2b9381ed049a882c87648db96c438"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Clan_McDuck> . ?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/American_Pekin_duck>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "SerialNumber": "548", "question": "Which fictional character's relative is Clan McDuck and belongs to American Pekin duck ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Clan_McDuck", "label": "Clan McDuck"}, {"uri": "http://dbpedia.org/resource/American_Pekin_duck", "label": "American Pekin duck"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/relatives", "label": "relative"}, {"uri": "http://dbpedia.org/ontology/species", "label": "belongs"}, {"uri": "http://dbpedia.org/ontology/FictionalCharacter", "label": "fictional character"}], "id": "7282c5f557974ec99165996f0b27200a"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Persian_Boy> <http://dbpedia.org/ontology/illustrator> <http://dbpedia.org/resource/Michelangelo> }", "SerialNumber": "549", "question": "Is michelangelo the painter of The Persian Boy?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Persian_Boy", "label": "The Persian Boy"}, {"uri": "http://dbpedia.org/resource/Michelangelo", "label": "michelangelo"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/illustrator", "label": "painter"}], "id": "9b04388b468a4460a8e15aacaadf7853"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Korean_Peninsula> <http://dbpedia.org/ontology/border> ?uri. <http://dbpedia.org/resource/Sodagreen> <http://dbpedia.org/ontology/country> ?uri} ", "SerialNumber": "552", "question": "Which boarder country of Korean Peninsula was the state of Sodagreen ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Korean_Peninsula", "label": "Korean Peninsula"}, {"uri": "http://dbpedia.org/resource/Sodagreen", "label": "Sodagreen"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/border", "label": "boarder country"}, {"uri": "http://dbpedia.org/ontology/country", "label": "state of"}], "id": "62461469fd01444f88e0d4d08359db98"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kelsey_Creek> <http://dbpedia.org/ontology/region> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . }", "SerialNumber": "553", "question": "Where is the capital of Kelsey Creek located?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kelsey_Creek", "label": "Kelsey Creek"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/region", "label": "located"}, {"uri": "http://dbpedia.org/ontology/countySeat", "label": "capital"}], "id": "7f6ce18d38014a87a073ee8285106c60"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Levon_Ashotovich_Grigorian> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }", "SerialNumber": "556", "question": "What does the famous relative of Levon Ashotovich Grigorian do for a living?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Levon_Ashotovich_Grigorian", "label": "Levon Ashotovich Grigorian"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/relatives", "label": "relative"}, {"uri": "http://dbpedia.org/ontology/occupation", "label": "living"}], "id": "b9d3a2fe75124f64855ddc9e0f97e76d"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/state> <http://dbpedia.org/resource/Metro_Manila> . ?x <http://dbpedia.org/property/athletics> ?uri  . }", "SerialNumber": "559", "question": "How many games are played at universities in Metro Manilla?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Metro_Manila", "label": "Metro Manill"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/state", "label": "in"}, {"uri": "http://dbpedia.org/property/athletics", "label": "played"}], "id": "3f0c5c6e16f44478976a62d32ee3a123"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Compaq> <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Software> }", "SerialNumber": "561", "question": "Is Compaq a software company?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Compaq", "label": "Compaq"}, {"uri": "http://dbpedia.org/resource/Software", "label": "software"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/industry", "label": "company"}], "id": "35616e0b45534d1ba5aa8c3514527462"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Bob_C._Riley> . ?uri <http://dbpedia.org/ontology/lieutenant> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}", "SerialNumber": "562", "question": "Name the president served by a lieutenant who succeeded Bob C Riley.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bob_C._Riley", "label": "Bob C Riley"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/predecessor", "label": "succeeded"}, {"uri": "http://dbpedia.org/ontology/lieutenant", "label": "lieutenant"}, {"uri": "http://dbpedia.org/ontology/President", "label": "president"}], "id": "039208f28c41401297caeb292230c23f"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Oskar_Blues_Brewery> <http://dbpedia.org/property/location> ?uri } ", "SerialNumber": "566", "question": "Where is Oskar Blues located ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Oskar_Blues_Brewery", "label": "Oskar Blues"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/location", "label": "located"}], "id": "b6fb2de828a94638a57cdb650825441c"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/FIS_Alpine_World_Ski_Championships_1950> <http://dbpedia.org/property/hostCity> <http://dbpedia.org/resource/Colorado> }", "SerialNumber": "567", "question": "Was the FIS Alpine World Ski Championship of 1950 held in Colorado?", "entity mapping": [{"uri": "http://dbpedia.org/resource/FIS_Alpine_World_Ski_Championships_1950", "label": "championship alpine world"}, {"uri": "http://dbpedia.org/resource/Colorado", "label": "Colorado"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/hostCity", "label": "held"}], "id": "3cd2c8b70c7849889e3c298974187aed"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Science_fiction> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "569", "question": "List the science fiction shows broadcasted on BBC HD ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Science_fiction", "label": "science fiction"}, {"uri": "http://dbpedia.org/resource/BBC_HD", "label": "BBC HD"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/genre", "label": " "}, {"uri": "http://dbpedia.org/ontology/network", "label": "broadcasted"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "06865b556f72412591e45e2b25e27d31"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Runes_of_Magic> . ?x <http://dbpedia.org/ontology/division> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "571", "question": "What is the division of the companies who make Runes of Magic?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Runes_of_Magic", "label": "Runes of Magic"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/products", "label": "make"}, {"uri": "http://dbpedia.org/ontology/division", "label": "division"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "companies"}], "id": "8f4dcf2dc41047969a71b87fbfef4cc4"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ramiro_Pe\u00f1a> <http://dbpedia.org/ontology/team> ?uri. <http://dbpedia.org/resource/Bruce_Bochy> <http://dbpedia.org/ontology/team> ?uri . }", "SerialNumber": "573", "question": "What common teams do Ramiro Pea and Bruce Bochy share?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ramiro_Pe\u00f1a", "label": "ramiro"}, {"uri": "http://dbpedia.org/resource/Bruce_Bochy", "label": "Bruce Bochy"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/team", "label": "team"}, {"uri": "http://dbpedia.org/ontology/team", "label": "team"}], "id": "bc77c3a5c2aa48beb648fd70de67488e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/TNT_(TV_channel)> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jeff_Conaway>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "574", "question": "In which sitcom did Jeff Conaway acted and had TNT as its network ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/TNT_(TV_channel)", "label": "TNT"}, {"uri": "http://dbpedia.org/resource/Jeff_Conaway", "label": "Jeff Conaway"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/network", "label": "network"}, {"uri": "http://dbpedia.org/ontology/starring", "label": "acted"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "sitcom"}], "id": "491b0f3480c14c608b26e8e745514b9a"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/John_Tory> . ?uri <http://dbpedia.org/property/location> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "SerialNumber": "576", "question": "How many buildings are located in the jurisdiction of John Tory?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Tory", "label": "John Tory"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/leaderName", "label": "jurisdiction"}, {"uri": "http://dbpedia.org/property/location", "label": "located"}, {"uri": "http://dbpedia.org/ontology/Building", "label": "building"}], "id": "323011153fec4b5ca0658605fdf7ff6e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/North_Caucasus_Railway> . ?x <http://dbpedia.org/ontology/servingRailwayLine> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Station>}", "SerialNumber": "577", "question": "Which railway line goes through the stations which are a part of the North Caucasus railway?", "entity mapping": [{"uri": "http://dbpedia.org/resource/North_Caucasus_Railway", "label": "North Caucasus railway"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/type", "label": "part"}, {"uri": "http://dbpedia.org/ontology/servingRailwayLine", "label": "railway line"}, {"uri": "http://dbpedia.org/ontology/Station", "label": "station"}], "id": "d988b1b86f7d4f20bb3fc106bb997062"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/London>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "SerialNumber": "579", "question": "What are some bands originating in London?", "entity mapping": [{"uri": "http://dbpedia.org/resource/London", "label": "London"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/hometown", "label": "originating"}, {"uri": "http://dbpedia.org/ontology/Band", "label": "band"}], "id": "0200198676244b77993641150454251c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Creatures_(company)> . ?uri <http://dbpedia.org/property/composer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "SerialNumber": "582", "question": "What are some video games whose music is composed by an employ of the company Creatures?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Creatures_(company)", "label": "Creatures"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/occupation", "label": "employ"}, {"uri": "http://dbpedia.org/property/composer", "label": "composed"}, {"uri": "http://dbpedia.org/ontology/VideoGame", "label": "video game"}], "id": "4d2907c9a4124f3097f04807bcef9d19"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "584", "question": "Which televion show's theme music was given by Ron Grainer and is broadcasted by BBC HD ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ron_Grainer", "label": "Ron Grainer"}, {"uri": "http://dbpedia.org/resource/BBC_HD", "label": "BBC HD"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/themeMusicComposer", "label": "theme music"}, {"uri": "http://dbpedia.org/ontology/network", "label": "broadcasted"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "televion show"}], "id": "c949eeb67a4c448589588ee0e2862b8d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/J._P._Paris\u00e9> <http://dbpedia.org/property/playedFor> ?uri. <http://dbpedia.org/resource/Bert_McCaffrey> <http://dbpedia.org/ontology/formerTeam> ?uri . }", "SerialNumber": "585", "question": "What team did J P Paris was former team of Bert McCaffrey play for?", "entity mapping": [{"uri": "http://dbpedia.org/resource/J._P._Paris\u00e9", "label": "paris"}, {"uri": "http://dbpedia.org/resource/Bert_McCaffrey", "label": "Bert McCaffrey"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/playedFor", "label": "team"}, {"uri": "http://dbpedia.org/ontology/formerTeam", "label": "former team"}], "id": "c251f7bc65ec4dc9a1b5611b34395b65"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Thomas_Helwys> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "587", "question": "List the opponents of the relatives of Thomas Helwys?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Thomas_Helwys", "label": "Thomas Helwys"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relation", "label": "relatives"}, {"uri": "http://dbpedia.org/ontology/opponent", "label": "opponent"}, {"uri": "http://dbpedia.org/ontology/Person", "label": " "}], "id": "7d7c76e45ef64f46920bd1841c5aab92"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Queer_as_Folk_(UK_TV_series)> <http://dbpedia.org/ontology/producer> ?x . ?x <http://dbpedia.org/property/notableworks> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "592", "question": "What are some other great things by the person who produced Queer as Folk?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Queer_as_Folk_(UK_TV_series)", "label": "Queer as Folk"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/producer", "label": "produced"}, {"uri": "http://dbpedia.org/property/notableworks", "label": "great things"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "person"}], "id": "96c4bef12a134fb8bb1ac835d064c51a"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Madison> <http://dbpedia.org/ontology/relation> ?uri. <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789> <http://dbpedia.org/property/leader> ?uri} ", "SerialNumber": "595", "question": "Which relative of George Madison was the leader of United States House of Representatives elections, 1788 and 1789 ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/George_Madison", "label": "George Madison"}, {"uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789", "label": "United States House of Representatives elections, 1788 and 1789"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relation", "label": "relative"}, {"uri": "http://dbpedia.org/property/leader", "label": "leader"}], "id": "188d75500ece496ca5e4f31ef1d853e0"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/nominee> ?uri. <http://dbpedia.org/resource/Omar_D._Conger> <http://dbpedia.org/property/order> ?uri} ", "SerialNumber": "600", "question": "Name the profession of Oamr D Conger for which Jack Ryan was also nominated ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)", "label": "Jack Ryan"}, {"uri": "http://dbpedia.org/resource/Omar_D._Conger", "label": "conger"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/nominee", "label": "nominated"}, {"uri": "http://dbpedia.org/property/order", "label": "profession"}], "id": "7a064f0bfba14e8da7581b3b362b0a37"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mathura\u2013Vadodara_Section> <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Vadodara_Junction_railway_station> }", "SerialNumber": "602", "question": "Does the Vadodara Railway station lie at the end of the Mathura Vadodara route?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mathura\u2013Vadodara_Section", "label": "vadodara mathura"}, {"uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station", "label": "vadodara station railway"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/routeEnd", "label": "route end"}], "id": "cb70f9c4ab6e46b9bb6781e259febc55"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Solon_Spencer_Beman> . ?x <http://dbpedia.org/property/locationTown> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "SerialNumber": "605", "question": "In which city are buildings by Solon Spencer Beman found?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Solon_Spencer_Beman", "label": "Solon Spencer Beman"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/architect", "label": "found"}, {"uri": "http://dbpedia.org/property/locationTown", "label": "city"}, {"uri": "http://dbpedia.org/ontology/Building", "label": "building"}], "id": "2fd09016a75d42d4b3601fc9712d3ae5"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Royal_Society> . ?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Georg_Meissner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "SerialNumber": "606", "question": "Name the scientist who was the winner of Royal Society award and had Georg Meissner as his doctoral advisor ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_Society", "label": "Royal Society"}, {"uri": "http://dbpedia.org/resource/Georg_Meissner", "label": "Georg Meissner"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/prizes", "label": "award"}, {"uri": "http://dbpedia.org/property/doctoralAdvisor", "label": "doctoral advisor"}, {"uri": "http://dbpedia.org/ontology/Scientist", "label": "scientist"}], "id": "1df69aaf84db4e6ebf8479f68c52d2fe"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Diplomacy> . ?x <http://dbpedia.org/property/religion> ?uri  . }", "SerialNumber": "609", "question": "How many religions are practiced by diplomats?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Diplomacy", "label": "diplomats"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/profession", "label": "practiced"}, {"uri": "http://dbpedia.org/property/religion", "label": "religion"}], "id": "1b089c7e3c454ff898540e7d20d840c6"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/James_B._Belford> . ?x <http://dbpedia.org/ontology/region> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}", "SerialNumber": "613", "question": "Where is the senator from whose successor was James belford?", "entity mapping": [{"uri": "http://dbpedia.org/resource/James_B._Belford", "label": "James"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/successor", "label": "successor"}, {"uri": "http://dbpedia.org/ontology/region", "label": "Where"}, {"uri": "http://dbpedia.org/ontology/Senator", "label": "senator"}], "id": "b7c61495bc5c42969a8ec600aea66096"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls>  . }", "SerialNumber": "621", "question": "How many ", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chicago_Bulls", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/team", "label": ""}], "id": "29d041b6917e47cbbcc098c7a848a397"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/cityServed> <http://dbpedia.org/resource/San_Francisco> . ?uri <http://dbpedia.org/property/hubs> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "SerialNumber": "624", "question": "Name the airlines which have a hub in airport in SF?", "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Francisco", "label": "SF"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/cityServed", "label": "airport"}, {"uri": "http://dbpedia.org/property/hubs", "label": "hub"}, {"uri": "http://dbpedia.org/ontology/Airline", "label": "airline"}], "id": "60f31d985aed488e9d589db655e932ad"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Waxiang_people> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}", "SerialNumber": "628", "question": "What is the religion of the ethnic group to which the relatives of Waxiang people belong?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Waxiang_people", "label": "Waxiang people"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/related", "label": "relatives"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}, {"uri": "http://dbpedia.org/ontology/EthnicGroup", "label": "ethnic group"}], "id": "b955cb31b2e74d689d1313c1238b9510"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bogdanu\u0161a> <http://dbpedia.org/ontology/wineRegion> ?uri. <http://dbpedia.org/resource/Upper_Neretva> <http://dbpedia.org/ontology/mouthCountry> ?uri} ", "SerialNumber": "629", "question": "Which wine region of Bogdanua is the mouth country of Upper Neretva ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bogdanu\u0161a", "label": ""}, {"uri": "http://dbpedia.org/resource/Upper_Neretva", "label": "Upper Neretva"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/wineRegion", "label": "wine region"}, {"uri": "http://dbpedia.org/ontology/mouthCountry", "label": "mouth country"}], "id": "6635a5b9155b48f792eef26dfc0df7d4"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Charles_Drummond_Ellis> } ", "SerialNumber": "630", "question": "Under whom did Charles Drummond Ellis do his PhD?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles_Drummond_Ellis", "label": "Charles Drummond Ellis"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/doctoralStudent", "label": "PhD"}], "id": "990ab53fdb8b485cbcd019106a15fdf2"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Pugh> <http://dbpedia.org/property/associatedActs> ?uri. <http://dbpedia.org/resource/Alana_Stewart> <http://dbpedia.org/ontology/spouse> ?uri} ", "SerialNumber": "632", "question": "Which associat of Martin Pugh is also married to Alana Stewert ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Martin_Pugh", "label": "Martin Pugh"}, {"uri": "http://dbpedia.org/resource/Alana_Stewart", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/associatedActs", "label": "associat"}, {"uri": "http://dbpedia.org/ontology/spouse", "label": "married to"}], "id": "985720996060414598cdbaa9aaacff57"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/prospectTeam> <http://dbpedia.org/resource/Toronto_Marlies> . ?x <http://dbpedia.org/property/draftTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "634", "question": "What is the drafted team of the people expected to join toronto marlies?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto_Marlies", "label": "toronto marlies"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/prospectTeam", "label": "expected to join"}, {"uri": "http://dbpedia.org/property/draftTeam", "label": "drafted team"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "498184a91d854ed990f032d429a05ca2"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_H._Smith_(Connecticut)> <http://dbpedia.org/ontology/restingPlace> ?uri. <http://dbpedia.org/resource/Alfred_N._Phillips> <http://dbpedia.org/property/birthPlace> ?uri . }", "SerialNumber": "635", "question": "What city in the US was Alfred Phillips born in, and is the resting place of William Smith?", "entity mapping": [{"uri": "http://dbpedia.org/resource/William_H._Smith_(Connecticut)", "label": "william smith"}, {"uri": "http://dbpedia.org/resource/Alfred_N._Phillips", "label": "phillips alfred"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/restingPlace", "label": "resting place"}, {"uri": "http://dbpedia.org/property/birthPlace", "label": "born in"}], "id": "0a162d878e5549cd8ae6dc4f7072b4f6"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Jeffery> <http://dbpedia.org/property/primeminister> ?uri. <http://dbpedia.org/resource/William_Deane> <http://dbpedia.org/ontology/primeMinister> ?uri} ", "SerialNumber": "636", "question": "Who is the prime minister of Michael Jeffery who is also the minister of Williuam Deane ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Jeffery", "label": "Michael Jeffery"}, {"uri": "http://dbpedia.org/resource/William_Deane", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/primeminister", "label": "minister"}, {"uri": "http://dbpedia.org/ontology/primeMinister", "label": "prime minister"}], "id": "84c03af6b5c245db868cbc950af922c2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/lieutenant> <http://dbpedia.org/resource/Richard_Winn> . ?x <http://dbpedia.org/property/appointer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Governor>}", "SerialNumber": "637", "question": "Who appointed the governor under whom Richard Winn works?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Richard_Winn", "label": "Richard Winn"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/lieutenant", "label": "works"}, {"uri": "http://dbpedia.org/property/appointer", "label": "appointed"}, {"uri": "http://dbpedia.org/ontology/Governor", "label": "governor"}], "id": "f5a63f5184f9424c9270d397df5f2af4"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Edsel_Ranger> . ?x <http://dbpedia.org/property/parent> ?uri  . }", "SerialNumber": "643", "question": "Which company owns the manufacturer of the Edsel Ranger?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Edsel_Ranger", "label": "Edsel Ranger"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/products", "label": "company"}, {"uri": "http://dbpedia.org/property/parent", "label": "manufacturer"}], "id": "67ecca468f0c460ab67ebee020cb7268"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Menora_Tunnel> <http://dbpedia.org/property/operator> ?x . ?x <http://dbpedia.org/property/hubs> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "SerialNumber": "644", "question": "Which are the major hubs of airline which operates the Menora Tunnel?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Menora_Tunnel", "label": "Menora Tunnel"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/operator", "label": "operates"}, {"uri": "http://dbpedia.org/property/hubs", "label": "hubs"}, {"uri": "http://dbpedia.org/ontology/Airline", "label": "airline"}], "id": "db326f887c6646c28e21a7483a238e7b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society> . ?uri <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Cape_Town>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "SerialNumber": "645", "question": "Name a scientist whose official residence is Cape Town and also won a gold medal at the Royal Astronomical Society ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society", "label": "astronomical society"}, {"uri": "http://dbpedia.org/resource/Cape_Town", "label": "Cape Town"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/prizes", "label": "won a gold medal"}, {"uri": "http://dbpedia.org/property/residence", "label": "residence"}, {"uri": "http://dbpedia.org/ontology/Scientist", "label": "scientist"}], "id": "ec18ccd4be91486aa5253f7a802da354"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/John_McEwen> . ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ph\u1ea1m_V\u0103n_\u0110\u1ed3ng> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "646", "question": "What is the military conflict whose commanders are John McEwen and Phm Vn ng?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_McEwen", "label": "John McEwen"}, {"uri": "http://dbpedia.org/resource/Ph\u1ea1m_V\u0103n_\u0110\u1ed3ng", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/commander", "label": "commander"}, {"uri": "http://dbpedia.org/ontology/commander", "label": "commander"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "military conflict"}], "id": "0b3d0e13d8b3401a856b23b0fc75529c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/deathCause> <http://dbpedia.org/resource/Suicide_by_hanging> . ?x <http://dbpedia.org/property/citizenship> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>}", "SerialNumber": "647", "question": "In which countries have models hanged themselves?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Suicide_by_hanging", "label": "hanged themselves"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/deathCause", "label": "hanged"}, {"uri": "http://dbpedia.org/property/citizenship", "label": "countries"}, {"uri": "http://dbpedia.org/ontology/Model", "label": "model"}], "id": "1b8c3dffd3644c3bbd459adb51ae437e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/carries> <http://dbpedia.org/resource/Motor_vehicle> . ?x <http://dbpedia.org/property/crosses> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "SerialNumber": "648", "question": "Bridges over what can carry vehicles?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Motor_vehicle", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/carries", "label": "carry"}, {"uri": "http://dbpedia.org/property/crosses", "label": "over"}, {"uri": "http://dbpedia.org/ontology/Bridge", "label": "Bridge"}], "id": "8a41604d7495428fa67cccf0d3789635"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/West_Berkshire_Council> . ?uri <http://dbpedia.org/property/city> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "SerialNumber": "653", "question": "Count the number of schools which are in a city governed by the West Berkshire Council?", "entity mapping": [{"uri": "http://dbpedia.org/resource/West_Berkshire_Council", "label": "West Berkshire Council"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/leaderName", "label": "governed"}, {"uri": "http://dbpedia.org/property/city", "label": "city"}, {"uri": "http://dbpedia.org/ontology/School", "label": "school"}], "id": "aa3079fefe4f4e10a2d8ca21b1b91900"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Early_in_the_Morning_and_Late_at_Night> <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Hank_Williams_Jr.> }", "SerialNumber": "654", "question": "Did Hank Williams Jr. make Early in the Morning and Late at Night?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Early_in_the_Morning_and_Late_at_Night", "label": "Early in the Morning and Late at Night"}, {"uri": "http://dbpedia.org/resource/Hank_Williams_Jr.", "label": "Hank Williams Jr."}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/musicalArtist", "label": "make"}], "id": "61ea6ede582149b797b26eb6e7d81466"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Indian_Standard_Time> . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "SerialNumber": "656", "question": "List some leaders of regions in the Indian Standard Time Zone?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Indian_Standard_Time", "label": "Indian Standard Time"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/timeZone", "label": "Time Zone"}, {"uri": "http://dbpedia.org/ontology/leaderName", "label": "leaders"}, {"uri": "http://dbpedia.org/ontology/Place", "label": "regions"}], "id": "090a2f17823f4673b945c4a938226989"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/New_York_City_FC> . ?uri <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Spain_national_football_team>  . }", "SerialNumber": "657", "question": "List the spanish football player in the NYC FC ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_City_FC", "label": "NYC FC"}, {"uri": "http://dbpedia.org/resource/Spain_national_football_team", "label": "spanish football"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentclub", "label": "player"}, {"uri": "http://dbpedia.org/property/nationalteam", "label": "player"}], "id": "e65c0a467ab640ffaacbfe397559a139"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Tony_Bennett> . ?uri <http://dbpedia.org/ontology/child> ?x  . }", "SerialNumber": "658", "question": "Who is the person whose child performed with Tony Bennett?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tony_Bennett", "label": "Tony Bennett"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/associatedActs", "label": "performed"}, {"uri": "http://dbpedia.org/ontology/child", "label": "child"}], "id": "390c756eecd94acfb6335abcaa91832a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/English_language> . ?uri <http://dbpedia.org/ontology/sourceCountry> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "659", "question": "Name the rivers originating from an English speaking nation?", "entity mapping": [{"uri": "http://dbpedia.org/resource/English_language", "label": "English"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/officialLanguage", "label": "speaking"}, {"uri": "http://dbpedia.org/ontology/sourceCountry", "label": "originating"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "4c95fa0cb00b42b29b9f111561804b5b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Ultimate_Fighter:_Brazil_2> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/property/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "663", "question": "Which cities were in the TV Show which came after The Ultimate Fighter: Brazil 2?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Ultimate_Fighter:_Brazil_2", "label": "The Ultimate Fighter: Brazil 2"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/subsequentWork", "label": "came after"}, {"uri": "http://dbpedia.org/property/city", "label": "in"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "TV Show"}], "id": "f860781f868d4a7f9f59ad56d60e1021"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/WCW_Mayhem> <http://dbpedia.org/property/venue> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "SerialNumber": "666", "question": "How many teams have used the stadium which hosted the WCW mayhem?", "entity mapping": [{"uri": "http://dbpedia.org/resource/WCW_Mayhem", "label": "WCW mayhem"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/venue", "label": "hosted"}, {"uri": "http://dbpedia.org/ontology/tenant", "label": "used"}, {"uri": "http://dbpedia.org/ontology/Stadium", "label": "stadium"}], "id": "85765cfbd20546b2a65b2cfc5e50cf3e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Marika_Gombitov\u00e1> . ?x <http://dbpedia.org/property/language> ?uri  . }", "SerialNumber": "667", "question": "Marika Gombitov makes songs in which languages?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Marika_Gombitov\u00e1", "label": "Marika Gombitov "}], "predicate mapping": [{"uri": "http://dbpedia.org/property/artist", "label": "songs"}, {"uri": "http://dbpedia.org/property/language", "label": "language"}], "id": "2f4493990eff40b794e67500a851e312"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Fred_Hoiberg> . ?uri <http://dbpedia.org/property/team> ?x  . }", "SerialNumber": "671", "question": "How many people have played for a club whose coach is Fred Hoiberg?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fred_Hoiberg", "label": "Fred Hoiberg"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/coach", "label": "coach"}, {"uri": "http://dbpedia.org/property/team", "label": "club"}], "id": "f297c53e8f6b4b54abee32483ecdf9a2"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Broadcast_syndication> . ?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "673", "question": "Name the TV show distributed by Broadcast Syndication and is broadcasted by comedy central ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Broadcast_syndication", "label": "Broadcast Syndication"}, {"uri": "http://dbpedia.org/resource/Comedy_Central", "label": "comedy central"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/distributor", "label": "distributed by"}, {"uri": "http://dbpedia.org/property/network", "label": "broadcasted"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "TV show"}], "id": "ff2c4d6fe5ce44f99d580e8a58235a3f"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Battle_of_the_Bulge> . ?x <http://dbpedia.org/ontology/relation> ?uri  . }", "SerialNumber": "674", "question": "How many relatives are there of people fought in the Battle of the Bulge?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Battle_of_the_Bulge", "label": "Battle of the Bulge"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/battles", "label": "battle"}, {"uri": "http://dbpedia.org/ontology/relation", "label": "relatives"}], "id": "f7e7d5fe2f2f43e7b214ca25b7e066a8"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Trial_(song)> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/One_of_These_Days_(instrumental)> <http://dbpedia.org/ontology/musicalArtist> ?uri . }", "SerialNumber": "676", "question": "What band made The trial and One of these days song?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Trial_(song)", "label": "The trial"}, {"uri": "http://dbpedia.org/resource/One_of_These_Days_(instrumental)", "label": "One of these days"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/artist", "label": "song"}, {"uri": "http://dbpedia.org/ontology/musicalArtist", "label": "band"}], "id": "16115d9103a74efaa5fcb54f18cbde0e"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Swimming_at_the_2008_Summer_Olympics_\u2013_Men's_400_metre_individual_medley> <http://dbpedia.org/ontology/bronzeMedalist> ?uri } ", "SerialNumber": "678", "question": "Who was the bronze medalist of Swimming at the 2008 Summer Olympics  Men's 400 metre individual medley ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Swimming_at_the_2008_Summer_Olympics_\u2013_Men's_400_metre_individual_medley", "label": "individual swimming olympics summer medley"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/bronzeMedalist", "label": "bronze medalist"}], "id": "6fc805721dc8491585c10f0f2e2592d1"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Birdman_Enterprises> . ?x <http://dbpedia.org/property/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engineer>}", "SerialNumber": "680", "question": "Which country's people work in the Birdman enterprises?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Birdman_Enterprises", "label": "Birdman enterprises"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/institution", "label": "work in"}, {"uri": "http://dbpedia.org/property/nationality", "label": "country's"}, {"uri": "http://dbpedia.org/ontology/Engineer", "label": "people"}], "id": "a858757ca891436e99cb9089f22a2dca"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Mariveles,_Bataan> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }", "SerialNumber": "681", "question": "List the sports associated with Mariveles, Bataan?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mariveles,_Bataan", "label": "Mariveles, Bataan"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/city", "label": " "}, {"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}], "id": "c177520ccb0d4c55bc8fbdfc3bbb7506"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Estes> <http://dbpedia.org/ontology/debutTeam> ?uri. <http://dbpedia.org/resource/Dan_Shamash> <http://dbpedia.org/ontology/team> ?uri} ", "SerialNumber": "682", "question": "Which team of Dan Shamash is also the debutant team of John Estes ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Estes", "label": "John Estes"}, {"uri": "http://dbpedia.org/resource/Dan_Shamash", "label": "Dan Shamash"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/debutTeam", "label": "debutant team"}, {"uri": "http://dbpedia.org/ontology/team", "label": "team"}], "id": "b187393e6ede44b6997e10e532b27a42"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Toronto_Phantoms> <http://dbpedia.org/property/arena> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "SerialNumber": "683", "question": "Who is the tenant of the home stadium of Toronto Phantoms?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto_Phantoms", "label": "Toronto Phantoms"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/arena", "label": " "}, {"uri": "http://dbpedia.org/ontology/tenant", "label": "tenant"}, {"uri": "http://dbpedia.org/ontology/Stadium", "label": "stadium"}], "id": "8c5594e6c01f4f09988e31939b1c2799"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Little_Colorado_River> <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Grand_Canyon> }", "SerialNumber": "684", "question": "Does the little colorado river flow in the Grand Canyon?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Little_Colorado_River", "label": "little colorado river"}, {"uri": "http://dbpedia.org/resource/Grand_Canyon", "label": "Grand Canyon"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/mouthMountain", "label": "flow"}], "id": "6d42f2fa938d4141bd635759b1e81402"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Royal_Thai_Army> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "686", "question": "How many religions are followed by the people in the Royal Thai Army?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_Thai_Army", "label": "Royal Thai Army"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/militaryBranch", "label": "people"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}], "id": "827cb970029b44e580c1a44fcc272eb2"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Words_of_Gold> <http://dbpedia.org/ontology/computingPlatform> ?uri. <http://dbpedia.org/resource/Facebook_Messenger> <http://dbpedia.org/property/developer> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "687", "question": "What company made facebook messenger and is the platform where Words of Gold can be played?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Words_of_Gold", "label": "Words of Gold"}, {"uri": "http://dbpedia.org/resource/Facebook_Messenger", "label": "facebook messenger"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/computingPlatform", "label": "platform"}, {"uri": "http://dbpedia.org/property/developer", "label": "made"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "c2998ab4051f4bef95ec8cda3eae919f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Barq's> <http://dbpedia.org/ontology/related> ?x . ?x <http://dbpedia.org/property/locationCity> ?uri  . }", "SerialNumber": "689", "question": "In which cities can the beverage related to Barq's be found?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Barq's", "label": "Barq's"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/related", "label": "related"}, {"uri": "http://dbpedia.org/property/locationCity", "label": "cities"}], "id": "47d8d22a769c4d82a0f5e592f5fbdb24"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arsenal_Cider_House> <http://dbpedia.org/property/locationCity> ?uri } ", "SerialNumber": "690", "question": "In which city is  Arsenal Cider House ? located ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Arsenal_Cider_House", "label": "Arsenal Cider House"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/locationCity", "label": "located"}], "id": "34200ced3ab544579326e2fc505d3bc8"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/White_Plum_Asanga> . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . }", "SerialNumber": "691", "question": "From which state do the White Plum Asangas come?", "entity mapping": [{"uri": "http://dbpedia.org/resource/White_Plum_Asanga", "label": "White Plum Asanga"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/religion", "label": " "}, {"uri": "http://dbpedia.org/ontology/stateOfOrigin", "label": "state"}], "id": "43702440e850423dbdd82331dfc624be"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Board_game> . ?uri <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Mind_sport> . }", "SerialNumber": "694", "question": "Which board game can be said as a mind based game?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Board_game", "label": "board game"}, {"uri": "http://dbpedia.org/resource/Mind_sport", "label": "mind"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/genre", "label": " "}, {"uri": "http://dbpedia.org/ontology/genre", "label": " "}], "id": "d841f35943ac4a9cad0f6e33ba3a8650"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)> <http://dbpedia.org/property/firstAired> <http://dbpedia.org/resource/Albania> }", "SerialNumber": "695", "question": "Was GM first aired in Albania?", "entity mapping": [{"uri": "http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)", "label": ""}, {"uri": "http://dbpedia.org/resource/Albania", "label": "Albania"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/firstAired", "label": "first aired"}], "id": "0f40d8629b94485292d2bdb7107b1da7"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Joel_Quenneville> . ?uri <http://dbpedia.org/property/champion> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyLeague>}", "SerialNumber": "696", "question": "In which ice hockey league, did the team coached by Joel Quenneville win?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Joel_Quenneville", "label": "Joel Quenneville"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/headCoach", "label": "team coached"}, {"uri": "http://dbpedia.org/property/champion", "label": "win"}, {"uri": "http://dbpedia.org/ontology/IceHockeyLeague", "label": "ice hockey league"}], "id": "a851cba6c3fd4f91b75012d43e14ffe8"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/ontology/publisher> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "SerialNumber": "698", "question": "How many games have a publisher based in US?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": "US"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/location", "label": "based"}, {"uri": "http://dbpedia.org/ontology/publisher", "label": "publisher"}, {"uri": "http://dbpedia.org/ontology/VideoGame", "label": "games"}], "id": "32ef05a6fd884fddae5d465551cf17e3"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Human>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "SerialNumber": "699", "question": "How many fictional characters were humans?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Human", "label": "human"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/species", "label": " "}, {"uri": "http://dbpedia.org/ontology/FictionalCharacter", "label": "fictional character"}], "id": "9af86fea79ba45b599a74bbd5341a401"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/James_H._Fields> <http://dbpedia.org/property/placeofburial> ?uri } ", "SerialNumber": "700", "question": "Where was James H. Fields buried ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/James_H._Fields", "label": "James H. Fields"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeofburial", "label": "buried"}], "id": "72220051ada34ae48a21ec1e045f930f"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Julia_Gillard> <http://dbpedia.org/property/monarch> <http://dbpedia.org/resource/Elizabeth_II> }", "SerialNumber": "701", "question": "Is Julia Gillard a part of monarch of elizabeth 2?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Julia_Gillard", "label": "Julia Gillard"}, {"uri": "http://dbpedia.org/resource/Elizabeth_II", "label": "elizabeth"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/monarch", "label": "monarch"}], "id": "b1451c98780e446b815e9f342751cbb0"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Big_Creek_(Texas_Co._Missouri)> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "702", "question": "Which cities come in the course of the river, into which Big Creek around Texas flows too?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Big_Creek_(Texas_Co._Missouri)", "label": "Big Creek around Texas"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/rightTributary", "label": "flows"}, {"uri": "http://dbpedia.org/ontology/city", "label": "cities"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "749558f932b9486b85df68d4eccfe5c0"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jojo_Chintoh> <http://dbpedia.org/ontology/stateOfOrigin> ?uri. <http://dbpedia.org/resource/INKAS> <http://dbpedia.org/property/locations> ?uri} ", "SerialNumber": "703", "question": "Where are INKAS located which is also the state of origin for Jojo Chintoh ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jojo_Chintoh", "label": "Jojo Chintoh"}, {"uri": "http://dbpedia.org/resource/INKAS", "label": "INKAS"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/stateOfOrigin", "label": "state of origin"}, {"uri": "http://dbpedia.org/property/locations", "label": "located"}], "id": "fa242acb93b743fea9e35fc94ee08a4e"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Frost_King> <http://dbpedia.org/ontology/author> ?uri } ", "SerialNumber": "704", "question": "Who wrote the frost king?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Frost_King", "label": "the frost king"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/author", "label": "wrote"}], "id": "5cc36b5f5baf40ee961a155b20d24163"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Iqbal_Singh_(politician)> <http://dbpedia.org/property/party> ?uri. <http://dbpedia.org/resource/B._Shiva_Rao> <http://dbpedia.org/property/party> ?uri . }", "SerialNumber": "712", "question": "Which party does Iqbal Singh and B Shiva Rao currently belong to?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Iqbal_Singh_(politician)", "label": "Iqbal Singh"}, {"uri": "http://dbpedia.org/resource/B._Shiva_Rao", "label": "shiva rao"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/party", "label": "party"}, {"uri": "http://dbpedia.org/property/party", "label": "party"}], "id": "5ffde5a7c874424cbd665253d618fcfe"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Brian_Dunkleman> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Harry_Connick,_Jr.>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "714", "question": "Name a show hosted by Brian Dunkleman and judged by Harry Connick, Jr.?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Brian_Dunkleman", "label": "Brian Dunkleman"}, {"uri": "http://dbpedia.org/resource/Harry_Connick,_Jr.", "label": "Harry Connick, Jr."}], "predicate mapping": [{"uri": "http://dbpedia.org/property/presenter", "label": "hosted"}, {"uri": "http://dbpedia.org/property/judges", "label": "judged"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "77480fbfae19475b9120f4a4bb9dd835"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/property/notableworks> ?uri. <http://dbpedia.org/resource/Doctor_Who:_Destiny_of_the_Doctors> <http://dbpedia.org/ontology/series> ?uri} ", "SerialNumber": "716", "question": "Name the notable work by Russell T Davis which is also the series of Doctor Who:Destiny of the Doctors ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Russell_T_Davies", "label": "Russell T Davis"}, {"uri": "http://dbpedia.org/resource/Doctor_Who:_Destiny_of_the_Doctors", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/notableworks", "label": "notable"}, {"uri": "http://dbpedia.org/ontology/series", "label": "series"}], "id": "075580e801b242728cc06ad403056096"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Box_girder_bridge> . ?x <http://dbpedia.org/property/crosses> ?uri  . }", "SerialNumber": "720", "question": "What are some rivers over which there is a box girder bridge?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Box_girder_bridge", "label": "box girder bridge"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/design", "label": " "}, {"uri": "http://dbpedia.org/property/crosses", "label": "over"}], "id": "e22121aed5034a2ebb9a8b79dda6a98d"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Vitis_vinifera> . ?x <http://dbpedia.org/ontology/origin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Grape>}", "SerialNumber": "723", "question": "Where did the Vitis Vinifera grapes originate?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Vitis_vinifera", "label": "Vitis Vinifera"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/species", "label": " "}, {"uri": "http://dbpedia.org/ontology/origin", "label": "originate"}, {"uri": "http://dbpedia.org/ontology/Grape", "label": "grape"}], "id": "05a75d41426e47feada1cd1a9d0f7dd2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/National_Capital_Region_Athletic_Association> . ?x <http://dbpedia.org/property/athletics> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "SerialNumber": "725", "question": "What sports are there at the universities affiliated to the National Capital Region Athletic Association?", "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Capital_Region_Athletic_Association", "label": "National Capital Region Athletic Association"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/affiliation", "label": "affiliated"}, {"uri": "http://dbpedia.org/property/athletics", "label": "athletic"}, {"uri": "http://dbpedia.org/ontology/University", "label": "universities"}], "id": "99eede401e804ca88838398c7452d788"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/governmentType> <http://dbpedia.org/resource/Unitary_state> . ?uri <http://dbpedia.org/ontology/country> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Ship>}", "SerialNumber": "728", "question": "How many ships belong to states which has Unitary as government type ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Unitary_state", "label": "unitary"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/governmentType", "label": "government type"}, {"uri": "http://dbpedia.org/ontology/country", "label": "state"}, {"uri": "http://dbpedia.org/ontology/Ship", "label": "ship"}], "id": "4e212b324a314ddb90f5c7d4b4f980a2"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Indiana> . ?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Kaplan,_Inc.>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "SerialNumber": "729", "question": "Name the university located in Indiana and has affiliations with Kaplan, Inc.?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Indiana", "label": "Indiana"}, {"uri": "http://dbpedia.org/resource/Kaplan,_Inc.", "label": "Kaplan, Inc."}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/campus", "label": "located"}, {"uri": "http://dbpedia.org/property/affiliations", "label": "affiliations"}, {"uri": "http://dbpedia.org/ontology/University", "label": "university"}], "id": "8885d643a55646fcb84f0bdfdd1920ab"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Foxconn>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "SerialNumber": "733", "question": "Which technological products were manufactured by Foxconn?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Foxconn", "label": "Foxconn"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/manufacturer", "label": "manufactured by"}, {"uri": "http://dbpedia.org/ontology/InformationAppliance", "label": "technological products"}], "id": "dbf3f468b028435ead6f22d7094216f5"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Gibby_Haynes> <http://dbpedia.org/property/instrument> <http://dbpedia.org/resource/Saxophone> }", "SerialNumber": "734", "question": "Does Gibby Haynes play the saxophone?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gibby_Haynes", "label": "Gibby Haynes"}, {"uri": "http://dbpedia.org/resource/Saxophone", "label": "saxophone"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/instrument", "label": "play"}], "id": "40679e799df0477cb3225b955fbf7290"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/destinations> <http://dbpedia.org/resource/Mediterranean_Sea> . ?x <http://dbpedia.org/ontology/destination> ?uri  . }", "SerialNumber": "736", "question": "Things going to the mediterranean sea also go where?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mediterranean_Sea", "label": "mediterranean sea"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/destinations", "label": "going"}, {"uri": "http://dbpedia.org/ontology/destination", "label": "go where"}], "id": "24f384f61c0d499a9e5553258d63a154"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/ontology/animator> <http://dbpedia.org/resource/Walt_Disney> }", "SerialNumber": "738", "question": "Was Tommy Tucker's Tooth animated by Walt Disney?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth", "label": "Tommy Tucker's Tooth"}, {"uri": "http://dbpedia.org/resource/Walt_Disney", "label": "Walt Disney"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/animator", "label": "animated"}], "id": "4afe90c0a2d24c9abb78be2dc41b3fa7"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/PlayStation_2>  . }", "SerialNumber": "743", "question": "What appliance Sony made after the success of PlayStation 2?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony", "label": "Sony"}, {"uri": "http://dbpedia.org/resource/PlayStation_2", "label": "PlayStation 2"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/manufacturer", "label": "appliance"}, {"uri": "http://dbpedia.org/ontology/predecessor", "label": "success"}], "id": "927bed1a09eb4ccebe9ce52f962a6866"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/The_Comedy_Channel_(United_States)> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "745", "question": "How many shows are made by the channel whose predecessor was the Comedy Channel?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Comedy_Channel_(United_States)", "label": "the Comedy Channel"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/predecessor", "label": "predecessor"}, {"uri": "http://dbpedia.org/property/network", "label": "channel"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "2a8fe39c189643d9bc607d285c32bdbf"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Israel>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "749", "question": "How many wars took place in Israel?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Israel", "label": "Israel"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/place", "label": "place"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "wars"}], "id": "d31842ed59c74ddba76748ddc86819ad"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Richard_Stites> <http://dbpedia.org/ontology/birthPlace> ?uri } ", "SerialNumber": "750", "question": "Where is Richard Stites located ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Richard_Stites", "label": "Richard Stites"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/birthPlace", "label": "located"}], "id": "b602d2ec54c940bfb3308e310fb48114"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/languages> <http://dbpedia.org/resource/Semnani_languages>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "SerialNumber": "751", "question": "Semani languages are spoken in which countries?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Semnani_languages", "label": "languages"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/languages", "label": "languages"}, {"uri": "http://dbpedia.org/ontology/Country", "label": "countries"}], "id": "5a5552c654f843e2af53c66e80782253"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)> <http://dbpedia.org/ontology/musicBy> ?uri } ", "SerialNumber": "753", "question": "Who wrote The Times They Are a-Changin?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)", "label": "The Times They Are a-Changin"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/musicBy", "label": "wrote"}], "id": "c6d5d4c7a5fb417ba8654ec416c2d263"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Toronto> . ?x <http://dbpedia.org/property/locations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "758", "question": "Where can i find companies which were started in Toronto?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto", "label": "Toronto"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/foundationPlace", "label": "started"}, {"uri": "http://dbpedia.org/property/locations", "label": "Where"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "companies"}], "id": "72d5cb491ec94f14b8d9683a64782b9c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/RenderMan_(software)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "760", "question": "Which company released the software RenderMan?", "entity mapping": [{"uri": "http://dbpedia.org/resource/RenderMan_(software)", "label": "the software RenderMan"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/products", "label": "released"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "0f04a6c5f26342d9a5b0cf207019d29d"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Bryan_Martin> <http://dbpedia.org/ontology/associate> ?uri. <http://dbpedia.org/resource/William_Carmichael_(diplomat)> <http://dbpedia.org/property/president> ?uri} ", "SerialNumber": "762", "question": "Which associate of Thomas bryan Martin is also the president of Carmichael ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Thomas_Bryan_Martin", "label": "Thomas bryan Martin"}, {"uri": "http://dbpedia.org/resource/William_Carmichael_(diplomat)", "label": "carmichael"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/associate", "label": "associate"}, {"uri": "http://dbpedia.org/property/president", "label": "president"}], "id": "99747a8bc83f452f85a46aab60a6b3e2"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fountain_Lake_Farm> <http://dbpedia.org/property/nearestCity> ?uri } ", "SerialNumber": "763", "question": "What cities are nearer to Fuountain Lake Farm?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fountain_Lake_Farm", "label": "Fuountain Lake Farm"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/nearestCity", "label": "nearer"}], "id": "537bdce8e8dd4a238a2dbb9059f5fe9f"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Larry_David>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "765", "question": "How many shows are made by Larry David?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Larry_David", "label": "Larry David"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/creator", "label": "made"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "e6d36153fb7c4298a55e5ee6c0738c1d"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Amiga> . ?x <http://dbpedia.org/property/genre> ?uri  . }", "SerialNumber": "771", "question": "How many kinds of games can be played on the Amiga?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Amiga", "label": "Amiga"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/computingPlatform", "label": "games"}, {"uri": "http://dbpedia.org/property/genre", "label": "kinds of"}], "id": "d2b07c6181a64cf183b36bd37459e852"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/1994_Hungarian_Grand_Prix> <http://dbpedia.org/property/firstDriver> <http://dbpedia.org/resource/Michael_Schumacher> }", "SerialNumber": "772", "question": "Is Michael Schumacher the first driver of the 1994 grand prix?", "entity mapping": [{"uri": "http://dbpedia.org/resource/1994_Hungarian_Grand_Prix", "label": "grand prix 1994"}, {"uri": "http://dbpedia.org/resource/Michael_Schumacher", "label": "Michael Schumacher"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/firstDriver", "label": "first driver"}], "id": "b8f31b0cece6487a95dd21301ce60003"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Paud> . ?x <http://dbpedia.org/property/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}", "SerialNumber": "774", "question": "Who all have been a president of educational institutes in Paud?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Paud", "label": "Paud"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/location", "label": "in"}, {"uri": "http://dbpedia.org/property/president", "label": "president"}, {"uri": "http://dbpedia.org/ontology/EducationalInstitution", "label": "educational institutes"}], "id": "3fb7e88b8f1943958246f70177f3e5dc"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Winston_Bryant> <http://dbpedia.org/property/governor> ?uri. <http://dbpedia.org/resource/Joseph_Stiglitz> <http://dbpedia.org/property/president> ?uri} ", "SerialNumber": "776", "question": "Which governer of Winston Bryant is the president of Joseph Stiglitz ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Winston_Bryant", "label": "Winston Bryant"}, {"uri": "http://dbpedia.org/resource/Joseph_Stiglitz", "label": "Joseph Stiglitz"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/governor", "label": "governer"}, {"uri": "http://dbpedia.org/property/president", "label": "president"}], "id": "432f4fcb54a449ca830d2bb1037a274a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jeevan_Mrityu> <http://dbpedia.org/property/distributor> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . }", "SerialNumber": "777", "question": "In which city is the distributor of Jeevan Mrityu located ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jeevan_Mrityu", "label": "Jeevan Mrityu"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/distributor", "label": "distributor"}, {"uri": "http://dbpedia.org/ontology/locationCity", "label": "located"}], "id": "d76def8ae04b49f6b1d126ba95c0e2cd"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mary_Poppins_(musical)> <http://dbpedia.org/ontology/author> ?uri } ", "SerialNumber": "784", "question": "Who has written the mary poppins musical?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mary_Poppins_(musical)", "label": "mary poppins"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/author", "label": "written"}], "id": "13059b538b8e43ff9915f2e14199673a"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Cable-stayed_bridge> . ?x <http://dbpedia.org/property/crosses> ?uri  . }", "SerialNumber": "785", "question": "Cable stayed bridges have been used to cross over how many things?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cable-stayed_bridge", "label": "stayed"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/design", "label": "used to"}, {"uri": "http://dbpedia.org/property/crosses", "label": "cross over"}], "id": "3b73318138c443e789981e3e4d613dab"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/illustrator> <http://dbpedia.org/resource/Tamon_Ohta> . ?x <http://dbpedia.org/property/author> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Manga>}", "SerialNumber": "797", "question": "Who originally wrote the manga which was later illustrated by Tamon Ohta?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tamon_Ohta", "label": "Tamon Ohta"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/illustrator", "label": "illustrated by"}, {"uri": "http://dbpedia.org/property/author", "label": "wrote"}, {"uri": "http://dbpedia.org/ontology/Manga", "label": "manga"}], "id": "cffa17640f4e4456a5557b1ab1d65bdd"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/property/notableworks> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "800", "question": "How many shows is Russell Davies known for?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Russell_T_Davies", "label": "Russell Davies"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/notableworks", "label": "known for"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "1cf9bbe76b1441ba8ad28dac3a1a50e8"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television> . ?uri <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Cheers_Beacon_Hill>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "807", "question": "Which sitcom's company is Paramount Television and is located in Cheers Beacon hill ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Paramount_Television", "label": "Paramount Television"}, {"uri": "http://dbpedia.org/resource/Cheers_Beacon_Hill", "label": "Cheers Beacon hill"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/company", "label": "company"}, {"uri": "http://dbpedia.org/property/location", "label": "located"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "television"}], "id": "c228f0f4e7004f3d84822625c29a1e93"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789> <http://dbpedia.org/property/leader> ?uri. <http://dbpedia.org/resource/Dolley_Madison> <http://dbpedia.org/ontology/spouse> ?uri} ", "SerialNumber": "808", "question": "Which leader of united states house representatives election was married to Dolley Madison ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789", "label": "representatives election united states house"}, {"uri": "http://dbpedia.org/resource/Dolley_Madison", "label": "Dolley Madison"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/leader", "label": "leader"}, {"uri": "http://dbpedia.org/ontology/spouse", "label": "married to"}], "id": "553c08c614e943c5afc6b87973a5558b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/CBS> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "809", "question": "Name the TV shows owned by divisions of CBS?", "entity mapping": [{"uri": "http://dbpedia.org/resource/CBS", "label": "CBS"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/parent", "label": "owned by"}, {"uri": "http://dbpedia.org/property/company", "label": "divisions"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "TV shows"}], "id": "d8a37738293349dca33bdc20e691151e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Shays'_Rebellion> . ?x <http://dbpedia.org/property/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Governor>}", "SerialNumber": "810", "question": "Who was the president under whom, a governor participated in Shay's rebellion?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Shays'_Rebellion", "label": "Shay"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/battle", "label": "rebellion"}, {"uri": "http://dbpedia.org/property/president", "label": "president"}, {"uri": "http://dbpedia.org/ontology/Governor", "label": "governor"}], "id": "d2f75ded680643ad862ef07d47d0df4d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Brian_Dunkleman> . ?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "811", "question": "What program is  presented by Brian Dunkleman and has artist as Simon Fuller?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Brian_Dunkleman", "label": "Brian Dunkleman"}, {"uri": "http://dbpedia.org/resource/Simon_Fuller", "label": "Simon Fuller"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/presenter", "label": "presented"}, {"uri": "http://dbpedia.org/property/creator", "label": "artist"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "program"}], "id": "f109644380a448f0a102f3fd65f6cd48"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Charat_District> <http://dbpedia.org/property/settlementType> <http://dbpedia.org/resource/Districts_of_Peru> }", "SerialNumber": "812", "question": "Is the charat district a district in peru?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Charat_District", "label": "charat district"}, {"uri": "http://dbpedia.org/resource/Districts_of_Peru", "label": "district in peru"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/settlementType", "label": " "}], "id": "c8aee0b9dcfc4996bee3b2aaec26e95e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/British_people> . ?uri <http://dbpedia.org/ontology/writer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "814", "question": "What are some movies written by British writers?", "entity mapping": [{"uri": "http://dbpedia.org/resource/British_people", "label": "British"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/nationality", "label": "British"}, {"uri": "http://dbpedia.org/ontology/writer", "label": "written by"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "709cd39da1d043b3bd5f9c07c32b7664"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Timeform> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "815", "question": "How many different people own the Timeform award winners?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Timeform", "label": "Timeform"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/awards", "label": "award"}, {"uri": "http://dbpedia.org/ontology/owner", "label": "own"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "8052e68b93484281a78f6b9bbf08ce39"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Charles,_Prince_of_Wales> . ?x <http://dbpedia.org/property/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "SerialNumber": "816", "question": "List presidents of the school whose one of the president is Charles. Prince of Wales ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles,_Prince_of_Wales", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/president", "label": "president"}, {"uri": "http://dbpedia.org/property/president", "label": "president"}, {"uri": "http://dbpedia.org/ontology/School", "label": "school"}], "id": "af13e3f9870d4324b50ac10156f815b4"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chandra_Shekhar> <http://dbpedia.org/ontology/otherParty> ?uri. <http://dbpedia.org/resource/Datla_Satyanarayana_Raju> <http://dbpedia.org/ontology/party> ?uri} ", "SerialNumber": "824", "question": "Which political party of Chandra Shekhar is also the political party of Datl Satyanarayana Raju ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chandra_Shekhar", "label": "Chandra Shekhar"}, {"uri": "http://dbpedia.org/resource/Datla_Satyanarayana_Raju", "label": "satyanarayana raju datl"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/otherParty", "label": "party"}, {"uri": "http://dbpedia.org/ontology/party", "label": "political party"}], "id": "2b868081fdbe405391ff35702728b9d0"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/NBC> . ?x <http://dbpedia.org/property/presenter> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "825", "question": "How many people have been presenters for NBC shows?", "entity mapping": [{"uri": "http://dbpedia.org/resource/NBC", "label": "NBC"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/channel", "label": "shows"}, {"uri": "http://dbpedia.org/property/presenter", "label": "presenter"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "772f236fcf8248868491ba2393667c59"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Kingston,_Ontario>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "826", "question": "What river originates in Kingston Ontario?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kingston,_Ontario", "label": "Kingston Ontario"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/sourceLocation", "label": "originates"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "197329c3928340ed8151eeba459d4ce9"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/company> <http://dbpedia.org/resource/FremantleMedia> . ?x <http://dbpedia.org/ontology/producer> ?uri  . }", "SerialNumber": "830", "question": "How many producers have worked for FremantleMedia productions?", "entity mapping": [{"uri": "http://dbpedia.org/resource/FremantleMedia", "label": "FremantleMedia"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/company", "label": "worked for"}, {"uri": "http://dbpedia.org/ontology/producer", "label": "producer"}], "id": "ead02f462db84844be242c56c4066037"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hafth\u00f3r_J\u00fal\u00edus_Bj\u00f6rnsson> <http://dbpedia.org/ontology/stateOfOrigin> ?uri } ", "SerialNumber": "840", "question": "Where is Hafthor Julius Bjornsson from?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Hafth\u00f3r_J\u00fal\u00edus_Bj\u00f6rnsson", "label": "Hafthor Julius Bjornsson"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/stateOfOrigin", "label": "from"}], "id": "a0cdc0611f2c4b879e0205a8d1f477ba"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Pacific_Ocean> . ?uri <http://dbpedia.org/property/archipelago> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}", "SerialNumber": "841", "question": "How many islands belong to archipelagos located in the pacific?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pacific_Ocean", "label": "pacific"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/location", "label": "located"}, {"uri": "http://dbpedia.org/property/archipelago", "label": "archipelago"}, {"uri": "http://dbpedia.org/ontology/Island", "label": "island"}], "id": "f9b9f6eac29a4d1190ce28061725f806"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Stuart_Alan_Jones> <http://dbpedia.org/ontology/creator> ?x . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }", "SerialNumber": "842", "question": "How many other important things have been written by the creator of Stuart Alan Jones?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Stuart_Alan_Jones", "label": "Stuart Alan Jones"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/creator", "label": "creator"}, {"uri": "http://dbpedia.org/ontology/notableWork", "label": "written"}], "id": "430faddac48e4969b0732a137f2dd260"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/The_Comedy_Channel_(United_States)> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "846", "question": "What shows used to air on the channel which was earlier known as \"The Comedy Central\"?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Comedy_Channel_(United_States)", "label": "channel comedy"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/predecessor", "label": "earlier"}, {"uri": "http://dbpedia.org/property/distributor", "label": "air on the channel"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "482f01e78dbf4a2595e15e5c9ad32ab3"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Kirk_Hammett> <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Gibson_Flying_V> }", "SerialNumber": "850", "question": "Does Kirk Hammett play the Gibson Flying V?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kirk_Hammett", "label": "Kirk Hammett"}, {"uri": "http://dbpedia.org/resource/Gibson_Flying_V", "label": "Gibson Flying V"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/instrument", "label": "play"}], "id": "d0ef14f4b99740528d80da61bfe95c01"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Sturm_College_of_Law> . ?x <http://dbpedia.org/property/restingplace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}", "SerialNumber": "853", "question": "For all the senators who once studied in Sturm College of Law, give their burial place?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sturm_College_of_Law", "label": "Sturm College of Law"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/almaMater", "label": "studied in"}, {"uri": "http://dbpedia.org/property/restingplace", "label": "burial place"}, {"uri": "http://dbpedia.org/ontology/Senator", "label": "senator"}], "id": "e9566c930e254ae2893011a6acc92008"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Dragons'_Den_(UK_TV_series)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "856", "question": "Which people are known for appearing on the television show Dragon's Den?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dragons'_Den_(UK_TV_series)", "label": "television show Dragon's Den"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/knownFor", "label": "known for"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "f78b3fe9e8724eb4810bdeed1a83e057"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Public_Transport_Authority_(Western_Australia)> . ?x <http://dbpedia.org/ontology/servingRailwayLine> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}", "SerialNumber": "857", "question": "How many railway lines go through the station maintained by Public transport authority of western australia?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Public_Transport_Authority_(Western_Australia)", "label": "Public transport authority of western australia"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owningOrganisation", "label": "maintained by"}, {"uri": "http://dbpedia.org/ontology/servingRailwayLine", "label": "station"}, {"uri": "http://dbpedia.org/ontology/RailwayLine", "label": "railway line"}], "id": "8504746ca9ea4d50aeb241b91e816acc"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Gods_of_Egypt_(film)> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }", "SerialNumber": "860", "question": "What  awards did the cast members of Gods of Egypt win?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gods_of_Egypt_(film)", "label": "Gods of Egypt"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/starring", "label": "cast members"}, {"uri": "http://dbpedia.org/property/awards", "label": "awards"}], "id": "a8d5e073c778486bb2d6db640cf49768"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Carl_Sagan> . ?x <http://dbpedia.org/property/subject> ?uri  . }", "SerialNumber": "862", "question": "Carl Sagan has penned books on how many matters?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Carl_Sagan", "label": "Carl Sagan"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/author", "label": "penned books"}, {"uri": "http://dbpedia.org/property/subject", "label": "matters"}], "id": "a20c86dfc1f64b2fb91429ef3c3c2445"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_the_Navy> } ", "SerialNumber": "863", "question": "what are some units udner the US department of navy?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Department_of_the_Navy", "label": "US department of navy"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/commandStructure", "label": "units udner"}], "id": "df37b7d93b35429b9671ea6a2a572b06"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Eric_Schiller> <http://dbpedia.org/ontology/knownFor> ?uri} ", "SerialNumber": "866", "question": "What sport has made Eric Schiller famous, and has employed Craig Van Tibury?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Craig_Van_Tilbury", "label": "Craig Van Tibury"}, {"uri": "http://dbpedia.org/resource/Eric_Schiller", "label": "Eric Schiller"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/occupation", "label": "employed"}, {"uri": "http://dbpedia.org/ontology/knownFor", "label": "famous"}], "id": "bfebc6df79f647e8b83b027420295a9d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arthur_P._Bagby> <http://dbpedia.org/property/order> ?uri. <http://dbpedia.org/resource/Thomas_Holliday_Hicks> <http://dbpedia.org/property/order> ?uri . }", "SerialNumber": "867", "question": "Which part of the US political framework did Arthur Bagby and Thomas H hicks both serve?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Arthur_P._Bagby", "label": "arthur bagby"}, {"uri": "http://dbpedia.org/resource/Thomas_Holliday_Hicks", "label": "thomas hicks"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/order", "label": "serve"}, {"uri": "http://dbpedia.org/property/order", "label": "serve"}], "id": "80c709f991704001a1b7c97b46375fb5"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Clamp_(manga_artists)> . ?x <http://dbpedia.org/ontology/voice> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "SerialNumber": "868", "question": "Who gave the voice to the characters sculpted by Clamp?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Clamp_(manga_artists)", "label": "Clamp"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/creator", "label": "sculpted"}, {"uri": "http://dbpedia.org/ontology/voice", "label": "voice"}, {"uri": "http://dbpedia.org/ontology/FictionalCharacter", "label": "characters"}], "id": "e9737da1b4f945b39ad2ed1d09ad062b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Hag\u00e5t\u00f1a,_Guam>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "SerialNumber": "869", "question": "What is the country whose administrative centre is Hagta, Guam?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Hag\u00e5t\u00f1a,_Guam", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/capital", "label": "administrative centre"}, {"uri": "http://dbpedia.org/ontology/Country", "label": "country"}], "id": "2e12375aa47a42acaeab4fdba7d3890c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/ethnicity> <http://dbpedia.org/resource/Bengalis> . ?x <http://dbpedia.org/ontology/party> ?uri  . }", "SerialNumber": "870", "question": "What is the political party of the of Bengalis ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bengalis", "label": "Bengalis"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/ethnicity", "label": " "}, {"uri": "http://dbpedia.org/ontology/party", "label": "political party"}], "id": "47eda5b35417485b88697d20e48839d0"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kumta> <http://dbpedia.org/property/governmentType> ?uri. <http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)> <http://dbpedia.org/ontology/affiliation> ?uri} ", "SerialNumber": "871", "question": "Which political party of kumta had affiliation with Indian general election, 2004 (Andhra Pradesh) ", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kumta", "label": "kumta"}, {"uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)", "label": "Indian general election, 2004 (Andhra Pradesh)"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/governmentType", "label": " "}, {"uri": "http://dbpedia.org/ontology/affiliation", "label": "affiliation"}], "id": "53e6578861dc4630ad27012f1696ddcf"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Motorpsycho_Nitemare> <http://dbpedia.org/property/composer> ?uri. <http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)> <http://dbpedia.org/ontology/musicBy> ?uri} ", "SerialNumber": "873", "question": "Which composer of Motorpsycho Nitemare has also composed The time are A-Changing ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Motorpsycho_Nitemare", "label": "Motorpsycho Nitemare"}, {"uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/composer", "label": "composer"}, {"uri": "http://dbpedia.org/ontology/musicBy", "label": "composer"}], "id": "69b624f3af604a859f19a2adc6ffb845"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Interplay_Entertainment> . ?x <http://dbpedia.org/property/genre> ?uri  . }", "SerialNumber": "880", "question": "How many different kinds of games are published by Interplay Entertainment?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Interplay_Entertainment", "label": "Interplay Entertainment"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/publisher", "label": "published"}, {"uri": "http://dbpedia.org/property/genre", "label": "different kinds of"}], "id": "600d505ebfd1495fb2158a5b52fc4045"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/license> <http://dbpedia.org/resource/GNU_General_Public_License> . ?x <http://dbpedia.org/ontology/genre> ?uri  . }", "SerialNumber": "881", "question": "How many different kinds of softwares have been released under the GPL license?", "entity mapping": [{"uri": "http://dbpedia.org/resource/GNU_General_Public_License", "label": "GPL license"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/license", "label": "license"}, {"uri": "http://dbpedia.org/ontology/genre", "label": "different kinds of"}], "id": "0651212fb47546e089477eecc4777e69"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/school> <http://dbpedia.org/resource/Balgowan,_KwaZulu-Natal> . ?x <http://dbpedia.org/property/school> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "SerialNumber": "883", "question": "List the schools of the athlete with Balgowan as one of the school ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Balgowan,_KwaZulu-Natal", "label": "balgowan"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/school", "label": "school"}, {"uri": "http://dbpedia.org/property/school", "label": "school"}, {"uri": "http://dbpedia.org/ontology/Athlete", "label": "athlete"}], "id": "726523874a964323aa5d43c5af238c05"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014\u201315_Virginia_Tech_Hokies_men's_basketball_team> <http://dbpedia.org/property/headcoach> ?uri. <http://dbpedia.org/resource/2012\u201313_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri} ", "SerialNumber": "888", "question": "Which coach of Marquette Golden Eagles men's basketball team is also the head coach  of Virginia Tech Hokies men's basketball team ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2014\u201315_Virginia_Tech_Hokies_men's_basketball_team", "label": "basketball virginia hokies"}, {"uri": "http://dbpedia.org/resource/2012\u201313_Marquette_Golden_Eagles_men's_basketball_team", "label": "basketball marquette golden eagles"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/headcoach", "label": "coach"}, {"uri": "http://dbpedia.org/ontology/coach", "label": "coach"}], "id": "cfdba0daa427405b9b5b656f75e5a771"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Judge_Advocate_General's_Corps> . ?x <http://dbpedia.org/property/residence> ?uri  . }", "SerialNumber": "892", "question": "Where do the judge advocate general corps live?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Judge_Advocate_General's_Corps", "label": "judge advocate general corps"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/rank", "label": " "}, {"uri": "http://dbpedia.org/property/residence", "label": "live"}], "id": "89d174ad69534ed48313311864b3fca6"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Walt_Disney_Studios_(division)> <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Pixar> }", "SerialNumber": "894", "question": "Does Walt Disney Studio have a subsidiary called PixarCascadia_", "entity mapping": [{"uri": "http://dbpedia.org/resource/Walt_Disney_Studios_(division)", "label": "studio disney walt"}, {"uri": "http://dbpedia.org/resource/Pixar", "label": "Pixar"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/subsidiary", "label": "subsidiary"}], "id": "0961c5610ded49229b123d87522e0ce9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Zambezi_River_Authority> . ?x <http://dbpedia.org/ontology/river> ?uri  . }", "SerialNumber": "896", "question": "On which river are there things belonging to zambezi river authority?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Zambezi_River_Authority", "label": "zambezi river authority"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/owner", "label": "belonging to"}, {"uri": "http://dbpedia.org/ontology/river", "label": "river"}], "id": "533717b10afe49fb9b10cc531f19ce41"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Vance_Johnson> <http://dbpedia.org/ontology/position> <http://dbpedia.org/resource/Wide_receiver> }", "SerialNumber": "899", "question": "Does vance johnson play as a wide receiver?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Vance_Johnson", "label": "vance johnson"}, {"uri": "http://dbpedia.org/resource/Wide_receiver", "label": "wide receiver"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/position", "label": "play"}], "id": "ee0133ba177848fdaa63a9a0a5fc217d"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/product> ?uri  . }", "SerialNumber": "901", "question": "How many different products are there of the companies located in the US?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": "US"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/location", "label": "located"}, {"uri": "http://dbpedia.org/ontology/product", "label": "product"}], "id": "65cb7ea9917b44e29c8adbc3e95d1470"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pioneer_Corporation> <http://dbpedia.org/property/country> ?uri } ", "SerialNumber": "902", "question": "Which are the countires where Pioneer Corporation has flourished?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pioneer_Corporation", "label": "Pioneer Corporation"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/country", "label": "countires"}], "id": "85d2a3aff592486fbe48e0f6d67cebf3"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arthur_A._Ross> <http://dbpedia.org/property/placeOfBirth> ?uri. <http://dbpedia.org/resource/Edward_Niesen> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "SerialNumber": "906", "question": "Which city do both Arthur Ross and Edward Niesen come from?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Arthur_A._Ross", "label": "arthur ross"}, {"uri": "http://dbpedia.org/resource/Edward_Niesen", "label": "Edward Niesen"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBirth", "label": "come from"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "come from"}], "id": "31afaf9538e24202876296db1b6f2b87"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Heroman> <http://dbpedia.org/property/author> ?uri } ", "SerialNumber": "910", "question": "Who wrote Heroman?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Heroman", "label": "Heroman"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/author", "label": "wrote"}], "id": "3e54cd98e79d4fa6b3b2dc7f2674c5d8"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Zambezi> <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia> }", "SerialNumber": "913", "question": "Was Zambezi originate in the north western province of zambia?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Zambezi", "label": "Zambezi"}, {"uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia", "label": "province western zambia north"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/sourceRegion", "label": "originate in"}], "id": "8e833704b64d4d40bbff73d5746d98c4"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Douglas,_Isle_of_Man> . ?x <http://dbpedia.org/ontology/product> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "918", "question": "What all is produced by companies in Douglas, Isle of Man?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Douglas,_Isle_of_Man", "label": "Douglas, Isle of Man"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locationCity", "label": " "}, {"uri": "http://dbpedia.org/ontology/product", "label": "produced"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "companies"}], "id": "3abffed2b2504a16b1cbaecbe05b2bde"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Tampa,_Florida> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }", "SerialNumber": "919", "question": "What is the number of occupation of the people who died in tampa bay, florida?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tampa,_Florida", "label": "florida tampa"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/deathPlace", "label": "died in"}, {"uri": "http://dbpedia.org/ontology/occupation", "label": "occupation"}], "id": "01e74239bfaf4b1d8de9cb7ed623a268"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/Mus\u00e9e_d'Orsay> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artwork>}", "SerialNumber": "921", "question": "Whose work is in the Musee d'orsay?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mus\u00e9e_d'Orsay", "label": "Musee d'orsay"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/museum", "label": " "}, {"uri": "http://dbpedia.org/property/artist", "label": " "}, {"uri": "http://dbpedia.org/ontology/Artwork", "label": "work"}], "id": "5d06f0ac2946469f965844d87feb57c4"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_Guitar_Corporation> } ", "SerialNumber": "925", "question": "Who all are known to play the Gibson Guitar Corporation?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gibson_Guitar_Corporation", "label": "Gibson Guitar Corporation"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/notableInstruments", "label": "play"}], "id": "2d858381e01142748e34b68e8303754c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/2013_Copa_Centroamericana> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "SerialNumber": "927", "question": "Who built the stadium which was rented for the 2013 Copa Centroamericana ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2013_Copa_Centroamericana", "label": "2013 Copa Centroamericana"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/tenant", "label": "rented"}, {"uri": "http://dbpedia.org/ontology/builder", "label": "built"}, {"uri": "http://dbpedia.org/ontology/Stadium", "label": "stadium"}], "id": "0211cc1ff7b94942958a04da756282b7"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Craig_Robinson_(actor)> . ?uri <http://dbpedia.org/ontology/series> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "SerialNumber": "929", "question": "How many fictional characters are there in a series in which Craig Robinson acted?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Craig_Robinson_(actor)", "label": "Craig Robinson"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/starring", "label": "acted"}, {"uri": "http://dbpedia.org/ontology/series", "label": "series"}, {"uri": "http://dbpedia.org/ontology/FictionalCharacter", "label": "fictional character"}], "id": "c476c7a2e55b4c00a92923d7d08a1e5f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Lebr\u0161nik> . ?x <http://dbpedia.org/ontology/mouthCountry> ?uri  . }", "SerialNumber": "931", "question": "in which country does the river end which originates in Lebrsnik?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lebr\u0161nik", "label": "Lebrsnik"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourcePlace", "label": "originates"}, {"uri": "http://dbpedia.org/ontology/mouthCountry", "label": "country"}], "id": "8b10de10cf09466f94c4570b9c61aa72"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frank_Thorne> <http://dbpedia.org/ontology/award> ?uri. <http://dbpedia.org/resource/Breann_McGregor> <http://dbpedia.org/property/knownFor> ?uri} ", "SerialNumber": "935", "question": "What is that something which made Breann McGregor famous, and Frank Thorne received as an award?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Frank_Thorne", "label": "Frank Thorne"}, {"uri": "http://dbpedia.org/resource/Breann_McGregor", "label": "Breann McGregor"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/award", "label": "award"}, {"uri": "http://dbpedia.org/property/knownFor", "label": "famous"}], "id": "8f2c9b53aca646c08bfe2eeee0544df4"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/Ekstraliga_(speedway)> . ?x <http://dbpedia.org/property/nickname> ?uri  . }", "SerialNumber": "940", "question": "what are the nicknames of the people who are in Ekstraliga?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ekstraliga_(speedway)", "label": "Ekstraliga"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/league", "label": "people"}, {"uri": "http://dbpedia.org/property/nickname", "label": "nickname"}], "id": "226f3a3f6f844c5fbfee523f31ed439d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Aarnoud_van_Heemstra>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "941", "question": "Who is a famous relative of Aaround Van Heemstra?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Aarnoud_van_Heemstra", "label": "Aaround Van Heemstra"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relative", "label": "relative"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "famous"}], "id": "dc1d2cb750ca4e2e9f9a74ccd1c6c5cc"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCity> <http://dbpedia.org/resource/Burbank,_California> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "943", "question": "List the television shows whose distributors are located at Burbank, California.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Burbank,_California", "label": "Burbank, California"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/locationCity", "label": "located"}, {"uri": "http://dbpedia.org/property/distributor", "label": "distributor"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "television show"}], "id": "e575b8c0e88a481db2a8c94388a81fdc"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Salford_City_F.C.> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}", "SerialNumber": "946", "question": "What is the birth city of the Salford City F.C players ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Salford_City_F.C.", "label": "Salford City F.C"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/team", "label": " "}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "birth city"}, {"uri": "http://dbpedia.org/ontology/SoccerPlayer", "label": "players"}], "id": "c6d8bd8b828a4ffca756fcd6a7b9cad6"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeJunction> <http://dbpedia.org/resource/East_Whiteland_Township,_Chester_County,_Pennsylvania> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Road>}", "SerialNumber": "948", "question": "To which US states does the roads belong which meet at the East Whiteland Township in Pennsylvania?", "entity mapping": [{"uri": "http://dbpedia.org/resource/East_Whiteland_Township,_Chester_County,_Pennsylvania", "label": "East Whiteland Township in Pennsylvania"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/routeJunction", "label": "meet at"}, {"uri": "http://dbpedia.org/ontology/state", "label": "state"}, {"uri": "http://dbpedia.org/ontology/Road", "label": "road"}], "id": "a12b9f66bee84b9db6177e03023690f7"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Birmingham_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "SerialNumber": "949", "question": "To what other locations does the airlines have flights, who also fly to Birmingham?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Birmingham_Airport", "label": "Birmingham"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/targetAirport", "label": "fly to"}, {"uri": "http://dbpedia.org/property/destinations", "label": "flights"}, {"uri": "http://dbpedia.org/ontology/Airline", "label": "airline"}], "id": "655aee0c067641ffbd67c9dac3ce438a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Oldsmobile_88> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . }", "SerialNumber": "951", "question": "Which are the predecessors of the cars which are similar to the Oldsmobile 88?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Oldsmobile_88", "label": "Oldsmobile 88"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/related", "label": "similar"}, {"uri": "http://dbpedia.org/ontology/predecessor", "label": "predecessor"}], "id": "9559251273fe4cfd94ae14dc401612d9"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Indiana> . ?uri <http://dbpedia.org/ontology/child> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "952", "question": "How many people are there whose children died in Indiana?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Indiana", "label": "Indiana"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/deathPlace", "label": "died in"}, {"uri": "http://dbpedia.org/ontology/child", "label": "children"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "bcf6d38828d24556aa001e0484100b31"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pointe_d'Aveneyre> <http://dbpedia.org/ontology/mountainRange> ?uri. <http://dbpedia.org/resource/Le_Gibloux> <http://dbpedia.org/ontology/mountainRange> ?uri . }", "SerialNumber": "953", "question": "Which mountain range is the one with Ponte d'Aveneyre and Le Gibloux?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pointe_d'Aveneyre", "label": "d'aveneyre"}, {"uri": "http://dbpedia.org/resource/Le_Gibloux", "label": "Le Gibloux"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/mountainRange", "label": "mountain range"}, {"uri": "http://dbpedia.org/ontology/mountainRange", "label": "mountain range"}], "id": "ad765492f88c48c3b2bc9040652ce954"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Kevin_Tsujihara> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "960", "question": "What are some movies whose distributors are led by Kevin Tsujihara?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kevin_Tsujihara", "label": "Kevin Tsujihara"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/keyPerson", "label": "led by"}, {"uri": "http://dbpedia.org/property/distributor", "label": "distributor"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "5dd25945300c4882b7f41d51f864edbf"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Quagmire's_Quagmire> . ?uri <http://dbpedia.org/ontology/relative> ?x  . }", "SerialNumber": "962", "question": "Who are the relatives of the character after which Quagmire's Quagmire was made?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Quagmire's_Quagmire", "label": "Quagmire's Quagmire"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/subsequentWork", "label": "after ; made"}, {"uri": "http://dbpedia.org/ontology/relative", "label": "relative"}], "id": "3f32bfb3b7df4136b3983a9dfe3beed0"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/arena> <http://dbpedia.org/resource/United_Center> . ?uri <http://dbpedia.org/property/team> ?x  . }", "SerialNumber": "968", "question": "Who all play for the teams performing in the united center?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_Center", "label": "united center"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/arena", "label": "performing in"}, {"uri": "http://dbpedia.org/property/team", "label": "team"}], "id": "2361961d044049bfb2ea19866fcc28b9"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gold_Coast_Football_Club> <http://dbpedia.org/property/location> ?uri } ", "SerialNumber": "969", "question": "Where is the gold coast football club located?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gold_Coast_Football_Club", "label": "gold coast football club"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/location", "label": "located"}], "id": "9db99f7b0b424eef87494372c398bb83"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Laemmle_Theatres> <http://dbpedia.org/ontology/service> ?uri. <http://dbpedia.org/resource/James_F._O'Brien> <http://dbpedia.org/ontology/award> ?uri} ", "SerialNumber": "970", "question": "Which award that has been given to James F Obrien, had used Laemmle Theatres for some service?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Laemmle_Theatres", "label": "Laemmle Theatres"}, {"uri": "http://dbpedia.org/resource/James_F._O'Brien", "label": "James F Obrien"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/service", "label": "service"}, {"uri": "http://dbpedia.org/ontology/award", "label": "award"}], "id": "d499386227fb4943ad773dfaf48271a3"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/club> <http://dbpedia.org/resource/Dinamo_Krasnodar> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "SerialNumber": "971", "question": "Where are the Dinamo Krasnodar players born?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dinamo_Krasnodar", "label": "Dinamo Krasnodar"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/club", "label": "@@@"}, {"uri": "http://dbpedia.org/property/placeOfBirth", "label": "born"}, {"uri": "http://dbpedia.org/ontology/Athlete", "label": "players"}], "id": "613d4281e6a24597aed9eb6dc6ddae4a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Alexius_Meinong> . ?uri <http://dbpedia.org/ontology/academicAdvisor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "972", "question": "Name the people whose academic advisor has also mentored the thesis of Alexius Meinong?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Alexius_Meinong", "label": "Alexius Meinong"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/doctoralStudents", "label": "thesis"}, {"uri": "http://dbpedia.org/ontology/academicAdvisor", "label": "academic advisor"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "0f0065ebc6d9448a9925cf985837df80"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_School,_Karlsruhe> <http://dbpedia.org/property/founder> ?uri } ", "SerialNumber": "973", "question": "Who is the founder of Wuropean School, Karlsruhe ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/European_School,_Karlsruhe", "label": "Wuropean School, Karlsruhe"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/founder", "label": "founder of"}], "id": "13a6659956ff48d8ad29034fecc6357d"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hudson_River> <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Croton_River> }", "SerialNumber": "974", "question": "Does the croton river flow into the hudson?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Hudson_River", "label": "hudson"}, {"uri": "http://dbpedia.org/resource/Croton_River", "label": "croton river"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/leftTributary", "label": "flow"}], "id": "459448bd75ec43279fcae4db9efacd08"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paul_Demi\u00e9ville> <http://dbpedia.org/property/fields> ?uri. <http://dbpedia.org/resource/Koay_Teng_Hai> <http://dbpedia.org/ontology/religion> ?uri} ", "SerialNumber": "976", "question": "Which fields of the Paul Demiville is also the faith of Koay Teng Hai ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Demi\u00e9ville", "label": "Paul Demiville"}, {"uri": "http://dbpedia.org/resource/Koay_Teng_Hai", "label": "Koay Teng Hai"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/fields", "label": "fields"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "faith"}], "id": "8994dc83e54f403699937e9328a327a8"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789> <http://dbpedia.org/property/leader> ?uri. <http://dbpedia.org/resource/John_Drayton> <http://dbpedia.org/property/appointer> ?uri} ", "SerialNumber": "981", "question": "Which leader of United States House of Representatives was the appinter of ohn Drayton ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789", "label": "representatives united states"}, {"uri": "http://dbpedia.org/resource/John_Drayton", "label": "drayton John"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/leader", "label": "leader"}, {"uri": "http://dbpedia.org/property/appointer", "label": "Drayton"}], "id": "af5f1360af214572ad2d8a7f52b326c1"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Mixed-sex_education> . ?x <http://dbpedia.org/ontology/localAuthority> ?uri  . }", "SerialNumber": "991", "question": "How many local authorities manage mixed gender schools?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mixed-sex_education", "label": "mixed"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/gender", "label": "gender"}, {"uri": "http://dbpedia.org/ontology/localAuthority", "label": "authorities"}], "id": "62c64f48fb4e42cba7d5df25238d0c00"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Ape>  . }", "SerialNumber": "992", "question": "What are some apes?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ape", "label": "ape"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/family", "label": ""}], "id": "19a1601d48324aeb87419019f0e0e027"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Peter_Crouch> <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/Stoke_City_F.C.> }", "SerialNumber": "997", "question": "Is Peter Crouch currently in the Stoke City FC?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Peter_Crouch", "label": "Peter Crouch"}, {"uri": "http://dbpedia.org/resource/Stoke_City_F.C.", "label": "Stoke City FC"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentclub"}], "id": "f915a7c6e28343a1861fb5a31d770432"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Temptress> <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Lloyd_Nosler> }", "SerialNumber": "998", "question": "Is Lloyd  Nosler the editor of The Temptress?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Temptress", "label": "The Temptress"}, {"uri": "http://dbpedia.org/resource/Lloyd_Nosler", "label": "nosler lloyd"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/editing", "label": "editor"}], "id": "5e350b58254d4f07a7a629bb71533ba6"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/settlementType> <http://dbpedia.org/resource/Thesaban>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>}", "SerialNumber": "1001", "question": "How many Thesaban towns are there?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Thesaban", "label": "Thesaban"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/settlementType"}, {"uri": "http://dbpedia.org/ontology/Town", "label": "town"}], "id": "8a90aa06557b4f7387d69334dbc420ef"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Oliver_Sacks> <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Columbia_University> }", "SerialNumber": "1004", "question": "Did Oliver Sacks study at the Columbia University?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Oliver_Sacks", "label": "Oliver Sacks"}, {"uri": "http://dbpedia.org/resource/Columbia_University", "label": "Columbia University"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/institution", "label": "study"}], "id": "d15fc086b4a342d0a45205ffd6963f8c"}, {"sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/programmeFormat> <http://dbpedia.org/resource/Classic_rock> . ?x <http://dbpedia.org/ontology/programmeFormat> ?uri }", "SerialNumber": "1005", "question": "How many other genere are there of the radio stations whose one of the genre  is Classic rock ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Classic_rock", "label": "Classic rock"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/programmeFormat", "label": "radio stations"}, {"uri": "http://dbpedia.org/ontology/programmeFormat", "label": "genre"}], "id": "02ae1a10a037480a91be9b50a5073a8b"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Point!> <http://dbpedia.org/property/narrated> ?uri } ", "SerialNumber": "1009", "question": "Who was the narrator in the point?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Point!", "label": "the point?"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/narrated", "label": "narrator"}], "id": "6cf76cd43efe4dae9271d0dcafd040d0"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/Brockport_Golden_Eagles> . ?uri <http://dbpedia.org/property/president> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballTeam>}", "SerialNumber": "1011", "question": "Which basketball team's president studied in the Brockport Golden Eagles?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Brockport_Golden_Eagles", "label": "Brockport Golden Eagles"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/college", "label": "studied"}, {"uri": "http://dbpedia.org/property/president", "label": "president"}, {"uri": "http://dbpedia.org/ontology/BasketballTeam", "label": "basketball team"}], "id": "37d312b3fc364f16bdc7b55e5a845a90"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Occupation_of_Japan> . ?uri <http://dbpedia.org/property/knownFor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "SerialNumber": "1015", "question": "How many scientist became famous for the battle of Occupation of Japan?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Occupation_of_Japan", "label": "Occupation of Japan"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/battle", "label": "battle"}, {"uri": "http://dbpedia.org/property/knownFor", "label": "famous"}, {"uri": "http://dbpedia.org/ontology/Scientist", "label": "scientist"}], "id": "7124c65f43eb4c7db607755053ad3252"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_National_Herald_(India)> <http://dbpedia.org/ontology/owner> ?uri. <http://dbpedia.org/resource/Kumta> <http://dbpedia.org/property/governmentType> ?uri} ", "SerialNumber": "1016", "question": "Which owner of the national Herald india is the leader of Kumta ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_National_Herald_(India)", "label": "national Herald"}, {"uri": "http://dbpedia.org/resource/Kumta", "label": "Kumta"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owner", "label": "owner"}, {"uri": "http://dbpedia.org/property/governmentType", "label": "leader"}], "id": "722afd3c1d7f45638c954d4bac6d0dfb"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/line> <http://dbpedia.org/resource/Z\u00fcrich\u2013Affoltern_am_Albis\u2013Zug_railway_line> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "SerialNumber": "1018", "question": "In how many countries does the Zurich Affoltern am Albis Zug line go?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Z\u00fcrich\u2013Affoltern_am_Albis\u2013Zug_railway_line", "label": "affoltern albis"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/line", "label": "line"}, {"uri": "http://dbpedia.org/ontology/country", "label": "In"}, {"uri": "http://dbpedia.org/ontology/Country", "label": "countries"}], "id": "b64d9fce937f4f0e9a0ca37ee8953f92"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "1019", "question": "Give me the count of all people who ascented a peak in California?", "entity mapping": [{"uri": "http://dbpedia.org/resource/California", "label": "California"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locatedInArea", "label": "in"}, {"uri": "http://dbpedia.org/ontology/firstAscentPerson", "label": "ascented"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "peak"}], "id": "975c249b705448208e1323922ac6f2da"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Johnny_Cash>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "1020", "question": "What people are known to work for Johnny Cash?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Johnny_Cash", "label": "Johnny Cash"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/associatedActs", "label": "work"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "known"}], "id": "d7cf27ca038544a0aedfa9c7533e0743"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Australian_Alps>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "1022", "question": "What rivers originate from Australian Alps?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Australian_Alps", "label": "Australian Alps"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourcePlace", "label": "originate"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "a40f13291ca14b10b2f098c618bb7b4d"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Republic_of_China_legislative_election,_2008> <http://dbpedia.org/property/leader> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "1024", "question": "What's the religion of the winner of china election of 2008?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Republic_of_China_legislative_election,_2008", "label": "2008"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/leader", "label": "election"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}], "id": "ec098d0e9dc04cb997cf1bedf575db5c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Lampedusa> . ?x <http://dbpedia.org/property/constituency> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "1027", "question": "What is the constituency of the people who died in Lampedusa?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lampedusa", "label": "Lampedusa"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/deathPlace", "label": "died in"}, {"uri": "http://dbpedia.org/property/constituency", "label": "constituency"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "85cdd790d3474b37b3fbbb8ecfd40517"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/University_of_the_West_Indies> . ?x <http://dbpedia.org/property/almaMater> ?uri  . }", "SerialNumber": "1028", "question": "Where else did the graduates of the university of west indies study?", "entity mapping": [{"uri": "http://dbpedia.org/resource/University_of_the_West_Indies", "label": "university indies west"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/institution", "label": "study"}, {"uri": "http://dbpedia.org/property/almaMater", "label": "graduates"}], "id": "5b6758a1346840589e4406f834826e3c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Dolley_Madison>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "1030", "question": "Which statesman is married to Dolley Madison?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dolley_Madison", "label": "Dolley Madison"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/spouse", "label": "married to"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "statesman"}], "id": "cb55d0a92ec24545ab35ad668354f53e"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Richard_Taylor_(colonel)> <http://dbpedia.org/property/battles> ?x . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "1032", "question": "How many groups have fought in wars where Richard Taylor fought too?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Richard_Taylor_(colonel)", "label": "Richard Taylor"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/battles", "label": "fought"}, {"uri": "http://dbpedia.org/property/combatant", "label": "wars"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "groups"}], "id": "7dfadb99e8c946deaabb77d1f0ef093c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alice's_Wonderland> <http://dbpedia.org/ontology/director> ?uri. <http://dbpedia.org/resource/The_Haunted_House_(1929_film)> <http://dbpedia.org/ontology/director> ?uri . }", "SerialNumber": "1034", "question": "Who directed the haunted house and alice in wonderland?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Alice's_Wonderland", "label": "wonderland alice"}, {"uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)", "label": "the haunted house"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/director", "label": "directed"}, {"uri": "http://dbpedia.org/ontology/director", "label": "1929_film"}], "id": "da7f8fc6054d436fa5dc4a6dca13af51"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Urban_area> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }", "SerialNumber": "1036", "question": "Count the sports played at universities located in Urban Areas?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Urban_area", "label": "Urban Area"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/campus", "label": "located"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}], "id": "39670fa8f4204ba69a06afe012d003cb"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kiki_Cutter> <http://dbpedia.org/property/club> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . }", "SerialNumber": "1037", "question": "Where the club of Kiki Cutter located?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kiki_Cutter", "label": "Kiki Cutter"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/club", "label": "club"}, {"uri": "http://dbpedia.org/ontology/location", "label": "located"}], "id": "c24dda07f8a74f7a97a4c283745cc67c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jane_Austen_in_Manhattan> <http://dbpedia.org/ontology/writer> ?uri. <http://dbpedia.org/resource/Emma_(novel)> <http://dbpedia.org/property/author> ?uri . }", "SerialNumber": "1038", "question": "Who penned Emma and Jane Austen in Manhatten?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jane_Austen_in_Manhattan", "label": "Jane"}, {"uri": "http://dbpedia.org/resource/Emma_(novel)", "label": "Emma"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/writer", "label": "Manhatten"}, {"uri": "http://dbpedia.org/property/author", "label": "Emma and Jane Austen"}], "id": "8facfcdabe5c45f6a4ff24195185f240"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deputy> <http://dbpedia.org/resource/Robert_T._Herres> . ?uri <http://dbpedia.org/ontology/commander> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "1039", "question": "Which wars were fought by the commander whose deputy was Robert T. Herres?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_T._Herres", "label": "Robert T. Herres"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/deputy", "label": "deputy"}, {"uri": "http://dbpedia.org/ontology/commander", "label": "commander"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "fought"}], "id": "b80894dd929f4fff8e33453137e5f838"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Bucyrus_MT6300AC> <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/North_America> }", "SerialNumber": "1040", "question": "Is the Bucyrus MT6300AC assembled in north america?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bucyrus_MT6300AC", "label": "Bucyrus MT6300AC"}, {"uri": "http://dbpedia.org/resource/North_America", "label": "north america"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/assembly", "label": "assembled"}], "id": "44579153ae3b44e89b30a9b9990e1c09"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jacob> <http://dbpedia.org/property/veneratedIn> ?uri. <http://dbpedia.org/resource/Abraham> <http://dbpedia.org/property/veneratedIn> ?uri . }", "SerialNumber": "1041", "question": "What are all the religions in which Jacob and Abraham are important?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jacob", "label": "Jacob"}, {"uri": "http://dbpedia.org/resource/Abraham", "label": "Abraham"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/veneratedIn", "label": "important"}, {"uri": "http://dbpedia.org/property/veneratedIn", "label": "important"}], "id": "a807b47daf314dd1867083e605303a2b"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Geoffrey_Rush> <http://dbpedia.org/property/awards> ?uri. <http://dbpedia.org/resource/Laemmle_Theatres> <http://dbpedia.org/ontology/service> ?uri} ", "SerialNumber": "1045", "question": "What is the common award won by geoffrey Rush and Laemmle Theatres ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Geoffrey_Rush", "label": "geoffrey Rush"}, {"uri": "http://dbpedia.org/resource/Laemmle_Theatres", "label": "Laemmle Theatres"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/awards", "label": "award won"}, {"uri": "http://dbpedia.org/ontology/service", "label": "common"}], "id": "0f95ea47819f4c68bd0ce67b5a955e3f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Microsoft_Expression_Encoder> <http://dbpedia.org/ontology/computingPlatform> ?x . ?x <http://dbpedia.org/ontology/developer> ?uri  . }", "SerialNumber": "1046", "question": "Who develops the computation platform of Microsoft Expression Encoder ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Expression_Encoder", "label": "Microsoft Expression Encoder"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/computingPlatform", "label": "platform"}, {"uri": "http://dbpedia.org/ontology/developer", "label": "develops"}], "id": "4a3f11eb3f2d4d0389762febc9a3d122"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Chapelle_Saint-Louis_de_Carthage> <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }", "SerialNumber": "1048", "question": "In which country is the Chapelle Saint-Louis de Carthage located ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chapelle_Saint-Louis_de_Carthage", "label": "Chapelle Saint-Louis de Carthage"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/location", "label": "located"}, {"uri": "http://dbpedia.org/ontology/country", "label": "country"}], "id": "3a6432cd1ada457994b8cd04721bcccd"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/Norwalk_Trainband> . ?x <http://dbpedia.org/property/restingplace> ?uri  . }", "SerialNumber": "1050", "question": "In how many places can I find tombs of people who fought in the Norwalk Trainband?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Norwalk_Trainband", "label": "Norwalk Trainband"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/militaryUnit", "label": "fought"}, {"uri": "http://dbpedia.org/property/restingplace", "label": "places"}], "id": "2f9f8fd7f42f40a19ee4c0b72746fef6"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Newin_Chidchob> <http://dbpedia.org/property/nationality> ?uri. <http://dbpedia.org/resource/Ajahn_Sao_Kantas\u012blo> <http://dbpedia.org/ontology/nationality> ?uri} ", "SerialNumber": "1051", "question": "Which nationality of Newin Chidchob is also the nationality of Ajahn Sao Kantaslo ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Newin_Chidchob", "label": "Newin Chidchob"}, {"uri": "http://dbpedia.org/resource/Ajahn_Sao_Kantas\u012blo", "label": "Ajahn Sao Kantaslo"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/nationality", "label": "nationality"}, {"uri": "http://dbpedia.org/ontology/nationality", "label": "nationality"}], "id": "7f491bee97b44a1eb028ecd5aea8a442"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/BAFTA_Award_for_Best_Film_Music> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "1052", "question": "Which movies' composers have won a BAFTA for film music?", "entity mapping": [{"uri": "http://dbpedia.org/resource/BAFTA_Award_for_Best_Film_Music", "label": "music bafta film for"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/award", "label": "music"}, {"uri": "http://dbpedia.org/ontology/musicComposer", "label": "composers"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "a655921614b54e81b96b9832c987cc05"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Microsoft_Office> <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C++> }", "SerialNumber": "1053", "question": "Is Microsoft office written in C++", "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Office", "label": "Microsoft office"}, {"uri": "http://dbpedia.org/resource/C++", "label": "C++"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/programmingLanguage", "label": "written"}], "id": "a4af0ba8a3fe4331ac77ceb9f178ed02"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Altazor> <http://dbpedia.org/property/illustrator> <http://dbpedia.org/resource/Pablo_Picasso> }", "SerialNumber": "1054", "question": "Was the altazor drawn by Picasso?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Altazor", "label": "altazor"}, {"uri": "http://dbpedia.org/resource/Pablo_Picasso", "label": "Picasso"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/illustrator", "label": "drawn"}], "id": "abca45aad53b4fdbaa4b40cd8f0a6490"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Toronto_Argonauts>  . }", "SerialNumber": "1055", "question": "How many people used to play for Toronto Argonauts?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto_Argonauts", "label": "Toronto Argonauts"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/formerTeam", "label": "play"}], "id": "081763becc9f4357b36cb9ef05856c1d"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Marika_Gombitov\u00e1> . ?x <http://dbpedia.org/property/language> ?uri  . }", "SerialNumber": "1057", "question": "In how many languages did Marika Gombitova sing?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Marika_Gombitov\u00e1", "label": "Marika Gombitova"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/artist", "label": "sing"}, {"uri": "http://dbpedia.org/property/language", "label": "language"}], "id": "522b9a5a5c03491bbbb0b8eb89fc063f"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Christopher_D\u00edaz_Figueroa> <http://dbpedia.org/property/residence> ?uri. <http://dbpedia.org/resource/Cruce_a_Nado_Internacional> <http://dbpedia.org/ontology/country> ?uri} ", "SerialNumber": "1059", "question": "What is the official residence of the Christopher Daz Figuero which is also the  state of the Cruce a Nado Internacional", "entity mapping": [{"uri": "http://dbpedia.org/resource/Christopher_D\u00edaz_Figueroa", "label": "christopher figuero"}, {"uri": "http://dbpedia.org/resource/Cruce_a_Nado_Internacional", "label": "Cruce a Nado Internacional"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/residence", "label": "residence"}, {"uri": "http://dbpedia.org/ontology/country", "label": "state"}], "id": "e1d32c8ac1044f5b815f5bd8b971b736"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/property/athletics> ?uri } ", "SerialNumber": "1060", "question": "What are the track and field events of Jamiatu Muslim Mindanao?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao", "label": "Jamiatu Muslim Mindanao"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/athletics", "label": "events"}], "id": "477b36580d6c453e9fe828225b61fbb0"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Switzerland_at_the_2004_Summer_Olympics> <http://dbpedia.org/property/flagbearer> ?uri. <http://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics> <http://dbpedia.org/property/flagbearer> ?uri . }", "SerialNumber": "1067", "question": "Which athlete was the flag bearer for Switzerland in 2004 and 2008 summer Olympics ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Switzerland_at_the_2004_Summer_Olympics", "label": "switzerland olympics summer 2004"}, {"uri": "http://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics", "label": "switzerland olympics summer 2008"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/flagbearer", "label": "bearer flag"}, {"uri": "http://dbpedia.org/property/flagbearer", "label": "bearer flag"}], "id": "3a4019df663a4b7694548d7e5fa8ed39"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/National_Medal_of_Science> . ?x <http://dbpedia.org/property/doctoralStudents> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "SerialNumber": "1070", "question": "List some pupils of National Science Medal winning scientists?", "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Medal_of_Science", "label": "national science medal"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/prizes", "label": "winning"}, {"uri": "http://dbpedia.org/property/doctoralStudents", "label": "pupils"}, {"uri": "http://dbpedia.org/ontology/Scientist", "label": "scientist"}], "id": "0875010dd1d442a09d23bdaaf2293064"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Harry_Connick,_Jr.>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "1073", "question": "Name the TV show which has judge as harry Connick and is broadcasted on Fox Broadcasting Company ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company", "label": "Fox Broadcasting Company"}, {"uri": "http://dbpedia.org/resource/Harry_Connick,_Jr.", "label": "connick harry"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/channel", "label": "broadcasted"}, {"uri": "http://dbpedia.org/property/judges", "label": "judge"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "82c928cbd1774387a68f7fb4dd3e62ec"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Batch_Monitor> <http://dbpedia.org/property/developer> ?uri. <http://dbpedia.org/resource/Riddim_Ribbon_feat._The_Black_Eyed_Peas> <http://dbpedia.org/property/distributor> ?uri} ", "SerialNumber": "1074", "question": "What company brought Riddim Ribbon to the market, and developed the batch monitor?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Batch_Monitor", "label": "batch monitor"}, {"uri": "http://dbpedia.org/resource/Riddim_Ribbon_feat._The_Black_Eyed_Peas", "label": "riddim ribbon"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/developer", "label": "developed"}, {"uri": "http://dbpedia.org/property/distributor", "label": "Ribbon"}], "id": "7ad84cbcf92d434bb36c969e41e4969c"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Estadio_Nacional_de_Costa_Rica_(2011)> <http://dbpedia.org/ontology/builder> ?uri. <http://dbpedia.org/resource/Xianren_Cave> <http://dbpedia.org/ontology/country> ?uri} ", "SerialNumber": "1079", "question": "Who is the builder of Estadio Nacional de Costa Rica and also location of Xianren Cave ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Estadio_Nacional_de_Costa_Rica_(2011)", "label": "Estadio Nacional de Costa Rica"}, {"uri": "http://dbpedia.org/resource/Xianren_Cave", "label": "Xianren Cave"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/builder", "label": "builder"}, {"uri": "http://dbpedia.org/ontology/country", "label": "location"}], "id": "fc3fe84aeff64b73884ae52e139bfb71"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen> . ?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Playtone>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "1084", "question": "Erik Jendresen is writer and Play tone is company of which TV show ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Erik_Jendresen", "label": "Erik Jendresen"}, {"uri": "http://dbpedia.org/resource/Playtone", "label": "tone play"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/writer", "label": "writer"}, {"uri": "http://dbpedia.org/property/company", "label": "company"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "ef953fcfd8774d258a795e40f2c3858b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Bangkok> <http://dbpedia.org/ontology/leaderName> ?x . ?x <http://dbpedia.org/property/residence> ?uri  . }", "SerialNumber": "1086", "question": "Where is the residence of the governor of Bangkok ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bangkok", "label": "Bangkok"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/leaderName", "label": "governor"}, {"uri": "http://dbpedia.org/property/residence", "label": "residence"}], "id": "6c81695f20d946cfbb2d34523cce45c7"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Quarterback> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "SerialNumber": "1088", "question": "who all play for of the american football players at  Quarterback position?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Quarterback", "label": "Quarterback"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/position", "label": "position"}, {"uri": "http://dbpedia.org/ontology/team", "label": "play"}, {"uri": "http://dbpedia.org/ontology/AmericanFootballPlayer", "label": "american football player"}], "id": "997800a673344212a2c5e15235cd6f2a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Emmett_Hughes> <http://dbpedia.org/ontology/nationality> ?uri  . }", "SerialNumber": "1091", "question": "Where is Emmett Hughes from?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Emmett_Hughes", "label": "Emmett Hughes"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/nationality"}], "id": "d492192a5490409c9eedf51d1e09b74b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/format> <http://dbpedia.org/resource/NTSC> . ?uri <http://dbpedia.org/ontology/format> <http://dbpedia.org/resource/5.1_surround_sound> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "1096", "question": "What are the television shows which are in NTSC and 5.1 surround sound?", "entity mapping": [{"uri": "http://dbpedia.org/resource/NTSC", "label": "NTSC"}, {"uri": "http://dbpedia.org/resource/5.1_surround_sound", "label": "5.1 surround sound"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/format"}, {"uri": "http://dbpedia.org/ontology/format"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "television show"}], "id": "72c7e0fedd6143eb940bc3debcdec811"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/\u00c6thelred_the_Unready> . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "SerialNumber": "1099", "question": "In which sects was the aristocrat venerated, whose parent is Thelred the Unready?", "entity mapping": [{"uri": "http://dbpedia.org/resource/\u00c6thelred_the_Unready", "label": "unready thelred"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/parent", "label": "parent"}, {"uri": "http://dbpedia.org/property/veneratedIn", "label": "venerated,"}, {"uri": "http://dbpedia.org/ontology/Royalty", "label": "Unready"}], "id": "6f0ee8f2cf284dce972eed151ef62685"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony> . ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Asus> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "SerialNumber": "1101", "question": "What is the appliance build jointly by Sony and Asus?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony", "label": "Sony"}, {"uri": "http://dbpedia.org/resource/Asus", "label": "Asus"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/manufacturer", "label": "jointly"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "jointly"}, {"uri": "http://dbpedia.org/ontology/InformationAppliance", "label": "appliance"}], "id": "468c3951514945a0be198af850f2e036"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/International_Association_of_Universities> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}", "SerialNumber": "1102", "question": "What games are played at institutions affiliated with the international association of universities?", "entity mapping": [{"uri": "http://dbpedia.org/resource/International_Association_of_Universities", "label": "international association of universities"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/affiliations", "label": "affiliated"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}, {"uri": "http://dbpedia.org/ontology/EducationalInstitution", "label": "institutions"}], "id": "e16be5fbd56d460f90909d96e7655e59"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/role> <http://dbpedia.org/resource/Close_air_support> . ?uri <http://dbpedia.org/ontology/militaryUnit> ?x  . }", "SerialNumber": "1103", "question": "Whose units are responsible for close air support?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Close_air_support", "label": "close air support"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/role", "label": "responsible"}, {"uri": "http://dbpedia.org/ontology/militaryUnit", "label": "units"}], "id": "2ab3f24e0f7942e2beb152acb193fba3"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Chess_Monthly> <http://dbpedia.org/property/discipline> ?uri. <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri} ", "SerialNumber": "1104", "question": "Which work of Craig van Tilbury is close to the area of The Chess Monthyl ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Chess_Monthly", "label": "The Chess Monthyl"}, {"uri": "http://dbpedia.org/resource/Craig_Van_Tilbury", "label": "Craig van Tilbury"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/discipline", "label": "area"}, {"uri": "http://dbpedia.org/ontology/occupation", "label": "work"}], "id": "e0baa3e7583a49c484a441b60d77088a"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/National_Basketball_Association>  . }", "SerialNumber": "1105", "question": " Count the participants of the NBA.", "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Basketball_Association", "label": "NBA"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/league", "label": "participants"}], "id": "55b783d8ff214544b144eab6929fe919"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/order> <http://dbpedia.org/resource/United_States_Senate>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "1106", "question": "How many politicians are in the US Senate?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Senate", "label": "US Senate"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/order", "label": "politicians"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "politicians"}], "id": "4f6ae681c8cd42ca97172a0eb6a2601b"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/2004\u201305_FC_Barcelona_season> <http://dbpedia.org/property/name> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}", "SerialNumber": "1107", "question": "How many players participated in the 2004-05 FC Barcelona season?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2004\u201305_FC_Barcelona_season", "label": "barcelona season"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/name", "label": "season"}, {"uri": "http://dbpedia.org/ontology/SoccerPlayer", "label": "players"}], "id": "c4d5f1f0500b4321ace51aaa29c775f4"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Suburb> . ?uri <http://dbpedia.org/property/education> ?x  . }", "SerialNumber": "1108", "question": "Count everyone who studied at an institute which are in Suburbs?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Suburb", "label": "Suburb"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/campus", "label": "institute"}, {"uri": "http://dbpedia.org/property/education", "label": "studied at"}], "id": "835041264319434da9eae0ff2fa79b48"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Broad_Creek_(Susquehanna_River)> <http://dbpedia.org/ontology/source> ?uri. <http://dbpedia.org/resource/Audenried_Tunnel> <http://dbpedia.org/ontology/location> ?uri} ", "SerialNumber": "1109", "question": "Which source of broad creek is the Audenried tunnel located ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Broad_Creek_(Susquehanna_River)", "label": "broad creek"}, {"uri": "http://dbpedia.org/resource/Audenried_Tunnel", "label": "Audenried tunnel"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/source", "label": "source"}, {"uri": "http://dbpedia.org/ontology/location", "label": "located"}], "id": "1538e37aff2242c1a828e3a85c5ed1c1"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/role> <http://dbpedia.org/resource/Close_air_support> . ?uri <http://dbpedia.org/ontology/militaryUnit> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}", "SerialNumber": "1110", "question": "Count me the number of people whose military unit is involved with Close air support ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Close_air_support", "label": "Close air support"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/role", "label": "involved"}, {"uri": "http://dbpedia.org/ontology/militaryUnit", "label": "military unit"}, {"uri": "http://dbpedia.org/ontology/MilitaryPerson", "label": "military"}], "id": "73855487a1de46828e5f91a3cf063c8d"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/QF_6-pounder_Hotchkiss> <http://dbpedia.org/ontology/usedInWar> ?x . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "1111", "question": "Who were fighting the war where the QF Hotchkiss was used?", "entity mapping": [{"uri": "http://dbpedia.org/resource/QF_6-pounder_Hotchkiss", "label": "Hotchkiss"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/usedInWar", "label": "used war"}, {"uri": "http://dbpedia.org/ontology/territory", "label": "QF"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "QF"}], "id": "39ff074f19dd4139aa8df33d7f1f58bb"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/training> <http://dbpedia.org/resource/University_of_Melbourne_Faculty_of_VCA_and_MCM> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "SerialNumber": "1112", "question": "What awards have been given to the artists coming out of the university of Melbourne, faculty of VCA and MCM?", "entity mapping": [{"uri": "http://dbpedia.org/resource/University_of_Melbourne_Faculty_of_VCA_and_MCM", "label": "university"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/training", "label": "MCM"}, {"uri": "http://dbpedia.org/ontology/award", "label": "awards"}, {"uri": "http://dbpedia.org/ontology/Artist", "label": "artist"}], "id": "61b80c35c46340f49bd57e0bc1086975"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/gender> <http://dbpedia.org/resource/Female> } ", "SerialNumber": "1118", "question": "what are some common surnames of female people?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Female", "label": "female"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/gender", "label": "people"}], "id": "1eb5d6d148254250bbcdae0ff473cf35"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Glasgow_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "SerialNumber": "1124", "question": "Give the total number of places to which airlines go, who also go to Glasgow?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Glasgow_Airport", "label": "Glasgow"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/targetAirport", "label": "airlines"}, {"uri": "http://dbpedia.org/property/destinations", "label": "airlines"}, {"uri": "http://dbpedia.org/ontology/Place", "label": "place"}], "id": "82e734b7dd9541a89f7cef6cbcb9b9df"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Moskovsky_railway_station_(Saint_Petersburg)> . ?x <http://dbpedia.org/ontology/routeStart> ?uri  . }", "SerialNumber": "1125", "question": "Where does the rail route, which ends at the Moskovsky station, begins?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Moskovsky_railway_station_(Saint_Petersburg)", "label": "moskovsky"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/routeEnd", "label": "route,"}, {"uri": "http://dbpedia.org/ontology/routeStart", "label": "route,"}], "id": "0dc38267699e4810bc3da41fe383f592"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Deane> <http://dbpedia.org/ontology/primeMinister> ?uri. <http://dbpedia.org/resource/Mark_Latham> <http://dbpedia.org/property/primeminister> ?uri} ", "SerialNumber": "1128", "question": "Who is the common prime minster of William Deaner and mark Latham ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Deane", "label": "William Deane"}, {"uri": "http://dbpedia.org/resource/Mark_Latham", "label": "mark Latham"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/primeMinister", "label": "minster"}, {"uri": "http://dbpedia.org/property/primeminister", "label": "minster"}], "id": "606abcc3ca2744b2906bb0e7cdd47256"}, {"sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/Volleyball> . ?x <http://dbpedia.org/property/athletics> ?uri }", "SerialNumber": "1134", "question": "Count the number of sports played by the universities whihc also plays Volleyball ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Volleyball", "label": "Volleyball"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/athletics", "label": "plays"}, {"uri": "http://dbpedia.org/property/athletics", "label": "plays"}], "id": "b335029079ec49f5972d4b5846330c15"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pope_Gregory_I> <http://dbpedia.org/property/veneratedIn> ?uri. <http://dbpedia.org/resource/Edwin_of_Northumbria> <http://dbpedia.org/property/veneratedIn> ?uri . }", "SerialNumber": "1135", "question": "In which religions are both Pope Gregory 1 and Edwin of northumbria reverred?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pope_Gregory_I", "label": "Pope Gregory 1"}, {"uri": "http://dbpedia.org/resource/Edwin_of_Northumbria", "label": "Edwin of northumbria"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/veneratedIn", "label": "reverred"}, {"uri": "http://dbpedia.org/property/veneratedIn", "label": "reverred"}], "id": "fac30a60a31948d38da3463419202599"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bogdanu\u0161a> <http://dbpedia.org/ontology/wineRegion> ?uri. <http://dbpedia.org/resource/Croatian_Inline_Hockey_League> <http://dbpedia.org/ontology/country> ?uri} ", "SerialNumber": "1136", "question": "Which wine region of Bogdanua is the Croatian Inline hockey team part of ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bogdanu\u0161a", "label": "Bogdanua"}, {"uri": "http://dbpedia.org/resource/Croatian_Inline_Hockey_League", "label": "croatian inline hockey"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/wineRegion", "label": "wine region"}, {"uri": "http://dbpedia.org/ontology/country", "label": "in"}], "id": "f3500fd23d3a4a29bff285293f25ae61"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sam_Loyd> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Eric_Schiller> <http://dbpedia.org/ontology/knownFor> ?uri . }", "SerialNumber": "1137", "question": "For which games are Sam Loyd and Eric Schiller both famous?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sam_Loyd", "label": "Sam Loyd"}, {"uri": "http://dbpedia.org/resource/Eric_Schiller", "label": "Eric Schiller"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/knownFor", "label": "famous"}, {"uri": "http://dbpedia.org/ontology/knownFor", "label": "famous"}], "id": "918fa31e392c498eb55811d9fa7b697c"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/party> <http://dbpedia.org/resource/Janata_Dal> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "1138", "question": "Count the number of religions followed by Janta Dal members.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Janata_Dal", "label": "Janta Dal"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/party", "label": "number"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}], "id": "8c33f93613d64297b003b2f378be8c76"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/vicePresident> <http://dbpedia.org/resource/John_Adams>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "1140", "question": "Which president of United States had vice president as John Adams?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Adams", "label": "John Adams"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/vicePresident", "label": "vice president"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "States"}], "id": "d536516bc342455c89d920f17b86dc1e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "SerialNumber": "1141", "question": "Where are the tombs of kings and queens who have died in England?", "entity mapping": [{"uri": "http://dbpedia.org/resource/England", "label": "England"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfDeath"}, {"uri": "http://dbpedia.org/property/placeOfBurial", "label": "tomb"}, {"uri": "http://dbpedia.org/ontology/Royalty", "label": "died"}], "id": "d84486681133495fa12247728693ae90"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Hank_Brown> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }", "SerialNumber": "1142", "question": "Where was the successor of Hank Brown born?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Hank_Brown", "label": "Hank Brown"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/successor", "label": "successor"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "born"}], "id": "6e1b08820a934affb050c025035b8a9a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/ethnicity> <http://dbpedia.org/resource/Greeks> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "SerialNumber": "1143", "question": "Greek writers have won which award?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Greeks", "label": "Greek "}], "predicate mapping": [{"uri": "http://dbpedia.org/property/ethnicity", "label": "won"}, {"uri": "http://dbpedia.org/ontology/award", "label": "award"}, {"uri": "http://dbpedia.org/ontology/Writer", "label": "writers"}], "id": "6e0f647889314bb68424848e0c6e2d13"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Indian_English> . ?uri <http://dbpedia.org/ontology/residence> ?x  . }", "SerialNumber": "1148", "question": "Count everyone who lives in a place where Indian English is an official language ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Indian_English", "label": "Indian English"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/officialLanguage", "label": "official language"}, {"uri": "http://dbpedia.org/ontology/residence", "label": "place"}], "id": "3c8a202e192c4382af9462f6ba5b67bb"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Scott_Berkun> <http://dbpedia.org/property/residence> ?uri. <http://dbpedia.org/resource/Dennis_DeConcini> <http://dbpedia.org/property/residence> ?uri . }", "SerialNumber": "1150", "question": "Where does Dennis DeConcini and Scott Berkun both live?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Scott_Berkun", "label": "Scott Berkun"}, {"uri": "http://dbpedia.org/resource/Dennis_DeConcini", "label": "Dennis DeConcini"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/residence", "label": "live"}, {"uri": "http://dbpedia.org/property/residence", "label": "live"}], "id": "ab981f539cf94ceea0c6ca6ddf8f673d"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_A._Danaher_III> <http://dbpedia.org/property/office> ?uri } ", "SerialNumber": "1151", "question": "Where does John A Danaher III work?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_A._Danaher_III", "label": "John A Danaher III"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/office", "label": "work"}], "id": "0c2db5b405ac48dcb16b0ce50df877d1"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MacKenzie_Miller> <http://dbpedia.org/property/birthPlace> ?uri } ", "SerialNumber": "1154", "question": "Where was MacKenzie Miller born?", "entity mapping": [{"uri": "http://dbpedia.org/resource/MacKenzie_Miller", "label": "MacKenzie Miller"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/birthPlace", "label": "born"}], "id": "3cf7f7b831724521976ea028c52cda60"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Letitia_MacTavish_Hargrave> <http://dbpedia.org/ontology/deathCause> ?uri. <http://dbpedia.org/resource/Martino_Martini> <http://dbpedia.org/ontology/deathCause> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>}", "SerialNumber": "1156", "question": "What disease led to the demise of Letitia MacTavish Hargrave and Martino Martini ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Letitia_MacTavish_Hargrave", "label": "Letitia MacTavish Hargrave"}, {"uri": "http://dbpedia.org/resource/Martino_Martini", "label": "Martino Martini"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/deathCause", "label": "demise"}, {"uri": "http://dbpedia.org/ontology/deathCause", "label": "demise"}, {"uri": "http://dbpedia.org/ontology/Disease", "label": "disease"}], "id": "9077ab52a3a64bf292bf4d297b63970e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Beeleigh_Abbey> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "SerialNumber": "1160", "question": "List the graves of the royalities which have been buried at Beeleigh Abbey ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Beeleigh_Abbey", "label": "Beeleigh Abbey"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBurial", "label": "buried"}, {"uri": "http://dbpedia.org/property/placeOfBurial", "label": "buried"}, {"uri": "http://dbpedia.org/ontology/Royalty", "label": "royalities"}], "id": "1defef355b2c46aabc6b54f50c3c95fc"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Auckland_rugby_union_team> <http://dbpedia.org/ontology/league> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }", "SerialNumber": "1161", "question": "In which country does the Auckland rugby union team play  ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Auckland_rugby_union_team", "label": "Auckland rugby union team"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/league", "label": "play"}, {"uri": "http://dbpedia.org/ontology/country", "label": "country"}], "id": "5202a1a43509411c97552eca15f0aa05"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/ontology/athletics> ?uri } ", "SerialNumber": "1163", "question": "Name the sports played by Jamiatu Muslim Mindanao?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao", "label": "Jamiatu Muslim Mindanao"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/athletics", "label": "played"}], "id": "4f1f3f16733d448ab1125085d243f9f5"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)> <http://dbpedia.org/property/narrated> ?uri. <http://dbpedia.org/resource/Tales_of_Suspense> <http://dbpedia.org/property/writers> ?uri} ", "SerialNumber": "1165", "question": "Which person naratted The Incredible Hulk and also the writer of Tales of Suspense ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)", "label": "The Incredible Hulk"}, {"uri": "http://dbpedia.org/resource/Tales_of_Suspense", "label": "Suspense"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/narrated", "label": "Tales"}, {"uri": "http://dbpedia.org/property/writers", "label": "writer"}], "id": "c453823ead1c41b19be3ef0d12dffbcf"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/SFOR> . ?x <http://dbpedia.org/ontology/battle> ?uri  . }", "SerialNumber": "1167", "question": "What is the total number of participant in conflict of SFOR?", "entity mapping": [{"uri": "http://dbpedia.org/resource/SFOR", "label": "SFOR"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/battles", "label": "number"}, {"uri": "http://dbpedia.org/ontology/battle", "label": "participant in conflict"}], "id": "d8d26021d6d14746b178240e9a73b5c5"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Harvard_Medical_School> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }", "SerialNumber": "1168", "question": "From how many different places have people gone to the Harward Medical School?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Harvard_Medical_School", "label": "Harward Medical School"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/institution", "label": "people"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "places"}], "id": "2a7a43ae00334b49bc601589c3cad2a4"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Balangir_district> <http://dbpedia.org/ontology/leaderName> ?uri. <http://dbpedia.org/resource/Amaravila> <http://dbpedia.org/ontology/leaderName> ?uri . }", "SerialNumber": "1172", "question": "Which party has come in power at both Balangir and Amaravila in india?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Balangir_district", "label": "balangir"}, {"uri": "http://dbpedia.org/resource/Amaravila", "label": "Amaravila"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/leaderName", "label": "india"}, {"uri": "http://dbpedia.org/ontology/leaderName", "label": "india"}], "id": "535f797b72ad4456b8a00fc9099707aa"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PATTS_College_of_Aeronautics> <http://dbpedia.org/property/athletics> ?uri. <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/property/athletics> ?uri . }", "SerialNumber": "1173", "question": "What are some common games played in PATTS college of aeronautics and Jamiatu muslim mindanao?", "entity mapping": [{"uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics", "label": "PATTS college of aeronautics"}, {"uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao", "label": "Jamiatu muslim mindanao"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/athletics", "label": "played"}, {"uri": "http://dbpedia.org/property/athletics", "label": "played"}], "id": "9145f59edef44c5a9a17a3fe513e7567"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/languages> <http://dbpedia.org/resource/Semnani_languages> . ?uri <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Assyrian_Neo-Aramaic>  . }", "SerialNumber": "1177", "question": "Where is Semnani and Assyrian Neo-Aramaic spoken ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Semnani_languages", "label": "semnani"}, {"uri": "http://dbpedia.org/resource/Assyrian_Neo-Aramaic", "label": "Assyrian Neo-Aramaic"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/languages", "label": "spoken"}, {"uri": "http://dbpedia.org/ontology/language", "label": "spoken"}], "id": "66a0125dafb4421d8a52c9f2008e8a18"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Massimo_Liverani> <http://dbpedia.org/property/currentTeam> <http://dbpedia.org/resource/Abarth> }", "SerialNumber": "1178", "question": "Does Massimo Liverani play for Abarth?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Massimo_Liverani", "label": "Massimo Liverani"}, {"uri": "http://dbpedia.org/resource/Abarth", "label": "Abarth"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentTeam", "label": "play"}], "id": "cf9b667b1efe4e6cb0e035746c6bba30"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Foxconn> . ?uri <http://dbpedia.org/property/os> <http://dbpedia.org/resource/PlayStation_3_system_software>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "SerialNumber": "1180", "question": "Name the appliance produced by Foxconn and its OS is provided by PlayStation 3 system software ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Foxconn", "label": "Foxconn"}, {"uri": "http://dbpedia.org/resource/PlayStation_3_system_software", "label": "PlayStation 3 system software"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/manufacturer", "label": "provided"}, {"uri": "http://dbpedia.org/property/os", "label": "OS"}, {"uri": "http://dbpedia.org/ontology/InformationAppliance", "label": "appliance"}], "id": "9e456d1b7d7a40c499f3f40a98c78f52"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Island_Bayou_(Oklahoma)> <http://dbpedia.org/ontology/source> ?uri } ", "SerialNumber": "1181", "question": "Name the source Island of Bayou ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Island_Bayou_(Oklahoma)", "label": "island bayou"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/source", "label": "source"}], "id": "3e9133d020ca44b7a475fec7231d4ad5"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Alexander_Magleby> <http://dbpedia.org/ontology/university> <http://dbpedia.org/resource/Dartmouth_College> }", "SerialNumber": "1182", "question": "Did Alexander Magleby study at the Dartmouth College?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Alexander_Magleby", "label": "Alexander Magleby"}, {"uri": "http://dbpedia.org/resource/Dartmouth_College", "label": "Dartmouth College"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/university", "label": "study"}], "id": "3ae2345e8e8844b1bcdc731a3b106eb9"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomy_Bourdelle> <http://dbpedia.org/property/placeOfBirth> ?uri  . }", "SerialNumber": "1183", "question": "Where was Thomy Bourdelle born?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Thomy_Bourdelle", "label": "Thomy Bourdelle"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBirth"}], "id": "a7f07e0669f64b349876998f51a1f5c9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Penguin> . ?x <http://dbpedia.org/ontology/authority> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "SerialNumber": "1185", "question": "Who owns the schools which have a penguin as its mascot?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Penguin", "label": "penguin"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mascot", "label": "mascot"}, {"uri": "http://dbpedia.org/ontology/authority", "label": "owns"}, {"uri": "http://dbpedia.org/ontology/School", "label": "school"}], "id": "5a9664b9e22545ef8fbc5d56f48ce5c1"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Bangkok> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "1187", "question": "What is the total number of relgions followed by people born in Bangkok?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bangkok", "label": "Bangkok"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/birthPlace", "label": "born in"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "people"}], "id": "042fb5267c974d90beae49ab51013b82"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Twin_Cities_400> <http://dbpedia.org/ontology/operatedBy> ?uri. <http://dbpedia.org/resource/Leona_Baumgartner> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "SerialNumber": "1188", "question": "Twin cities 400 is operated by what city, which is the birthplace of Leona Baumgarter?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Twin_Cities_400", "label": "Twin cities 400"}, {"uri": "http://dbpedia.org/resource/Leona_Baumgartner", "label": "Leona Baumgarter"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/operatedBy", "label": "operated by"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "birthplace"}], "id": "700b88a3eb40456a8ec23a305cc5e2e5"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Terry_Gou> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Device>}", "SerialNumber": "1191", "question": "What are the gadgets whose manufacturing company is founded by Terry Gou?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Terry_Gou", "label": "Terry Gou"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/founder", "label": "is founded by"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "manufacturing"}, {"uri": "http://dbpedia.org/ontology/Device", "label": "company"}], "id": "c09fbce16b2a4485808f9dbd9870a971"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Govinda_(actor)> <http://dbpedia.org/ontology/party> ?uri. <http://dbpedia.org/resource/Rishikesh> <http://dbpedia.org/ontology/leaderName> ?uri} ", "SerialNumber": "1192", "question": "In which of the parties that have governed over Rishikesh, does Govinda belong too?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Govinda_(actor)", "label": "Govinda"}, {"uri": "http://dbpedia.org/resource/Rishikesh", "label": "Rishikesh"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/party", "label": "parties"}, {"uri": "http://dbpedia.org/ontology/leaderName", "label": "belong"}], "id": "f129083b942f4b85aa56e2f5b04507ce"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS> . ?uri <http://dbpedia.org/ontology/programmingLanguage> <http://dbpedia.org/resource/C++>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "SerialNumber": "1193", "question": "List softwares written in C++ and runs on Mac OS ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mac_OS", "label": "Mac OS"}, {"uri": "http://dbpedia.org/resource/C++", "label": "C++"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/operatingSystem", "label": "runs"}, {"uri": "http://dbpedia.org/ontology/programmingLanguage", "label": "runs"}, {"uri": "http://dbpedia.org/ontology/Software", "label": "software"}], "id": "47d43bd9adb04270b992a2f42fdd440d"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ivanpah_Solar_Power_Facility> <http://dbpedia.org/ontology/owner> ?uri } ", "SerialNumber": "1198", "question": "Who owns Ivanpah Solar Power Facility?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ivanpah_Solar_Power_Facility", "label": "Ivanpah Solar"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owner", "label": "Facility"}], "id": "1455c7629a9f4b2cab3a809b4feac666"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Nebraska> <http://dbpedia.org/ontology/language> ?x . ?x <http://dbpedia.org/property/region> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}", "SerialNumber": "1199", "question": "Where are ethnic group located which speak Nebraskan?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Nebraska", "label": "Nebraska"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/language", "label": "speak"}, {"uri": "http://dbpedia.org/property/region", "label": "speak"}, {"uri": "http://dbpedia.org/ontology/EthnicGroup", "label": "ethnic group"}], "id": "163faec9938d47df8df231307032c826"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_National_Herald_(India)> <http://dbpedia.org/ontology/owner> ?uri } ", "SerialNumber": "1200", "question": "Name the sharehoders of The National Herald ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_National_Herald_(India)", "label": "The National Herald"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owner"}], "id": "b9bf97d01e9745d681eda36b557db3a8"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/Sweden> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }", "SerialNumber": "1201", "question": "List some things that Swedish people have become famous for?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sweden", "label": "Swedish"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/stateOfOrigin"}, {"uri": "http://dbpedia.org/ontology/knownFor", "label": "famous"}], "id": "b4ab98c79b904735bf86e5221256116e"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Mass_media> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }", "SerialNumber": "1203", "question": "How many things are made by companies who produce mass media articles?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mass_media", "label": "mass media"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/products", "label": "articles"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "made by"}], "id": "8265fe61d94940a4b5d099c217d00245"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Essex>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "1204", "question": "Name the rivers who originate from Essex?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Essex", "label": "Essex"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/mouthPlace", "label": "originate"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "1d9fe6f6eb72444b935342fb4d81dad1"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lion> <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Animal> }", "SerialNumber": "1208", "question": "Is lion an animal?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lion", "label": "lion"}, {"uri": "http://dbpedia.org/resource/Animal", "label": "animal"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/kingdom"}], "id": "6f768f7b19424f46bd39e6238cd0662c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Los_Angeles_Angels_of_Anaheim>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}", "SerialNumber": "1209", "question": "Which players have represented Los Angeles Angels of Anaheim?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Los_Angeles_Angels_of_Anaheim", "label": "Los Angeles Angels of Anaheim"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/team", "label": "represented"}, {"uri": "http://dbpedia.org/ontology/BaseballPlayer", "label": "players"}], "id": "6e7b5dec0d264850bf90a1ff6256427a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/BBC> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "1211", "question": "List the shows whose network is run by BBC.", "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC", "label": "BBC"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owningCompany", "label": "run"}, {"uri": "http://dbpedia.org/ontology/network", "label": "network"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "e0472e2206c9496a9f05207287956509"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Virtual_Console>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "SerialNumber": "1213", "question": "What are some games availible on nintendo's virtual console?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Virtual_Console", "label": "virtual console"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/computingPlatform", "label": "availible"}, {"uri": "http://dbpedia.org/ontology/VideoGame", "label": "games"}], "id": "0cae9ed212d44d639d21c9747fe2c523"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Chidambaram_Subramaniam> <http://dbpedia.org/property/primeminister> ?x . ?x <http://dbpedia.org/ontology/party> ?uri  . }", "SerialNumber": "1214", "question": "For which party's PM did Chidambaram Subramaniam serve?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chidambaram_Subramaniam", "label": "Chidambaram Subramaniam"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/primeminister", "label": "serve"}, {"uri": "http://dbpedia.org/ontology/party", "label": "party"}], "id": "2f91368c9d5c424791d014f111214078"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Scotland> . ?uri <http://dbpedia.org/ontology/starring> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "1219", "question": "List the movies whose cast member were born in Scotland.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Scotland", "label": "Scotland"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/birthPlace", "label": "born in"}, {"uri": "http://dbpedia.org/ontology/starring", "label": "member"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "faa44f1aaa984ca3b8508b206a3d0434"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Playboy_Enterprises> <http://dbpedia.org/property/products> ?uri. <http://dbpedia.org/resource/Frank_Thorne> <http://dbpedia.org/ontology/award> ?uri} ", "SerialNumber": "1221", "question": "Which recognized title of Frank Thorne is also the product of Playboy Enterprise ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Playboy_Enterprises", "label": "Playboy Enterprise "}, {"uri": "http://dbpedia.org/resource/Frank_Thorne", "label": "Frank Thorne"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/products", "label": "product"}, {"uri": "http://dbpedia.org/ontology/award", "label": "title"}], "id": "b3e73fe9523d4661876a510c322a6d66"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Screenwriting> . ?uri <http://dbpedia.org/ontology/creator> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "1228", "question": "What are the shows whose creator has worked as a screenwriter?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Screenwriting", "label": "screenwriter"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/occupation", "label": "work"}, {"uri": "http://dbpedia.org/ontology/creator", "label": "creator"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "3d48aaabb0914e66b31f1f131e6694fa"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Newman_Haynes_Clanton> . ?uri <http://dbpedia.org/ontology/opponent> ?x  . }", "SerialNumber": "1229", "question": "Who is the person whose opponent's father is Newman Haynes Clanton?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Newman_Haynes_Clanton", "label": "Newman Haynes Clanton"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/parent"}, {"uri": "http://dbpedia.org/ontology/opponent", "label": "opponent"}], "id": "a9c3b3eccb964ced854274422bbdec73"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/India> . ?x <http://dbpedia.org/property/religion> ?uri  . }", "SerialNumber": "1231", "question": "Which religions are practiced in India?", "entity mapping": [{"uri": "http://dbpedia.org/resource/India", "label": "India"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/hometown", "label": "practiced"}, {"uri": "http://dbpedia.org/property/religion", "label": "religion"}], "id": "5f5159b391bc417294f896820d53baf8"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Frank_R._Lillie_House> <http://dbpedia.org/ontology/architecturalStyle> <http://dbpedia.org/resource/Chicago> }", "SerialNumber": "1236", "question": "Is the Frank R Lillie House has the Chicago architecture?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Frank_R._Lillie_House", "label": "lillie house frank"}, {"uri": "http://dbpedia.org/resource/Chicago", "label": "Chicago"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/architecturalStyle", "label": "architecture"}], "id": "9ca41a6f79a14b689dcfae0764808cd6"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Grey_Goose_(vodka)> <http://dbpedia.org/property/manufacturer> ?uri. <http://dbpedia.org/resource/Eristoff> <http://dbpedia.org/property/manufacturer> ?uri . }", "SerialNumber": "1237", "question": "Grey gppse and eristoff is produced by which company?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Grey_Goose_(vodka)", "label": "grey"}, {"uri": "http://dbpedia.org/resource/Eristoff", "label": "eristoff"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/manufacturer", "label": "company"}, {"uri": "http://dbpedia.org/property/manufacturer", "label": "company"}], "id": "b727f0394eae4116bc3af96be4da1c1d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderTitle> <http://dbpedia.org/resource/San_Francisco_Board_of_Supervisors> . ?uri <http://dbpedia.org/property/constituency> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "1238", "question": "Which politician's constituency is led by the SF Board of Supervisors?", "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Francisco_Board_of_Supervisors", "label": "SF Board of Supervisors"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/leaderTitle", "label": "led"}, {"uri": "http://dbpedia.org/property/constituency", "label": "constituency"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder"}], "id": "6f9848de2af84f4fbcded6f13f857cf2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Boeing_Field> <http://dbpedia.org/ontology/operator> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>}", "SerialNumber": "1240", "question": "What are the county seats of the region which operates the Boeing Field?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Boeing_Field", "label": "Boeing Field"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/operator", "label": "operates"}, {"uri": "http://dbpedia.org/ontology/countySeat", "label": "county seat"}, {"uri": "http://dbpedia.org/ontology/Region", "label": "region"}], "id": "19ab52b648234276ae7f2e54b88f4ea7"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2015_MLS_All-Star_Game> <http://dbpedia.org/property/city> ?uri } ", "SerialNumber": "1244", "question": "Where did the 2015 MLS All-Star Game take place?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2015_MLS_All-Star_Game", "label": "2015 MLS All-Star Game"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/city", "label": "place"}], "id": "4a03be4b69ea4b10ba1e3d95a5f86f62"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/owners> <http://dbpedia.org/resource/News_Corp> . ?uri <http://dbpedia.org/ontology/employer> ?x  . }", "SerialNumber": "1246", "question": "Name some people working at someplace owned by News Corp.", "entity mapping": [{"uri": "http://dbpedia.org/resource/News_Corp", "label": "News Corp"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/owners", "label": "owned"}, {"uri": "http://dbpedia.org/ontology/employer", "label": "someplace"}], "id": "447a43a67f144236a29b626f440ec2a0"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/Quezon_City> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}", "SerialNumber": "1248", "question": "What is the mascot of military in Quezon city?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Quezon_City", "label": "Quezon city"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/garrison"}, {"uri": "http://dbpedia.org/property/mascot", "label": "mascot"}, {"uri": "http://dbpedia.org/ontology/MilitaryUnit", "label": "military"}], "id": "262bc6894dcd4fda8c651eb310b44496"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Benjamin_Spock> . ?x <http://dbpedia.org/property/incumbent> ?uri  . }", "SerialNumber": "1250", "question": "Who was the president at the time when the opponent of Benjamin Spock held office?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Benjamin_Spock", "label": "Benjamin Spock"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/opponent", "label": "opponent"}, {"uri": "http://dbpedia.org/property/incumbent", "label": "office"}], "id": "0213a459e69a402da238e1ea7bf48f91"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Janaka_Thissakuttiarachchi> <http://dbpedia.org/property/religion> ?uri. <http://dbpedia.org/resource/Ati\u015ba> <http://dbpedia.org/ontology/occupation> ?uri . }", "SerialNumber": "1253", "question": "Janaka Thissakuttiarachchi follows what religion, which once employed Atisa Srijnana too?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Janaka_Thissakuttiarachchi", "label": "Janaka Thissakuttiarachchi"}, {"uri": "http://dbpedia.org/resource/Ati\u015ba", "label": "Atisa"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/religion", "label": "religion"}, {"uri": "http://dbpedia.org/ontology/occupation", "label": "employed"}], "id": "c24ec1614e724dd8aa615e6054a4f8f3"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Trade_association> . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "SerialNumber": "1255", "question": "List the served region of the organisations of Trade association.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Trade_association", "label": "Trade association"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/type"}, {"uri": "http://dbpedia.org/ontology/regionServed", "label": "served region"}, {"uri": "http://dbpedia.org/ontology/Organisation", "label": "organisation"}], "id": "6924f47eafe44da9954f729ada2342f5"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Alcal\u00e1_de_Henares> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "SerialNumber": "1261", "question": "List the books whose authors are in Alcal de Henares.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Alcal\u00e1_de_Henares", "label": "Alcal de Henares"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/birthPlace"}, {"uri": "http://dbpedia.org/ontology/author", "label": "authors"}, {"uri": "http://dbpedia.org/ontology/Book", "label": "book"}], "id": "1cf22c99abb546c680faf2a6b74be80c"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Guatemala> <http://dbpedia.org/ontology/governmentType> <http://dbpedia.org/resource/Unitary_state> }", "SerialNumber": "1262", "question": "Is Guatemala a unitary state?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Guatemala", "label": "Guatemala"}, {"uri": "http://dbpedia.org/resource/Unitary_state", "label": "unitary state"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/governmentType"}], "id": "bc844f916fc34914ad85428c10a7184c"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/discipline> <http://dbpedia.org/resource/Philosophy> } ", "SerialNumber": "1263", "question": "what are some journals of academic Philosophy", "entity mapping": [{"uri": "http://dbpedia.org/resource/Philosophy", "label": "Philosophy"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/discipline", "label": "academic"}], "id": "498f586cd8424c38b3af6f802891e55a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/order> <http://dbpedia.org/resource/Provisional_Government_of_Saskatchewan>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}", "SerialNumber": "1264", "question": "By which member of parliament was Provisional Government of Saskatchewan led?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Provisional_Government_of_Saskatchewan", "label": "Provisional Government of Saskatchewan"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/order", "label": "led"}, {"uri": "http://dbpedia.org/ontology/MemberOfParliament", "label": "member of parliament"}], "id": "5894b0cd2f60427089e1eb2fc7c0607f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/property/locationCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage>}", "SerialNumber": "1267", "question": "Which drinks have emerged from the US?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": "US"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/origin", "label": "emerged"}, {"uri": "http://dbpedia.org/property/locationCity", "label": "emerged"}, {"uri": "http://dbpedia.org/ontology/Beverage", "label": "emerged"}], "id": "953d596a5ee1434a969fadbb3a3741a1"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vietnam_Airlines> <http://dbpedia.org/ontology/location> ?uri } ", "SerialNumber": "1270", "question": "Where is Vietnam Airlines located ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Vietnam_Airlines", "label": "Vietnam Airlines"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/location", "label": "located"}], "id": "3280fa6df4c244cfa8768b869e50218f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Dartington_College_of_Arts> . ?x <http://dbpedia.org/property/chancellor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "SerialNumber": "1271", "question": "Who is the chancellor of the university which affiliates the Dartington College of Arts?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dartington_College_of_Arts", "label": "Dartington College of Arts"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/affiliations", "label": "affiliates"}, {"uri": "http://dbpedia.org/property/chancellor", "label": "chancellor"}, {"uri": "http://dbpedia.org/ontology/University", "label": "university"}], "id": "685ddf1e1ed641888613c5f9c85267b7"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "1272", "question": "How many sitcoms are there whose theme music is composed by a New Yorker?", "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York", "label": "New York"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/hometown", "label": "er"}, {"uri": "http://dbpedia.org/property/themeMusicComposer", "label": "composed"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "er"}], "id": "e33e3f1a2e9d462cb891215cad82dc5b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michigan_Renaissance_Festival> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Comcast_SportsNet_Chicago> <http://dbpedia.org/ontology/broadcastArea> ?uri . }", "SerialNumber": "1273", "question": "Comcast SportsNet is broadcasted in what area, which also has the Michigan Renaissance Festival?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Michigan_Renaissance_Festival", "label": "Michigan Renaissance Festival"}, {"uri": "http://dbpedia.org/resource/Comcast_SportsNet_Chicago", "label": "sportsnet comcast"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/location", "label": "SportsNet"}, {"uri": "http://dbpedia.org/ontology/broadcastArea", "label": "broadcasted"}], "id": "5a8d27913f2348a5a0a9641d53ef1704"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/SummerSlam_(2004)> <http://dbpedia.org/property/venue> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . }", "SerialNumber": "1274", "question": "List all the tenants of the stadium where the WWF Summer Slam 2004 took place.", "entity mapping": [{"uri": "http://dbpedia.org/resource/SummerSlam_(2004)", "label": "summer slam 2004"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/venue", "label": "Slam"}, {"uri": "http://dbpedia.org/ontology/tenant", "label": "tenant"}], "id": "46394065a08e478b946f7994c131b013"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indy_PopCon> <http://dbpedia.org/property/venue> ?uri. <http://dbpedia.org/resource/Louis_LeCocq> <http://dbpedia.org/property/placeOfDeath> ?uri} ", "SerialNumber": "1276", "question": "Which venue of indy PopCon is also the death palce of Louis Le Cocqq ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Indy_PopCon", "label": "indy PopCon"}, {"uri": "http://dbpedia.org/resource/Louis_LeCocq", "label": "louis"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/venue", "label": "venue"}, {"uri": "http://dbpedia.org/property/placeOfDeath", "label": "death"}], "id": "6ad1a5e54b384e689efa82debf6b0c4f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Comedy_Central> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "1280", "question": "Name the TV show with theme music by Primus and broadcasted on Comedy Central ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Comedy_Central", "label": "Comedy Central"}, {"uri": "http://dbpedia.org/resource/Primus_(band)", "label": "Primus"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/network", "label": "broadcasted"}, {"uri": "http://dbpedia.org/property/themeMusicComposer", "label": "theme music"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "e7cb1c037fd84b45a5a0b5e4de0f3ef2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/In_a_Word_or_2> <http://dbpedia.org/property/artist> ?x . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }", "SerialNumber": "1282", "question": "List down all the associcated musical artist of the artist of In a Word or 2 ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/In_a_Word_or_2", "label": "In a Word or 2"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/artist", "label": "artist"}, {"uri": "http://dbpedia.org/ontology/associatedMusicalArtist", "label": "musical"}], "id": "5fa9fa2055eb4ddbb39a16de5cdc76ec"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Geneva> <http://dbpedia.org/ontology/neighboringMunicipality> <http://dbpedia.org/resource/Lancy> }", "SerialNumber": "1287", "question": "Is Lancy a city close to Geneva?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Geneva", "label": "Geneva"}, {"uri": "http://dbpedia.org/resource/Lancy", "label": "Lancy"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/neighboringMunicipality", "label": "close"}], "id": "103349c9b1c646bca70a2c8d7a4458d3"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Environmentalism>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "SerialNumber": "1290", "question": "Give me some organizations working for Environmentalism", "entity mapping": [{"uri": "http://dbpedia.org/resource/Environmentalism", "label": "Environmentalism"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/purpose", "label": "working"}, {"uri": "http://dbpedia.org/ontology/Organisation"}], "id": "f075032d8bb14876a93a95f98cda7330"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sino-French_War> <http://dbpedia.org/ontology/territory> ?uri. <http://dbpedia.org/resource/Raoul_Magrin-Vernerey> <http://dbpedia.org/property/battles> ?uri} ", "SerialNumber": "1292", "question": "What territory of Sino French War was the battle of Raoul Magrin-Vernerey fought ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sino-French_War", "label": "french sino war"}, {"uri": "http://dbpedia.org/resource/Raoul_Magrin-Vernerey", "label": "Raoul Magrin-Vernerey"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/territory", "label": "territory"}, {"uri": "http://dbpedia.org/property/battles", "label": "battle"}], "id": "6205616c0ee048eab5e020480247818b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Fr._Orlando> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "SerialNumber": "1298", "question": "What games can be played in schools founded by Fr. Orlando?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fr._Orlando", "label": "Fr. Orlando"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/foundedBy", "label": "founded by"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "played"}, {"uri": "http://dbpedia.org/ontology/School", "label": "school"}], "id": "1ffae1c9ef7d48869e193bade845992d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Warner_Bros._Television> . ?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "1300", "question": "Which TV show distributed by Warner Bros. has Christopher Franke as one of the artist ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Warner_Bros._Television", "label": "warner bros."}, {"uri": "http://dbpedia.org/resource/Christopher_Franke", "label": "Christopher Franke"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/distributor", "label": "distributed by"}, {"uri": "http://dbpedia.org/property/artist", "label": "artist"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "1f3e42c050df4103ab6f4ee7b80bc037"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/highschool> <http://dbpedia.org/resource/Memphis,_Tennessee> . ?x <http://dbpedia.org/ontology/school> ?uri  . }", "SerialNumber": "1301", "question": "Where did the graduates of Memphis, Tenessee continue their education?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Memphis,_Tennessee", "label": "Memphis"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/highschool", "label": "education"}, {"uri": "http://dbpedia.org/ontology/school", "label": "education"}], "id": "66629e2919e3457b92e9412d2765707f"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ralph_Flanders> <http://dbpedia.org/property/occupation> ?uri } ", "SerialNumber": "1303", "question": "Who is the employer of Ralph flanders ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ralph_Flanders", "label": "Ralph flanders"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/occupation", "label": "employer"}], "id": "321da0a6b5db42d28b6af0d8130999ad"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cityServed> <http://dbpedia.org/resource/Ontario,_California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airport>}", "SerialNumber": "1304", "question": "What is an airport inside ontario?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ontario,_California", "label": "ontario"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/cityServed"}, {"uri": "http://dbpedia.org/ontology/Airport", "label": "airport"}], "id": "95e2eff5a1b64e1b9ce1e7edf8adedcf"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mayor> <http://dbpedia.org/resource/Anne_Hidalgo>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}", "SerialNumber": "1310", "question": "What is the city whose mayor is Anne Hidalgo?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Anne_Hidalgo", "label": "Anne Hidalgo"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mayor", "label": "mayor"}, {"uri": "http://dbpedia.org/ontology/Settlement", "label": "city"}], "id": "d645d34b10204b259900c68a10b1de61"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Flowering_plant> . ?uri <http://dbpedia.org/ontology/ingredient> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}", "SerialNumber": "1311", "question": "Name some dishes made with flowering plants.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Flowering_plant", "label": "flowering plant"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/division", "label": "s."}, {"uri": "http://dbpedia.org/ontology/ingredient", "label": "s."}, {"uri": "http://dbpedia.org/ontology/Food", "label": "s."}], "id": "4c9dc9bbe2444c8890caed8026dde6df"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/education> <http://dbpedia.org/resource/Poland> . ?x <http://dbpedia.org/property/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engineer>}", "SerialNumber": "1312", "question": "Which nation's engineers have graduated in Poland?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Poland", "label": "Poland"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/education", "label": "graduated"}, {"uri": "http://dbpedia.org/property/nationality", "label": "nation's"}, {"uri": "http://dbpedia.org/ontology/Engineer", "label": "engineer"}], "id": "0b8b29a0b2b745acbbed6037be44ec41"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/buildingType> <http://dbpedia.org/resource/Ferris_wheel> . ?x <http://dbpedia.org/property/locationTown> ?uri  . }", "SerialNumber": "1313", "question": "What are some cities which have a Ferris wheel?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ferris_wheel", "label": "Ferris wheel"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/buildingType", "label": "cities"}, {"uri": "http://dbpedia.org/property/locationTown", "label": "cities"}], "id": "a7ad80582ef84f54bb67cf7108003796"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Northanger_Abbey> <http://dbpedia.org/property/author> ?uri. <http://dbpedia.org/resource/Susanna_Clarke> <http://dbpedia.org/property/influences> ?uri . }", "SerialNumber": "1316", "question": "Which author inspired Susanna Clarke, and wrote Northanger Abbey?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Northanger_Abbey", "label": "Northanger Abbey"}, {"uri": "http://dbpedia.org/resource/Susanna_Clarke", "label": "Susanna Clarke"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/author", "label": "author"}, {"uri": "http://dbpedia.org/property/influences", "label": "wrote"}], "id": "1a98e56e3b3844d28ca9cb861532a949"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stagecoach,_Colorado> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Peetz_Table_Wind_Energy_Center> <http://dbpedia.org/property/location> ?uri . }", "SerialNumber": "1319", "question": "In all the places with a stagecoach, where is a Peetz Table Wind Energy Center located too?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Stagecoach,_Colorado", "label": "stagecoach,"}, {"uri": "http://dbpedia.org/resource/Peetz_Table_Wind_Energy_Center", "label": "Peetz Table Wind Energy Center"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/location", "label": "located"}, {"uri": "http://dbpedia.org/property/location", "label": "located"}], "id": "892b60fa57f743969c1fe9bf5708e9c0"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Democratic_Party_(United_States)> . ?uri <http://dbpedia.org/ontology/location> ?x  . }", "SerialNumber": "1322", "question": "List everything governed by the Democratic Party of US?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Democratic_Party_(United_States)", "label": "Democratic Party"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/leaderName", "label": "governed"}, {"uri": "http://dbpedia.org/ontology/location", "label": "governed"}], "id": "d90cfc130f684d5a9c0c03a85e6e6dc3"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerrell_Jackson> <http://dbpedia.org/ontology/debutTeam> ?uri. <http://dbpedia.org/resource/Andrew_Economos> <http://dbpedia.org/ontology/formerTeam> ?uri} ", "SerialNumber": "1324", "question": "Of all the teams that Andrew Economos played for, which one did Jerrel Jackson play his first game for?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jerrell_Jackson", "label": "jackson jerrel"}, {"uri": "http://dbpedia.org/resource/Andrew_Economos", "label": "Andrew Economos"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/debutTeam", "label": "teams"}, {"uri": "http://dbpedia.org/ontology/formerTeam", "label": "teams"}], "id": "5f84770805fe4db48a22ddd19ae2daf5"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Unix-like> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "SerialNumber": "1325", "question": "What are some software which are written in languages that are run on Unix like OS?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Unix-like", "label": "unix like"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/operatingSystem", "label": "OS"}, {"uri": "http://dbpedia.org/property/programmingLanguage", "label": "languages"}, {"uri": "http://dbpedia.org/ontology/Software", "label": "software"}], "id": "81237995d578482ea6accf7e9ffcd320"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Monty_Python>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "1326", "question": "Name the movies writtten by the group Monty Python ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Monty_Python", "label": "Monty Python"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/writer", "label": "group"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "ce5ddceafe844a9bb7a76194c0af8c7f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Columbus_Crew_SC> . ?x <http://dbpedia.org/ontology/location> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballMatch>}", "SerialNumber": "1327", "question": "Where did some of the matches take place where Columbus Crew SC played?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Columbus_Crew_SC", "label": "Columbus Crew SC"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/team", "label": "played"}, {"uri": "http://dbpedia.org/ontology/location", "label": "played"}, {"uri": "http://dbpedia.org/ontology/FootballMatch", "label": "matches"}], "id": "b39233c5a03a4b7087e4b5546806cc80"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Alex_Chalk> . ?uri <http://dbpedia.org/ontology/location> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}", "SerialNumber": "1330", "question": "List the agencies located someplace lead by Alex Chalk.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Alex_Chalk", "label": "Alex Chalk"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/leaderName", "label": "lead"}, {"uri": "http://dbpedia.org/ontology/location", "label": "someplace"}, {"uri": "http://dbpedia.org/ontology/GovernmentAgency", "label": "agencies"}], "id": "f6ced5d820a1470b843b40391b01cf86"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Montauk_State_Park> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "1333", "question": "Through which cities do the rivers starting at the Montauk State Park flow?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Montauk_State_Park", "label": "Montauk State Park"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourcePlace", "label": "flow"}, {"uri": "http://dbpedia.org/ontology/city", "label": "State"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "78aeb7a8b2814ff1a4a9f813f7e41392"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Maharashtra> . ?x <http://dbpedia.org/ontology/party> ?uri  . }", "SerialNumber": "1334", "question": "People from how many political parties exist in Maharashtra?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Maharashtra", "label": "Maharashtra"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBirth"}, {"uri": "http://dbpedia.org/ontology/party", "label": "parties"}], "id": "9c90326c60b94d57bf5ee570607ca6b5"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/American_Classical_League> <http://dbpedia.org/property/motto> ?uri. <http://dbpedia.org/resource/Probus_(journal)> <http://dbpedia.org/ontology/academicDiscipline> ?uri} ", "SerialNumber": "1337", "question": "Which moto of american Classical League is also the academic discipline of Probus ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/American_Classical_League", "label": "american Classical League"}, {"uri": "http://dbpedia.org/resource/Probus_(journal)", "label": "Probus"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/motto", "label": "moto"}, {"uri": "http://dbpedia.org/ontology/academicDiscipline", "label": "academic discipline"}], "id": "7a65376ab49c4988a7e19d19ee8b0575"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?uri <http://dbpedia.org/property/education> ?x  . }", "SerialNumber": "1338", "question": "Who are the people whose alumna is a part of the National Collegiate Athletic Association?", "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association", "label": "National Collegiate Athletic Association"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/athletics", "label": "athletic"}, {"uri": "http://dbpedia.org/property/education", "label": "part"}], "id": "28f1b38fd1fa43dcafd2eee7e5778775"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Toronto> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }", "SerialNumber": "1345", "question": "What did the people buried in Toronto die of?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto", "label": "Toronto"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/restingPlace", "label": "buried in"}, {"uri": "http://dbpedia.org/ontology/deathCause", "label": "die"}], "id": "17a32c37985d4016a2887aaeae4c165c"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Yabanc\u0131_Damat> <http://dbpedia.org/property/firstAired> <http://dbpedia.org/resource/United_Arab_Emirates> }", "SerialNumber": "1348", "question": "Was Yabanc Damat first aired in UAE?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Yabanc\u0131_Damat", "label": "yabanc damat"}, {"uri": "http://dbpedia.org/resource/United_Arab_Emirates", "label": "UAE"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/firstAired", "label": "first aired"}], "id": "4382d08ff34c47ffbf3c17b6a9451ce1"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}", "SerialNumber": "1349", "question": "Name some basketball players who  have played for chicago bulls?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chicago_Bulls", "label": "chicago bulls"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/team", "label": "played"}, {"uri": "http://dbpedia.org/ontology/BasketballPlayer", "label": "basketball player"}], "id": "6aff1d15601947138c861eb36f7aa7ac"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Peace> . ?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Environmentalism> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "SerialNumber": "1350", "question": "list the organisation with motive for peace and environmentalism?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Peace", "label": "peace"}, {"uri": "http://dbpedia.org/resource/Environmentalism", "label": "environmentalism"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/purpose", "label": "motive"}, {"uri": "http://dbpedia.org/property/purpose", "label": "motive"}, {"uri": "http://dbpedia.org/ontology/Organisation", "label": "organisation"}], "id": "6f3fc96104a94a63a66096801b34bf71"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nathan_Dempsey> <http://dbpedia.org/property/playedFor> ?uri. <http://dbpedia.org/resource/Fran\u00e7ois_Beauchemin> <http://dbpedia.org/ontology/formerTeam> ?uri} ", "SerialNumber": "1356", "question": "Which former team of Franois Beauchemin does the Nathan Dempsey played for ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Nathan_Dempsey", "label": "Nathan Dempsey"}, {"uri": "http://dbpedia.org/resource/Fran\u00e7ois_Beauchemin", "label": "beauchemin"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/playedFor", "label": "played for"}, {"uri": "http://dbpedia.org/ontology/formerTeam", "label": "former team"}], "id": "90670bde322f4fdb820424305500a826"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Desilu_Productions> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "1360", "question": "How many sitcoms were produced by the company whose predecessor was the Desilu Productions", "entity mapping": [{"uri": "http://dbpedia.org/resource/Desilu_Productions", "label": "Desilu Productions"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/predecessor", "label": "predecessor"}, {"uri": "http://dbpedia.org/property/company", "label": "company"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "produced"}], "id": "0692b55140154ca68f9797dda50c0caa"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Simon_Ferro> . ?x <http://dbpedia.org/ontology/president> ?uri  . }", "SerialNumber": "1364", "question": "Under which president did the predecessor of Simon Ferro work?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Simon_Ferro", "label": "Simon Ferro"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/successor", "label": "work"}, {"uri": "http://dbpedia.org/ontology/president", "label": "president"}], "id": "ae8ea7fe77cc49459a8f5e49652308d4"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/New_York_City_Housing_Authority> . ?x <http://dbpedia.org/ontology/municipality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "SerialNumber": "1365", "question": "In which municipalities does the NYC housing authority own buildings?", "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_City_Housing_Authority", "label": "authority housing"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owningOrganisation"}, {"uri": "http://dbpedia.org/ontology/municipality", "label": "municipalities"}, {"uri": "http://dbpedia.org/ontology/Building", "label": "building"}], "id": "ffd7305acc7848ba94088cfcda3648c6"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/homeStadium> <http://dbpedia.org/resource/Camp_Nou> . ?x <http://dbpedia.org/property/name> ?uri  . }", "SerialNumber": "1366", "question": "What are some team members of the team based in Camp Nou?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Camp_Nou", "label": "Camp Nou"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/homeStadium", "label": "based"}, {"uri": "http://dbpedia.org/property/name", "label": "based"}], "id": "6ed618f4088e4b24921cb9a0130ce68c"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/San_Diego_Surf_(film)> <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Andy_Warhol> }", "SerialNumber": "1367", "question": "Was andy worhol the director of the san diego surf?", "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Diego_Surf_(film)", "label": "san diego surf"}, {"uri": "http://dbpedia.org/resource/Andy_Warhol", "label": "andy worhol"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/cinematography", "label": "director"}], "id": "2ca6b83130654efb9992783432c6e211"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/University_of_Edinburgh> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }", "SerialNumber": "1369", "question": "Count the number of places where alumini of Edinburgh university have died?", "entity mapping": [{"uri": "http://dbpedia.org/resource/University_of_Edinburgh", "label": "Edinburgh university"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/education", "label": "died"}, {"uri": "http://dbpedia.org/ontology/deathPlace", "label": "places"}], "id": "bc8d8dac1f054a9eaaf3a61ebce0decd"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Geneva> <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> }", "SerialNumber": "1370", "question": "Is Cologny a neighbouring city of Geneva?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Geneva", "label": "Geneva"}, {"uri": "http://dbpedia.org/resource/Cologny", "label": "Cologny"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/neighboringMunicipalities", "label": "city"}], "id": "0f3f93023ae74d94bac356887ec1e15b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/territory> <http://dbpedia.org/resource/Dane_County,_Wisconsin> . ?uri <http://dbpedia.org/ontology/restingPlace> ?x  . }", "SerialNumber": "1372", "question": "Whose tomb is in cities under Dane County of Wisconsin?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dane_County,_Wisconsin", "label": "wisconsin county dane"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/territory", "label": "Wisconsin"}, {"uri": "http://dbpedia.org/ontology/restingPlace", "label": "tomb"}], "id": "1efd0ef701644607af3ae7939ea319be"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Digit-Alb> <http://dbpedia.org/ontology/regionServed> ?uri. <http://dbpedia.org/resource/Christine_Rolfes> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "SerialNumber": "1376", "question": "Which of the continents that Digitalb worked in, was christine rolfes born in?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Digit-Alb", "label": "Digitalb"}, {"uri": "http://dbpedia.org/resource/Christine_Rolfes", "label": "christine rolfes"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/regionServed", "label": "worked"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "born in"}], "id": "8fce468edfb5414283a20c5f243e0728"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Remo>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "SerialNumber": "1378", "question": "What famous musicians play the remo?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Remo", "label": "remo"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/instrument", "label": "play"}, {"uri": "http://dbpedia.org/ontology/MusicalArtist", "label": "musician"}], "id": "c39f9c9df5b147d49a09ee2a5ef485d3"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Steve_Burke_(businessman)> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "1380", "question": "List the television shows whose network's executive officer is Steve Burke.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Steve_Burke_(businessman)", "label": "Steve Burke"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/keyPerson", "label": "officer"}, {"uri": "http://dbpedia.org/ontology/network", "label": "network"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "television show"}], "id": "6437c30f7c71486d9651bdf6c5109725"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/firstDriver> <http://dbpedia.org/resource/Damon_Hill> . ?x <http://dbpedia.org/ontology/poleDriver> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FormulaOneRacer>}", "SerialNumber": "1384", "question": "How many pole drivers have been there in grand prixes where first driver was Damon Hill?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Damon_Hill", "label": "Damon Hill"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/firstDriver", "label": "first driver"}, {"uri": "http://dbpedia.org/ontology/poleDriver", "label": "pole driver"}, {"uri": "http://dbpedia.org/ontology/FormulaOneRacer", "label": "grand"}], "id": "aaee7a24a90e47d3954f143bf64ca267"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Live_at_The_Triple_Door_(The_Courage_album)> <http://dbpedia.org/property/recorded> ?uri } ", "SerialNumber": "1385", "question": "In which city wasThe Triple Door (The Courage album)  performed live?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Live_at_The_Triple_Door_(The_Courage_album)", "label": "courage triple album)"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/recorded", "label": "live"}], "id": "1a8cc713ccd443c9ba6a74d395b4b6b2"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ford_Model_K> <http://dbpedia.org/ontology/designCompany> <http://dbpedia.org/resource/Henry_Ford> }", "SerialNumber": "1386", "question": "Was the Model K designed by Herny Ford?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Model_K", "label": "model ford"}, {"uri": "http://dbpedia.org/resource/Henry_Ford", "label": "ford"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/designCompany", "label": "designed"}], "id": "3af799b07d8d4b5c8a03857948db6c6f"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elizabeth_of_Rhuddlan> <http://dbpedia.org/property/placeOfBurial> ?uri. <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri} ", "SerialNumber": "1387", "question": "Which local authority of Buckhurst Hill County High School is the palce of burial of Elizabeth Rhuddlan ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Elizabeth_of_Rhuddlan", "label": "elizabeth rhuddlan"}, {"uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School", "label": "Buckhurst Hill County High School"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBurial", "label": "burial"}, {"uri": "http://dbpedia.org/ontology/localAuthority", "label": "local authority"}], "id": "9e0dd9094d6b42b2ade24c563d35c3db"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Kazuo_Hirai> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }", "SerialNumber": "1389", "question": "What is manufactured by a company headed by Kazuo Hirai?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kazuo_Hirai", "label": "Kazuo Hirai"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/keyPeople", "label": "headed"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "manufactured by"}], "id": "cf2c22fcebba4a6f86eed6755e915b2f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Benu\u00e9_River> . ?x <http://dbpedia.org/ontology/outflow> ?uri  . }", "SerialNumber": "1390", "question": "List the outflows of the lake whose one of the outflows is Benu river ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Benu\u00e9_River", "label": "river benu"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/outflow", "label": "outflow"}, {"uri": "http://dbpedia.org/ontology/outflow", "label": "outflow"}], "id": "3c301cf561394deba7b635bc6a8f2877"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Women_in_the_Garden> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/L'Enfant_a_la_tasse> <http://dbpedia.org/property/artist> ?uri . }", "SerialNumber": "1395", "question": "Who created the Women in the Garden and also the L'Enfant a la tasse ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Women_in_the_Garden", "label": "Women in the Garden"}, {"uri": "http://dbpedia.org/resource/L'Enfant_a_la_tasse", "label": "L'Enfant a la tasse"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/artist", "label": "created"}, {"uri": "http://dbpedia.org/property/artist", "label": "created"}], "id": "ee30b589024f41ba94eeeb43ca06b2cb"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Omaha,_Nebraska>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>}", "SerialNumber": "1398", "question": "Which state's largest city is Omaha?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Omaha,_Nebraska", "label": "Omaha"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/largestCity", "label": "largest city"}, {"uri": "http://dbpedia.org/ontology/AdministrativeRegion"}], "id": "f7dc75036c854765af67522f62223266"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steven_Palazzo> <http://dbpedia.org/property/battles> ?uri } ", "SerialNumber": "1399", "question": "In which wars has Steven Palazzo fought?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Steven_Palazzo", "label": "Steven Palazzo"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/battles", "label": "fought"}], "id": "209493482df043e9ac2583b042622b16"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Anthony_(artist)> <http://dbpedia.org/property/training> ?uri. <http://dbpedia.org/resource/Philip_W._Pillsbury> <http://dbpedia.org/property/education> ?uri} ", "SerialNumber": "1401", "question": "Which training center of William Anthony has also alumni named Philip W Pillsbury ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Anthony_(artist)", "label": "William Anthony"}, {"uri": "http://dbpedia.org/resource/Philip_W._Pillsbury", "label": "pillsbury philip"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/training", "label": "training"}, {"uri": "http://dbpedia.org/property/education", "label": "Pillsbury"}], "id": "fcbd2eb259ad4797a4de074a9e6ca51b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Toru\u0144_gingerbread> . ?x <http://dbpedia.org/property/nickname> ?uri  . }", "SerialNumber": "1403", "question": "List all the nicknames of the city which has Toru gingerbread as one of it ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Toru\u0144_gingerbread", "label": "gingerbread toru"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/nickname", "label": "nickname"}, {"uri": "http://dbpedia.org/property/nickname", "label": "nickname"}], "id": "9f6eaa108131427a9ac70decbdd4d153"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Maniac_Magee>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "SerialNumber": "1407", "question": "Who was the writer of the novel Maniac Magee?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Maniac_Magee", "label": "Maniac Magee"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/notableworks"}, {"uri": "http://dbpedia.org/ontology/Writer", "label": "writer"}], "id": "e52302c32d6440dba926e0d3ed0f97f9"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Ted_Hartley> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "1409", "question": "What are some movies whose distributer's CEO is Ted Hartley?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ted_Hartley", "label": "Ted Hartley"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/keyPeople", "label": "CEO"}, {"uri": "http://dbpedia.org/property/distributor", "label": "CEO"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "990acb5fafe142619ee7ad93a614fcf9"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/Mus\u00e9e_d'Orsay> . ?x <http://dbpedia.org/property/artist> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "SerialNumber": "1413", "question": "How many artists' works are in Muse d'Orsay?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mus\u00e9e_d'Orsay", "label": "d'orsay"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/museum", "label": "muse"}, {"uri": "http://dbpedia.org/property/artist", "label": "artist"}, {"uri": "http://dbpedia.org/ontology/Artist", "label": "artist"}], "id": "48eb16573ec141a5ab3f8b412564aea6"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Canal_&_River_Trust> . ?x <http://dbpedia.org/ontology/location> ?uri  . }", "SerialNumber": "1414", "question": "In how many different places does Canal and River Trust own its assets?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Canal_&_River_Trust", "label": "River Trust"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owner", "label": "own"}, {"uri": "http://dbpedia.org/ontology/location", "label": "assets"}], "id": "73c600f7e8e647769990e32d95c69f46"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/West_Papua_football_team> <http://dbpedia.org/ontology/stadium> ?uri } ", "SerialNumber": "1416", "question": "Where is the stadium of west Papus football team ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/West_Papua_football_team", "label": "football"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/stadium", "label": "stadium"}], "id": "19cf7033523648298b64a3b26c61d63c"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Megabalanus_concinnus> <http://dbpedia.org/ontology/binomialAuthority> ?uri } ", "SerialNumber": "1417", "question": "Who are some authoritative persons on the matter of Megabalanus concinnus?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Megabalanus_concinnus", "label": "Megabalanus concinnus"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/binomialAuthority", "label": "matter"}], "id": "b6ebb2f75c0a40edb2c5f55a8490d32f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Barbara_Ann_Crancer>  . }", "SerialNumber": "1418", "question": "Who is the father of Barbara Ann Crancer?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Barbara_Ann_Crancer", "label": "Barbara Ann Crancer"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/child", "label": "father"}], "id": "8ff0158616ba4528a7ed38a4e45df6bf"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Sony_Music_Entertainment> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . }", "SerialNumber": "1419", "question": "Whose music composer is signed up with Sony Music Entertainment?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony_Music_Entertainment", "label": "Sony Music Entertainment"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/label", "label": "signed"}, {"uri": "http://dbpedia.org/ontology/musicComposer", "label": "music composer"}], "id": "9977743655db452280ad8b646cb1901d"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Male> } ", "SerialNumber": "1420", "question": "What are some given names for males?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Male", "label": "male"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/gender", "label": "names"}], "id": "10b3153964714ccd855e09939b3fea93"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Marlboro_Township,_New_Jersey>  . }", "SerialNumber": "1421", "question": "Which famous person is born in Marlboro Township, New Jersey?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Marlboro_Township,_New_Jersey", "label": "Marlboro Township, New Jersey"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/homeTown", "label": "born"}], "id": "96c26048a5cc488796e2747513584530"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/builder> <http://dbpedia.org/resource/Soares_da_Costa> . ?x <http://dbpedia.org/ontology/crosses> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "SerialNumber": "1423", "question": "Saores de costa built a bridge over which river?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Soares_da_Costa", "label": "costa"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/builder", "label": "built"}, {"uri": "http://dbpedia.org/ontology/crosses", "label": "bridge over"}, {"uri": "http://dbpedia.org/ontology/Bridge", "label": "bridge"}], "id": "9bc21c53162242ed83aa510e3a346546"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/colour> <http://dbpedia.org/resource/Chestnut_(coat)> . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}", "SerialNumber": "1426", "question": "Chestnut colored horses have won which races?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chestnut_(coat)", "label": "Chestnut"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/colour"}, {"uri": "http://dbpedia.org/ontology/honours"}, {"uri": "http://dbpedia.org/ontology/Horse", "label": "horse"}], "id": "5b5d82f71a4c4d54989be43bbf8d4ce4"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chickasaw_Campaign_of_1736> <http://dbpedia.org/property/combatant> ?uri } ", "SerialNumber": "1428", "question": "Of how many battles is Chickasaw Campaign of 1736 consisted?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chickasaw_Campaign_of_1736", "label": "Chickasaw Campaign of 1736"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/combatant", "label": "consisted"}], "id": "bdbf00bc5747405fb0687f5da283e0d8"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Joe_Jonas> . ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Kevin_Jonas> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>}", "SerialNumber": "1430", "question": "In what group Joe Jonas and Kevin Jonas were previously involved?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Joe_Jonas", "label": "Joe Jonas"}, {"uri": "http://dbpedia.org/resource/Kevin_Jonas", "label": "Kevin Jonas"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/pastMembers", "label": "involved"}, {"uri": "http://dbpedia.org/property/pastMembers", "label": "involved"}, {"uri": "http://dbpedia.org/ontology/Group", "label": "group"}], "id": "08365c0b072f40a6bc18e0f181f3518d"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_G._Santos> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/Wendy_Jaquet> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "SerialNumber": "1435", "question": "Where were Micheal Santos and Wendy Jaquet born?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_G._Santos", "label": "santos"}, {"uri": "http://dbpedia.org/resource/Wendy_Jaquet", "label": "Wendy Jaquet"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/birthPlace", "label": "born"}, {"uri": "http://dbpedia.org/property/placeOfBirth"}], "id": "24248e8d88324f82a0d46eb1449b6e7f"}, {"sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Chinese_poetry> . ?x <http://dbpedia.org/property/fields> ?uri }", "SerialNumber": "1436", "question": "Count the number of fileds of the scientist whose one of the interest is Chinese poetry ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chinese_poetry", "label": "Chinese poetry"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/fields", "label": "interest"}, {"uri": "http://dbpedia.org/property/fields", "label": "interest"}], "id": "6edb218446b8457c9a2ea5168ff7fb50"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/municipality> <http://dbpedia.org/resource/Lake_County,_Oregon> . ?x <http://dbpedia.org/ontology/border> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Valley>}", "SerialNumber": "1440", "question": "What borders the valley which falls under Lake County, Oregon?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lake_County,_Oregon", "label": "Lake County, Oregon"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/municipality", "label": "falls"}, {"uri": "http://dbpedia.org/ontology/border", "label": "border"}, {"uri": "http://dbpedia.org/ontology/Valley", "label": "valley"}], "id": "2d048077fe044885a1f11a831df39ba7"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Companion_(Doctor_Who)> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/C._E._Webber>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "1441", "question": "Name the television show created by CE Webber and also has actor named Companion?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Companion_(Doctor_Who)", "label": "Companion"}, {"uri": "http://dbpedia.org/resource/C._E._Webber", "label": "webber"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/starring", "label": "actor"}, {"uri": "http://dbpedia.org/ontology/creator", "label": "created by"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "television show"}], "id": "297480b7b3fd43e7819b9eb234501795"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_Mexico> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Microsoft_Visual_Studio>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "1442", "question": "Which company founded in New Mexico manufactures Visual Studio ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/New_Mexico", "label": "New Mexico"}, {"uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio", "label": "Visual Studio"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/foundation", "label": "founded"}, {"uri": "http://dbpedia.org/property/products", "label": "manufactures"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "6411e0733ae5460499b210f08633ce12"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Go_(programming_language)> <http://dbpedia.org/ontology/developer> ?uri. <http://dbpedia.org/resource/X_(company)> <http://dbpedia.org/property/predecessor> ?uri} ", "SerialNumber": "1444", "question": "Which developer of Go was also the predecssor of X compnay ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Go_(programming_language)", "label": "Go"}, {"uri": "http://dbpedia.org/resource/X_(company)", "label": "X"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/developer", "label": "developer"}, {"uri": "http://dbpedia.org/property/predecessor", "label": "compnay"}], "id": "6125911b7ddd4d3cbca857215c9e59c4"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/State_Colleges_and_Universities_Athletic_Association> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "SerialNumber": "1445", "question": "What sports are played at universities affiliated by States Colleges and Universities athletic association?", "entity mapping": [{"uri": "http://dbpedia.org/resource/State_Colleges_and_Universities_Athletic_Association", "label": "universities association colleges athletic"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/affiliation", "label": "association"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}, {"uri": "http://dbpedia.org/ontology/University", "label": "universities"}], "id": "31fb215b84b44ec5bed3253fc1734d5f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Proch\u00e1zka> <http://dbpedia.org/ontology/formerTeam> ?uri. <http://dbpedia.org/resource/Garry_Unger> <http://dbpedia.org/ontology/formerTeam> ?uri . }", "SerialNumber": "1446", "question": "Which team has had both Martin prochzka and garry unger as its players ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Martin_Proch\u00e1zka", "label": "Martin prochzka"}, {"uri": "http://dbpedia.org/resource/Garry_Unger", "label": "garry unger"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/formerTeam", "label": "team"}, {"uri": "http://dbpedia.org/ontology/formerTeam", "label": "team"}], "id": "0f8e4549023f4e80849e86009ce04679"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/inflow> <http://dbpedia.org/resource/Shannon_Cave> . ?uri <http://dbpedia.org/ontology/source> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "1447", "question": "What is that river whose source gets water from the Shannon cave?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Shannon_Cave", "label": "Shannon cave"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/inflow", "label": "water"}, {"uri": "http://dbpedia.org/ontology/source", "label": "source"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "80f27d6316b847f999d784e02ce6eaf2"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/race> <http://dbpedia.org/resource/Excelsior_Stakes> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }", "SerialNumber": "1451", "question": "From what countries have people participated in the Excelsior Stakes?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Excelsior_Stakes", "label": "Excelsior Stakes"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/race", "label": "participated"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "participated"}], "id": "f38ad466348b4ec3ae7a9bcef89d6c51"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/deathCause> <http://dbpedia.org/resource/Hanging> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "1453", "question": "List some people who were opponents of someone who was died by hanging? ", "entity mapping": [{"uri": "http://dbpedia.org/resource/Hanging", "label": "hanging"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/deathCause", "label": "died"}, {"uri": "http://dbpedia.org/ontology/opponent", "label": "opponent"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "died"}], "id": "7372eadd97374e8b88eb962559850324"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Marionette_(software)> . ?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Edwin_Catmull>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "1455", "question": "Name the company which produces Marionette and has key person as Edwin catmull ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Marionette_(software)", "label": "Marionette"}, {"uri": "http://dbpedia.org/resource/Edwin_Catmull", "label": "Edwin catmull"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/products", "label": "person"}, {"uri": "http://dbpedia.org/property/keyPeople", "label": "key"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "0a6bea353ecd405497f5ceab8b5d3dc3"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/IBC_Root_Beer> . ?x <http://dbpedia.org/property/locationCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage>}", "SerialNumber": "1459", "question": "In which cities can i find drinks similar to the IBC root beer?", "entity mapping": [{"uri": "http://dbpedia.org/resource/IBC_Root_Beer", "label": "IBC root beer"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/related", "label": "similar"}, {"uri": "http://dbpedia.org/property/locationCity", "label": "similar"}, {"uri": "http://dbpedia.org/ontology/Beverage", "label": "similar"}], "id": "07606daaf7b34904923872ec6df2df2d"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Unix-like> . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "SerialNumber": "1461", "question": "Who all have developed softwares for Unix Like OSes?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Unix-like", "label": "unix like"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/operatingSystem", "label": "OSes"}, {"uri": "http://dbpedia.org/ontology/developer", "label": "developed"}, {"uri": "http://dbpedia.org/ontology/Software", "label": "software"}], "id": "881b5cae435244b2b7caadf0a38478e0"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Walter_Scharf> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "1468", "question": "Who acted in the movies whose music is composed by Walter Scharf?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Walter_Scharf", "label": "Walter Scharf"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/musicComposer", "label": "composed"}, {"uri": "http://dbpedia.org/property/artist", "label": "music"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "ed3ea597f28a40cbbf89b727e336a636"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Primate>  . }", "SerialNumber": "1470", "question": "What are some primates?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Primate", "label": "primates"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/order"}], "id": "2eddea00fa824cbcaff727302f22ba39"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/Denton_County,_Texas> . ?uri <http://dbpedia.org/ontology/foundationPlace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "1472", "question": "How many companies were founded in Denton, texas?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Denton_County,_Texas", "label": "Denton"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/part", "label": "texas"}, {"uri": "http://dbpedia.org/ontology/foundationPlace", "label": "founded"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "companies"}], "id": "89ff0d71b0d54f428fbebcc8d9f151ee"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Christianity> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }", "SerialNumber": "1473", "question": "Count the different causes of death of Christians.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Christianity", "label": "Christians"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/religion", "label": "Count"}, {"uri": "http://dbpedia.org/ontology/deathCause", "label": "death"}], "id": "7fc3026611784ca68abe446d974bf7fb"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/debutteam> <http://dbpedia.org/resource/New_York_Yankees> . ?x <http://dbpedia.org/ontology/team> ?uri  . }", "SerialNumber": "1474", "question": "List all the teams which have someone who played their first game for the Yankees?", "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_Yankees", "label": "yankees"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/debutteam", "label": "teams"}, {"uri": "http://dbpedia.org/ontology/team", "label": "team"}], "id": "a68039a3908e4104a6c881f0b0d1bac7"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Companion_(Doctor_Who)> . ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "1477", "question": "Name the TV show whose cast member is Companion (Doctor Who) and is related to The Sarah Jane Adventures?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Companion_(Doctor_Who)", "label": "Companion (Doctor Who)"}, {"uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures", "label": "The Sarah Jane Adventures"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/starring", "label": "Companion"}, {"uri": "http://dbpedia.org/ontology/related", "label": "related"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "bf76f57f7884400e8f11ba71e1d0787b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/Westminster_Abbey> . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "SerialNumber": "1480", "question": "In which sects were the aristocrats included, who were buried in Westminister abbey?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Westminster_Abbey", "label": "Westminister abbey"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/majorShrine", "label": "abbey"}, {"uri": "http://dbpedia.org/property/veneratedIn", "label": "abbey"}, {"uri": "http://dbpedia.org/ontology/Royalty", "label": "abbey"}], "id": "4e06115370044892bc19f3433446d6c1"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Beverly_Hills,_California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "1483", "question": "Name the  people whose residence is Beverly Hills, California?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Beverly_Hills,_California", "label": "Beverly Hills, California"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/residence", "label": "residence"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "a98e065d3ca64e319fdeba4de8cd09f7"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Donna_Shalala> . ?x <http://dbpedia.org/property/keyPeople> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Non-ProfitOrganisation>}", "SerialNumber": "1489", "question": "What are some important people in NGOs headed by Donna Shalala?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Donna_Shalala", "label": "Donna Shalala"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/keyPerson", "label": "headed"}, {"uri": "http://dbpedia.org/property/keyPeople", "label": "people"}, {"uri": "http://dbpedia.org/ontology/Non-ProfitOrganisation"}], "id": "0fd3b4501cd4447d9cf64dd71b596c3c"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Germany> . ?x <http://dbpedia.org/ontology/relation> ?uri  . }", "SerialNumber": "1492", "question": "How many relatives are there of the people who died in Germany?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Germany", "label": "Germany"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfDeath"}, {"uri": "http://dbpedia.org/ontology/relation", "label": "died"}], "id": "75aa8a417fa547bab0e8895242554497"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/Northwestern_Hawaiian_Islands> . ?x <http://dbpedia.org/property/nearestCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}", "SerialNumber": "1499", "question": "What is the city nearest to the islands in the Northwestern Hawaiian Islands?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Northwestern_Hawaiian_Islands", "label": "Northwestern Hawaiian Islands"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/archipelago", "label": "nearest"}, {"uri": "http://dbpedia.org/property/nearestCity", "label": "nearest city"}, {"uri": "http://dbpedia.org/ontology/Island", "label": "island"}], "id": "78af55409ffc4e32b981e66132116fdd"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/Ottawa_Citizen> . ?x <http://dbpedia.org/property/homeTown> ?uri  . }", "SerialNumber": "1500", "question": "Employees of Ottawa Citizen have come from which towns?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ottawa_Citizen", "label": "Ottawa Citizen"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/employer", "label": "Employees"}, {"uri": "http://dbpedia.org/property/homeTown", "label": "towns"}], "id": "9efa225a4f6841b5a6304ffb5111a1ed"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "1503", "question": "Name the televesion show which has artist named Christopher Franke ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Christopher_Franke", "label": "Christopher Franke"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/artist", "label": "artist"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "named"}], "id": "5f620b019a9d4b988b56f5b4f3d4666a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/mainInterest> <http://dbpedia.org/resource/Feminism_in_Canada> . ?x <http://dbpedia.org/property/region> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Philosopher>}", "SerialNumber": "1504", "question": "Where are the philosophers from, whose main work is on the matter of feminism in Canada?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Feminism_in_Canada", "label": "feminism in Canada"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/mainInterest", "label": "matter"}, {"uri": "http://dbpedia.org/property/region", "label": "matter"}, {"uri": "http://dbpedia.org/ontology/Philosopher", "label": "philosopher"}], "id": "a9026609cc0e4324bbc568de1e9c8f61"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/architecturalStyle> <http://dbpedia.org/resource/Modern_architecture> . ?x <http://dbpedia.org/property/address> ?uri  . }", "SerialNumber": "1505", "question": "In how many different places can I fnd Modern Architectural buildings?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Modern_architecture", "label": "Modern Architectura"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/architecturalStyle", "label": "architectural"}, {"uri": "http://dbpedia.org/property/address", "label": "buildings"}], "id": "f0157809a86545afa67e70029372d9ef"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dean_Ambrose>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "SerialNumber": "1508", "question": "What are some musicians who have worked with Dean Ambrose?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dean_Ambrose", "label": "Dean Ambrose"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/associatedMusicalArtist", "label": "worked"}, {"uri": "http://dbpedia.org/ontology/MusicalArtist", "label": "musician"}], "id": "cefb9d24941c422d97cf5b0e1d6a517f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/vicePresident> <http://dbpedia.org/resource/Emilio_N\u00fa\u00f1ez> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }", "SerialNumber": "1513", "question": "Where did the president study, whose VP was Emilio Nez?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Emilio_N\u00fa\u00f1ez", "label": "Emilio Nez"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/vicePresident", "label": "president"}, {"uri": "http://dbpedia.org/ontology/almaMater", "label": "VP"}], "id": "12c919e6fa354555971464cbeb961149"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/honours> <http://dbpedia.org/resource/National_Museum_of_Racing_and_Hall_of_Fame> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "SerialNumber": "1515", "question": "In how many different places were the people born who are members of National Museum of Racing and Hall of Fame?", "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Museum_of_Racing_and_Hall_of_Fame", "label": "National Museum of Racing and Hall of Fame"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/honours"}, {"uri": "http://dbpedia.org/property/birthPlace", "label": "places"}, {"uri": "http://dbpedia.org/ontology/Place", "label": "place"}], "id": "3f08ba5c7c254c4391b45ec5efe64b44"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Fort_Gadsden>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "1516", "question": "Which military commander fought his battle at Fort Gadsen?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fort_Gadsden", "label": "Fort Gadsen"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/battle", "label": "battle"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "fought"}], "id": "095c674f34ba4e68bbf07397d12a0aa9"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Phillippe_Cabot> <http://dbpedia.org/ontology/university> <http://dbpedia.org/resource/Columbia_University> }", "SerialNumber": "1517", "question": "Did Phillippe Cabot go to Columbia for studying?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Phillippe_Cabot", "label": "Phillippe Cabot"}, {"uri": "http://dbpedia.org/resource/Columbia_University", "label": "Columbia"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/university", "label": "studying"}], "id": "988903c3f615471fbd0fe2adeafdd518"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Brower's_Spring> } ", "SerialNumber": "1518", "question": "Which rivers start at the Brower's Spring?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Brower's_Spring", "label": "Brower's Spring"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourceMountain", "label": "start"}], "id": "de86bc6a4b574f6ea396c7793787cb13"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Edinburgh> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }", "SerialNumber": "1519", "question": "For which reasons have the ones born in Edinburgh, died?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Edinburgh", "label": "Edinburgh"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBirth"}, {"uri": "http://dbpedia.org/ontology/deathCause", "label": "died"}], "id": "29718ea92a0c4340b8220c80488cd310"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/schooltype> <http://dbpedia.org/resource/Protestantism> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "SerialNumber": "1520", "question": "What games are played in Protestant schools?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Protestantism", "label": "protestant"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/schooltype", "label": "schools"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "Protestant"}, {"uri": "http://dbpedia.org/ontology/School", "label": "school"}], "id": "86af262ded0c418592ba045d1b609aab"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Meadow_Soprano> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "1521", "question": "Which religion is followed by people in the family of Meadow Sopranos?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Meadow_Soprano", "label": "Meadow Soprano"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/family", "label": "family"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "fd0df4cfc4fc439696f39dd5d17dc45a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> . ?uri <http://dbpedia.org/ontology/programmingLanguage> <http://dbpedia.org/resource/C++>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "SerialNumber": "1523", "question": "Which software uses windows as it's operating system and is written in C++ ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Windows", "label": "windows"}, {"uri": "http://dbpedia.org/resource/C++", "label": "C++"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/operatingSystem", "label": "operating system"}, {"uri": "http://dbpedia.org/ontology/programmingLanguage", "label": "written"}, {"uri": "http://dbpedia.org/ontology/Software", "label": "software"}], "id": "5aebd57c3f2140568f2473946d068238"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)> <http://dbpedia.org/ontology/draftTeam> ?uri. <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri} ", "SerialNumber": "1524", "question": "Which draft team od Dale Mitchell is also the tenant of Master Card center /", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)", "label": "Dale Mitchell"}, {"uri": "http://dbpedia.org/resource/MasterCard_Centre", "label": "master"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/draftTeam", "label": "draft team"}, {"uri": "http://dbpedia.org/property/tenants", "label": "tenant"}], "id": "65e7f354b21d4f9eb1902ef3435b1f59"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/The_Paris_Sisters> . ?x <http://dbpedia.org/property/language> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}", "SerialNumber": "1527", "question": "Paris Sisters singles are of which language?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Paris_Sisters", "label": "Paris Sisters"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/musicalBand"}, {"uri": "http://dbpedia.org/property/language", "label": "language"}, {"uri": "http://dbpedia.org/ontology/Single", "label": "single"}], "id": "26de4237807b43509a696a7aa4460ae3"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/succeeded> <http://dbpedia.org/resource/List_of_Playboy_Playmates_of_1954>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PlayboyPlaymate>}", "SerialNumber": "1529", "question": "Which models were featured in Playboy Playmates 1954?", "entity mapping": [{"uri": "http://dbpedia.org/resource/List_of_Playboy_Playmates_of_1954", "label": "1954"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/succeeded", "label": "featured"}, {"uri": "http://dbpedia.org/ontology/PlayboyPlaymate", "label": "Playboy Playmate"}], "id": "47af7157273449c9855fdc6169f53bc3"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/sisterStations> <http://dbpedia.org/resource/Al_Arabiya_99> . ?x <http://dbpedia.org/property/location> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}", "SerialNumber": "1530", "question": "Where is the sister station of Al Arabiya 99 located?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Al_Arabiya_99", "label": "Al Arabiya 99"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/sisterStations", "label": "station sister"}, {"uri": "http://dbpedia.org/property/location", "label": "located"}, {"uri": "http://dbpedia.org/ontology/RadioStation", "label": "station"}], "id": "8a6b193951864f6599a5793d574b5f02"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ionian_Sea> <http://dbpedia.org/ontology/outflow> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . }", "SerialNumber": "1533", "question": "Which cities are located around the sea into which the ionian flows?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ionian_Sea", "label": "ionian sea"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/outflow", "label": "flows"}, {"uri": "http://dbpedia.org/property/cities", "label": "cities"}], "id": "32fab0cef56a47c1998aeed3476af6d2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/National_Hockey_League> . ?x <http://dbpedia.org/property/draftTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "1535", "question": "What team were the people drafted to, which are in the National Hockey League?", "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Hockey_League", "label": "National Hockey League"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/league", "label": "League"}, {"uri": "http://dbpedia.org/property/draftTeam", "label": "drafted"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "8b85636931964fff9dbdd3890ae49b79"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Arlington_National_Cemetery> } ", "SerialNumber": "1537", "question": "Who all are buried in Arlington national cementary?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Arlington_National_Cemetery", "label": "Arlington"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeofburial"}], "id": "1470a63eb37e4e13bd56e77aa0ebfe3d"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerry_Tagge> <http://dbpedia.org/property/highSchool> ?uri } ", "SerialNumber": "1538", "question": "Where did Jerry Tagge do his elementary schooling?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jerry_Tagge", "label": "Jerry Tagge"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/highSchool", "label": "schooling"}], "id": "321d971403c844f7b7233e28728d227e"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_SHO_V8_engine> <http://dbpedia.org/ontology/manufacturer> ?uri } ", "SerialNumber": "1539", "question": "who manufactures the SHO V8?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_SHO_V8_engine", "label": "sho v8"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/manufacturer", "label": "manufactures"}], "id": "c425a861d015448ea91b7fbda3cc03cf"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Water_resources_management_in_El_Salvador> <http://dbpedia.org/property/sourceCountry> ?uri. <http://dbpedia.org/resource/Sierra_del_Merend\u00f3n> <http://dbpedia.org/ontology/country> ?uri} ", "SerialNumber": "1540", "question": "Which source of Water resources management in El Salvador is also the nation of the Sierra del Merendn?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Water_resources_management_in_El_Salvador", "label": "Water resources management in El Salvador"}, {"uri": "http://dbpedia.org/resource/Sierra_del_Merend\u00f3n", "label": "Sierra del Merendn"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/sourceCountry", "label": "source"}, {"uri": "http://dbpedia.org/ontology/country", "label": "nation"}], "id": "aa6d6a9311c148d4ad8adcf7211e37d0"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Lucky_You_(film)> <http://dbpedia.org/property/screenplay> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "SerialNumber": "1543", "question": "What awards are won by the screenwriter of Lucky You?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lucky_You_(film)", "label": "Lucky You"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/screenplay", "label": "screenwriter"}, {"uri": "http://dbpedia.org/ontology/award", "label": "awards"}], "id": "625ae94833b045a0a4baa5ce95d97900"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Government_of_Mauritius> . ?x <http://dbpedia.org/property/broadcastArea> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}", "SerialNumber": "1546", "question": "In which areas can we find the networks owned by the govt of Mauritius?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Government_of_Mauritius", "label": "Mauritius"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owningCompany", "label": "govt"}, {"uri": "http://dbpedia.org/property/broadcastArea", "label": "areas"}, {"uri": "http://dbpedia.org/ontology/BroadcastNetwork", "label": "networks"}], "id": "871775efcda94304826009853e33cb49"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Toronto_Argonauts>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "SerialNumber": "1547", "question": "Which current players once played for Toronto argonauts?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto_Argonauts", "label": "Toronto argonauts"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/formerTeam", "label": "played"}, {"uri": "http://dbpedia.org/ontology/AmericanFootballPlayer", "label": "players"}], "id": "7d3a614fe3294084b04b3d873b41c665"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Azure> . ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Surface> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "1548", "question": "Which company builds Microsoft Azure and Microsoft Surface?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Azure", "label": "Microsoft Azure"}, {"uri": "http://dbpedia.org/resource/Microsoft_Surface", "label": "Microsoft Surface"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/product", "label": "builds"}, {"uri": "http://dbpedia.org/ontology/product", "label": "builds"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "7abda6e6bf294ae7a68497a1c4579a94"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Microsoft_Office_Picture_Manager> <http://dbpedia.org/ontology/license> ?uri. <http://dbpedia.org/resource/Google_Cloud_Connect> <http://dbpedia.org/ontology/computingPlatform> ?uri} ", "SerialNumber": "1549", "question": "Which contnet license provider of Microsoft Office Picture Manager is also the game platform of Google Clud Connect ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Office_Picture_Manager", "label": "Microsoft Office Picture Manager"}, {"uri": "http://dbpedia.org/resource/Google_Cloud_Connect", "label": "connect google"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/license", "label": "license"}, {"uri": "http://dbpedia.org/ontology/computingPlatform", "label": "game platform"}], "id": "13fd5d955c674770a707d5548231b9e1"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Toronto> . ?x <http://dbpedia.org/property/tenants> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "SerialNumber": "1553", "question": "Who has rented the stadiums owned by Toronto?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto", "label": "Toronto"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/owner", "label": "owned"}, {"uri": "http://dbpedia.org/property/tenants", "label": "rented"}, {"uri": "http://dbpedia.org/ontology/Stadium", "label": "stadium"}], "id": "c58dabff921c4dc18a7525f173f9b73d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility>  . }", "SerialNumber": "1554", "question": "Who won a Norbert Wiener Award for Social and Professional Responsibility?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility", "label": "Norbert Wiener Award for Social and Professional Responsibility"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/prizes", "label": "won"}], "id": "1ce8eb889dc948598061a205d9ac8292"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/French_language> . ?x <http://dbpedia.org/ontology/currency> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}", "SerialNumber": "1557", "question": "What currencies are circulated in the countries where people speak French?", "entity mapping": [{"uri": "http://dbpedia.org/resource/French_language", "label": "French"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/officialLanguage", "label": "speak"}, {"uri": "http://dbpedia.org/ontology/currency", "label": "currencies"}, {"uri": "http://dbpedia.org/ontology/Location", "label": "countries"}], "id": "ebde94c05f654d6b8a9dc3a159f815e9"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Serbia_national_American_football_team> <http://dbpedia.org/ontology/division> ?uri. <http://dbpedia.org/resource/Dob\u0161insk\u00e1_Ice_Cave> <http://dbpedia.org/ontology/region> ?uri} ", "SerialNumber": "1558", "question": "Which division of Serbia national team is also the region of Dobinsk Ice Cave ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Serbia_national_American_football_team", "label": "national serbia team"}, {"uri": "http://dbpedia.org/resource/Dob\u0161insk\u00e1_Ice_Cave", "label": "Dobinsk Ice Cave"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/division", "label": "division"}, {"uri": "http://dbpedia.org/ontology/region", "label": "region"}], "id": "8d1df3c7e7af4760a3bf0077cd9afb56"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shaun_Thong> <http://dbpedia.org/property/currentTeam> ?uri. <http://dbpedia.org/resource/Kaan_\u00d6nder> <http://dbpedia.org/property/currentTeam> ?uri . }", "SerialNumber": "1559", "question": "Name the common current team of the Shaun Thong and Kaannder ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Shaun_Thong", "label": "Shaun Thong"}, {"uri": "http://dbpedia.org/resource/Kaan_\u00d6nder", "label": "Kaannder"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentTeam", "label": "current team"}, {"uri": "http://dbpedia.org/property/currentTeam", "label": "current team"}], "id": "35a87d039618479c830132847e30888b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jason_Carter_(actor)> . ?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/TNT_(TV_channel)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "1560", "question": "What is the television show which has cast member as Jason Carter and network is TNT (TV channel)?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jason_Carter_(actor)", "label": "Jason Carter"}, {"uri": "http://dbpedia.org/resource/TNT_(TV_channel)", "label": "TNT (TV channel)"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/starring", "label": "TNT"}, {"uri": "http://dbpedia.org/property/network", "label": "network"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "television show"}], "id": "7a4d4807f7e44d8298c4c03226d00b85"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/731_Lexington_Avenue> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}", "SerialNumber": "1561", "question": "Who hold stocks in the bank which is located at 731 Lexington Avenue?", "entity mapping": [{"uri": "http://dbpedia.org/resource/731_Lexington_Avenue", "label": "731 Lexington Avenue"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locationCity", "label": "located"}, {"uri": "http://dbpedia.org/property/owner", "label": "located"}, {"uri": "http://dbpedia.org/ontology/Bank", "label": "bank"}], "id": "4fa56fcae915405bb3dc2d843d72a39b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/UFC_152> <http://dbpedia.org/property/venue> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "SerialNumber": "1562", "question": "Who rented the stadium where the UFC 152 take place?", "entity mapping": [{"uri": "http://dbpedia.org/resource/UFC_152", "label": "UFC 152"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/venue", "label": "place"}, {"uri": "http://dbpedia.org/ontology/tenant", "label": "place"}, {"uri": "http://dbpedia.org/ontology/Stadium", "label": "stadium"}], "id": "99a59ee47bac4242b9a447372ed7862e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Iran> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "SerialNumber": "1563", "question": "Which company's cars are assembled in Iran?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Iran", "label": "Iran"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/assembly", "label": "assembled"}, {"uri": "http://dbpedia.org/property/parentCompany", "label": "company's"}, {"uri": "http://dbpedia.org/ontology/Automobile", "label": "assembled"}], "id": "d734bb40ec504463855c4d255151750f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1993_European_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri. <http://dbpedia.org/resource/1985_Portuguese_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri . }", "SerialNumber": "1565", "question": "Which first driver of  European Grand Prix 1993 is also finished first in 1985 Portuguese Grand Prix ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/1993_European_Grand_Prix", "label": "european grand prix"}, {"uri": "http://dbpedia.org/resource/1985_Portuguese_Grand_Prix", "label": "1985 Portuguese Grand Prix"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/firstDriver", "label": "first driver"}, {"uri": "http://dbpedia.org/property/firstDriver", "label": "first driver"}], "id": "d229a447683c43bdab10a891ceb42456"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eka_Lagnachi_Teesri_Goshta> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Vijay_Chavan> <http://dbpedia.org/property/placeOfBirth> ?uri . }", "SerialNumber": "1566", "question": "What place is the birthplace of Vijay Chavan where Eka Lagnachi Teesri Goshta is located as well?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Eka_Lagnachi_Teesri_Goshta", "label": "Eka Lagnachi Teesri Goshta"}, {"uri": "http://dbpedia.org/resource/Vijay_Chavan", "label": "Vijay Chavan"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/location", "label": "located"}, {"uri": "http://dbpedia.org/property/placeOfBirth", "label": "place"}], "id": "1df641d8a68b4fc085b0cb54337deb82"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paul_Demi\u00e9ville> <http://dbpedia.org/property/fields> ?uri. <http://dbpedia.org/resource/Sylvain_L\u00e9vi> <http://dbpedia.org/property/fields> ?uri . }", "SerialNumber": "1567", "question": "In which fields are both Paul Demiville and Sylvain levi experts?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Demi\u00e9ville", "label": "Paul Demiville"}, {"uri": "http://dbpedia.org/resource/Sylvain_L\u00e9vi", "label": "sylvain"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/fields", "label": "fields"}, {"uri": "http://dbpedia.org/property/fields", "label": "fields"}], "id": "e9036a6c1a674f64a85a400eb987393b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Steve_Winwood> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "1570", "question": "Where were some people associated with Steve Winwood employed at?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Steve_Winwood", "label": "Steve Winwood"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/associatedMusicalArtist", "label": "associated"}, {"uri": "http://dbpedia.org/ontology/occupation", "label": "employed"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "employed"}], "id": "754a3bc265ae4fe1833884e86aceb12b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jonathan_Haskell> <http://dbpedia.org/property/battles> ?x . ?x <http://dbpedia.org/property/combatant> ?uri  . }", "SerialNumber": "1572", "question": "Who were involved in the wars where Jonathan Haskell battled?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jonathan_Haskell", "label": "Jonathan Haskell"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/battles", "label": "battled"}, {"uri": "http://dbpedia.org/property/combatant", "label": "wars"}], "id": "f58241b0c93f471fb1b44686630eccf1"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/River_Shannon> <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Dowra> }", "SerialNumber": "1573", "question": "Does the river shannon originate from Dowra?", "entity mapping": [{"uri": "http://dbpedia.org/resource/River_Shannon", "label": "river shannon"}, {"uri": "http://dbpedia.org/resource/Dowra", "label": "Dowra"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourceMountain", "label": "originate"}], "id": "950b70d788fa482b9c3855e96aebe7ac"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jevan_Snead> <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Quarterback> }", "SerialNumber": "1575", "question": "Does Jevan Snead play as Quarterback?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jevan_Snead", "label": "Jevan Snead"}, {"uri": "http://dbpedia.org/resource/Quarterback", "label": "Quarterback"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/position", "label": "play"}], "id": "22fdf1b988044e3992540ed303e59a54"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Jennifer_Lopez> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Randy_Jackson> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "1577", "question": "Name the show whose jury consist of Jennifer Lopez and Randy Jackson?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jennifer_Lopez", "label": "Jennifer Lopez"}, {"uri": "http://dbpedia.org/resource/Randy_Jackson", "label": "Randy Jackson"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/judges", "label": "consist"}, {"uri": "http://dbpedia.org/property/judges", "label": "consist"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "d23c4c43e4f1484b99c8054143bf2438"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Tahiti> <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/Society_Islands> }", "SerialNumber": "1578", "question": "Is tahiti in the Society Islands achipelago?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tahiti", "label": "tahiti"}, {"uri": "http://dbpedia.org/resource/Society_Islands", "label": "Society Islands"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/archipelago"}], "id": "50f9b25a3d0c408fb2383283fe04a6d3"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Stony_Brook_University_Hospital> . ?x <http://dbpedia.org/property/education> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FashionDesigner>}", "SerialNumber": "1580", "question": "Where did the fashion designer study who died at the Stony Brook University Hospital?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Stony_Brook_University_Hospital", "label": "Stony Brook University Hospital"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/deathPlace", "label": "died"}, {"uri": "http://dbpedia.org/property/education", "label": "died"}, {"uri": "http://dbpedia.org/ontology/FashionDesigner", "label": "fashion designer"}], "id": "73b6ab3abf6f45c4b9e8d5139432cbc2"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "1581", "question": "Name few television shows's anchored by Ryan Seacrest?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ryan_Seacrest", "label": "Ryan Seacrest"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/presenter", "label": "anchored"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "television show"}], "id": "e47dfae4d0b64adf925f7961a27179fe"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Russell_T_Davies> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "1583", "question": "Give me some shows related to the ones created by Russell Davies", "entity mapping": [{"uri": "http://dbpedia.org/resource/Russell_T_Davies", "label": "Russell Davies"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/creator", "label": "created"}, {"uri": "http://dbpedia.org/ontology/related", "label": "related"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "c75bb3f9a6a54bc995eec394e964b45e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Metro_Blue_Line_(Minnesota)> <http://dbpedia.org/property/operator> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "SerialNumber": "1585", "question": "Where is the headquarters of the company which runs the Metro Blue Line in minnesota?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Metro_Blue_Line_(Minnesota)", "label": "Metro Blue Line"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/operator", "label": "minnesota"}, {"uri": "http://dbpedia.org/property/headquarters", "label": "headquarters"}, {"uri": "http://dbpedia.org/ontology/Organisation"}], "id": "9bd93e910858410cb64bf86b0f1a17f5"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/party> <http://dbpedia.org/resource/Bharatiya_Janata_Party> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "1587", "question": "Which religion's people are member of BJP?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bharatiya_Janata_Party", "label": "BJP"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/party", "label": "are"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "member"}], "id": "a561ecf7220a4ede974139e2dd42ed14"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Flowering_plant> . ?uri <http://dbpedia.org/ontology/ingredient> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}", "SerialNumber": "1589", "question": "How many dishes are made with an ingredient belonging to the flowering plant species?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Flowering_plant", "label": "flowering plant"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/division", "label": "species"}, {"uri": "http://dbpedia.org/ontology/ingredient", "label": "ingredient"}, {"uri": "http://dbpedia.org/ontology/Food", "label": "species"}], "id": "9e2d283b09f4408392359dbb0df6b0a3"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/PRS_Guitars> . ?uri <http://dbpedia.org/property/currentMembers> ?x  . }", "SerialNumber": "1591", "question": "Whose band members are known to play a PRS guitar?", "entity mapping": [{"uri": "http://dbpedia.org/resource/PRS_Guitars", "label": "PRS"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/notableInstruments", "label": "guitar"}, {"uri": "http://dbpedia.org/property/currentMembers", "label": "members"}], "id": "6d530d8977fd4a4cbc5f2cb377470f1d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/LoDaisKa_Site> <http://dbpedia.org/ontology/nearestCity> ?uri. <http://dbpedia.org/resource/David_W._Brown_House> <http://dbpedia.org/ontology/nearestCity> ?uri . }", "SerialNumber": "1595", "question": "Which is the city closest to both the Lodaiska site and the home of David w brown?", "entity mapping": [{"uri": "http://dbpedia.org/resource/LoDaisKa_Site", "label": "Lodaiska site"}, {"uri": "http://dbpedia.org/resource/David_W._Brown_House", "label": "david brown"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/nearestCity", "label": "city"}, {"uri": "http://dbpedia.org/ontology/nearestCity", "label": "city"}], "id": "2dc904ef3c0548be8f0e6094c1d29e82"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands> . ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Fredis_Refunjol> . }", "SerialNumber": "1598", "question": "Whose leaders are Willem-Alexander and Fredis Refunjol?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands", "label": "willem-alexander"}, {"uri": "http://dbpedia.org/resource/Fredis_Refunjol", "label": "Fredis Refunjol"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/leader", "label": "leader"}, {"uri": "http://dbpedia.org/ontology/leader", "label": "leader"}], "id": "24fb6dd7a0ba43e2868b53007f2509e5"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/Los_Angeles_World_Airports> . ?uri <http://dbpedia.org/ontology/hubAirport> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "SerialNumber": "1604", "question": "What are the airlines whose hub airport is operated by the Los Angeles World Airports?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Los_Angeles_World_Airports", "label": "Los Angeles World Airports"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/operator", "label": "operated"}, {"uri": "http://dbpedia.org/ontology/hubAirport", "label": "hub airport"}, {"uri": "http://dbpedia.org/ontology/Airline", "label": "airline"}], "id": "de301d41a10c41a3a2d59f1551e5d9ac"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands> <http://dbpedia.org/ontology/currency> ?uri. <http://dbpedia.org/resource/Karafarin_Bank> <http://dbpedia.org/ontology/product> ?uri} ", "SerialNumber": "1605", "question": "What is used as money for French Southern and Antarctic Lands is also the  product of the Karafarin Bank ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands", "label": "French Southern and Antarctic Lands"}, {"uri": "http://dbpedia.org/resource/Karafarin_Bank", "label": "Karafarin Bank"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/currency", "label": "money"}, {"uri": "http://dbpedia.org/ontology/product", "label": "product"}], "id": "53c6290f51ab4906877de90618901cdd"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Palo_Alto,_California> . ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "1606", "question": "Which office holder's resting place is in  Palo Alto, California and was succeeded by Adrian A. Basora ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Palo_Alto,_California", "label": "Palo Alto, California"}, {"uri": "http://dbpedia.org/resource/Adrian_A._Basora", "label": "Adrian A. Basora"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/restingPlace", "label": "resting place"}, {"uri": "http://dbpedia.org/property/successor", "label": "succeeded"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "office holder"}], "id": "e57b71a78a4646b0a3ce6c506fffc8e6"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Denzil_Minnan-Wong> . ?uri <http://dbpedia.org/ontology/locationCity> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "1607", "question": "Name the companies which are in cities under Denzil Minnan Wong?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Denzil_Minnan-Wong", "label": "Denzil Minnan Wong"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/leaderName", "label": "name"}, {"uri": "http://dbpedia.org/ontology/locationCity", "label": "cities"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "companies"}], "id": "fa5fce44a7e64b59826c7dba9a288670"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/John_B._Waldo> . ?x <http://dbpedia.org/property/state> ?uri  . }", "SerialNumber": "1611", "question": "Where is the successor of john waldo from?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_B._Waldo", "label": "waldo john"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/successor", "label": "successor"}, {"uri": "http://dbpedia.org/property/state", "label": "john"}], "id": "3bb7be1a180e47e49b6cc14c06051021"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/C\u00e9line_Buckens> <http://dbpedia.org/ontology/hometown> ?uri. <http://dbpedia.org/resource/Richard_Heron> <http://dbpedia.org/property/placeOfDeath> ?uri} ", "SerialNumber": "1612", "question": "Which home town of Cline Buckens is the place of Death of Richard heron ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/C\u00e9line_Buckens", "label": "buckens"}, {"uri": "http://dbpedia.org/resource/Richard_Heron", "label": "Richard heron"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/hometown", "label": "home town"}, {"uri": "http://dbpedia.org/property/placeOfDeath", "label": "place of Death"}], "id": "22eeb146aa1f41a4b0db6df5844b3fed"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Jefferson_North_Assembly> . ?x <http://dbpedia.org/property/related> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "SerialNumber": "1613", "question": "Name some cars similar to the ones which are assembled at the Jefferson North Assembly?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jefferson_North_Assembly", "label": "Jefferson North Assembly"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/assembly", "label": "Assembly"}, {"uri": "http://dbpedia.org/property/related", "label": "at"}, {"uri": "http://dbpedia.org/ontology/Automobile", "label": "assembled"}], "id": "a501085682e8485f815a18df2b94a9a0"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm> . ?uri <http://dbpedia.org/ontology/presenter> ?x  . }", "SerialNumber": "1614", "question": "Which awards are presented by the committee located in Stockholm?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Stockholm", "label": "Stockholm"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/headquarters", "label": "located"}, {"uri": "http://dbpedia.org/ontology/presenter", "label": "presented"}], "id": "d7c077b487cb42b5869f72a3cd8d28be"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Saxophone> . ?uri <http://dbpedia.org/property/starring> ?x  . }", "SerialNumber": "1617", "question": "List everything in which saxophone players have been casted.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Saxophone", "label": "saxophone"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/instrument", "label": "players"}, {"uri": "http://dbpedia.org/property/starring", "label": "players"}], "id": "e3bdce2f724541fc987861adb5d4e715"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Catch_My_Soul_(UK_stage_version)> <http://dbpedia.org/ontology/author> ?uri } ", "SerialNumber": "1618", "question": "Who wrote Catch My soul ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Catch_My_Soul_(UK_stage_version)", "label": "Catch My soul"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/author", "label": "wrote"}], "id": "b25f5f59b6e44ff28e90122b0cd42a0f"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/EMI> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "SerialNumber": "1620", "question": "How many bands collaborated with artists who signed up with EMI?", "entity mapping": [{"uri": "http://dbpedia.org/resource/EMI", "label": "EMI"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/recordLabel", "label": "signed"}, {"uri": "http://dbpedia.org/ontology/associatedMusicalArtist", "label": "artists"}, {"uri": "http://dbpedia.org/ontology/Band", "label": "band"}], "id": "0db563660d024f5db42e2ff6ddb9f966"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Be\u015fikta\u015f_JK_(wheelchair_basketball)> <http://dbpedia.org/ontology/president> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . }", "SerialNumber": "1621", "question": "Where did the president study, who's the president of Besiktas JK?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Be\u015fikta\u015f_JK_(wheelchair_basketball)", "label": "Besiktas JK"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/president", "label": "president"}, {"uri": "http://dbpedia.org/property/almaMater", "label": "who's"}], "id": "83858d645fa74a698c361696ed79496f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Project_Runway_Canada> . ?x <http://dbpedia.org/ontology/residence> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "1623", "question": "In which places can we find the people won the Project Runaway Canada?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Project_Runway_Canada", "label": "Canada"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/award", "label": "Runaway"}, {"uri": "http://dbpedia.org/ontology/residence", "label": "Runaway"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "Runaway"}], "id": "d30be769b8ad4830a948b6b989b27b12"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Blue_Jacket> . ?x <http://dbpedia.org/property/combatant> ?uri  . }", "SerialNumber": "1624", "question": "How many factions were fighting in the wars where Blue Jacket was a commander?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Blue_Jacket", "label": "Blue Jacket"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/commander", "label": "commander"}, {"uri": "http://dbpedia.org/property/combatant", "label": "wars"}], "id": "b8223f04582b4b20a1089758559d531f"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Jazz_fusion> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . }", "SerialNumber": "1626", "question": "How many record labels publish works of Jazz fusion?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jazz_fusion", "label": "Jazz fusion"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/genre", "label": "works"}, {"uri": "http://dbpedia.org/ontology/recordLabel", "label": "record label"}], "id": "7355543eae974888a7f58b4d3f0b935f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/L\u00ea_H\u1ed3ng_Phong> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }", "SerialNumber": "1627", "question": "Where was the person born whose successor was Le Hong Phong?", "entity mapping": [{"uri": "http://dbpedia.org/resource/L\u00ea_H\u1ed3ng_Phong", "label": "Le Hong Phong"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/successor", "label": "successor"}, {"uri": "http://dbpedia.org/property/birthPlace", "label": "born"}], "id": "6593b0b0d9e445f68fe8d0c7cb6deb32"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Athens> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}", "SerialNumber": "1633", "question": "What is the former team of the Athens borned basketball players ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Athens", "label": "Athens"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/birthPlace", "label": "borned"}, {"uri": "http://dbpedia.org/ontology/formerTeam", "label": "former team"}, {"uri": "http://dbpedia.org/ontology/BasketballPlayer", "label": "basketball player"}], "id": "9babaa2d96e64f1db42f3fb1df04a4bb"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Jennifer_Lopez>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "1636", "question": "Name the television show directed by Simon Fuller and judged by Jennifier Lopez ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Simon_Fuller", "label": "Simon Fuller"}, {"uri": "http://dbpedia.org/resource/Jennifer_Lopez", "label": "Jennifier Lopez"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/creator", "label": "Lopez"}, {"uri": "http://dbpedia.org/property/judges", "label": "judged"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "television show"}], "id": "840cc802cdf04e8eac6a2f572777b0fa"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_One> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "1637", "question": "Give me some shows owned by BBC one and BBC hd?", "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC_One", "label": "BBC one"}, {"uri": "http://dbpedia.org/resource/BBC_HD", "label": "BBC hd"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/network", "label": "owned"}, {"uri": "http://dbpedia.org/ontology/network", "label": "owned"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "0130934ed9434be69d31f035e062979a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/Greater_London> . ?x <http://dbpedia.org/property/mouthLocation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "1639", "question": "Where do the rivers from greater London flow into?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Greater_London", "label": "greater London"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/sourceRegion", "label": "flow"}, {"uri": "http://dbpedia.org/property/mouthLocation", "label": "flow"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "f81e7f1fee7f4af2a3dcb722750b7137"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jared_Kushner> <http://dbpedia.org/ontology/relation> ?x . ?x <http://dbpedia.org/ontology/relation> ?uri  . }", "SerialNumber": "1640", "question": "List out the people who are related to the relatives of Jared Kushner ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jared_Kushner", "label": "Jared Kushner"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relation", "label": "relatives"}, {"uri": "http://dbpedia.org/ontology/relation", "label": "relatives"}], "id": "2c1e5203a1b34f32b1e7d70c4086c339"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/property/headcoach> <http://dbpedia.org/resource/Buzz_Williams> }", "SerialNumber": "1641", "question": "Was Buzz Williams the headcoach of the Marquette Golden Eagles mens team?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team", "label": "marquette golden eagles team"}, {"uri": "http://dbpedia.org/resource/Buzz_Williams", "label": "Buzz Williams"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/headcoach", "label": "headcoach"}], "id": "a3791b21aca7437b82671f3c7f08d07d"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/opponent> <http://dbpedia.org/resource/John_G._Schmitz> . ?x <http://dbpedia.org/ontology/incumbent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}", "SerialNumber": "1643", "question": "Under which US president was a politician in opposition of John G Schmitz?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_G._Schmitz", "label": "schmitz john"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/opponent", "label": "Schmitz"}, {"uri": "http://dbpedia.org/ontology/incumbent", "label": "Schmitz"}, {"uri": "http://dbpedia.org/ontology/Politician", "label": "politician"}], "id": "9833117a26d84052ac213535b41a7fd9"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moondog_Matinee> <http://dbpedia.org/ontology/subsequentWork> ?uri. <http://dbpedia.org/resource/Theme_Time_Radio_Hour> <http://dbpedia.org/property/creator> ?uri} ", "SerialNumber": "1644", "question": "Whcih creator of Theme Time Radio Hour also created subsequent work of Moondoc Matinee ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Moondog_Matinee", "label": "matinee"}, {"uri": "http://dbpedia.org/resource/Theme_Time_Radio_Hour", "label": "Theme Time Radio Hour"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/subsequentWork", "label": "subsequent work"}, {"uri": "http://dbpedia.org/property/creator", "label": "creator"}], "id": "670aa15c90d24e1e973eaeb3581ebacd"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Indiana_Territory> } ", "SerialNumber": "1647", "question": "Who was the United States president who also served as a governor of Indiana Territory?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Indiana_Territory", "label": "Indiana Territory"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/branch", "label": "governor"}], "id": "1b3cf7cd113c4026ae73b7cb071d05d8"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Y-block_engine> <http://dbpedia.org/ontology/manufacturer> ?uri } ", "SerialNumber": "1648", "question": "Who built the Ford Y-block engine ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Y-block_engine", "label": "Ford Y-block engine"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/manufacturer", "label": "built"}], "id": "9682bc0632d6403e9e533df9f9bee572"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Pixar_Image_Computer>  . }", "SerialNumber": "1653", "question": "Who produced the Pixar Image Computer?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pixar_Image_Computer", "label": "Pixar Image Computer"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/product", "label": "produced"}], "id": "00fb7cf892ed4de0a25b3d8c04526470"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Cleopatra_V_of_Egypt> . ?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "SerialNumber": "1654", "question": "Name the royalty whose daughter was Cleopatra V and was married to Ptolemy XIV of Egypt?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cleopatra_V_of_Egypt", "label": "cleopatra egypt"}, {"uri": "http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt", "label": "Ptolemy XIV of Egypt"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mother", "label": "Cleopatra"}, {"uri": "http://dbpedia.org/ontology/spouse", "label": "married to"}, {"uri": "http://dbpedia.org/ontology/Royalty", "label": "royalty"}], "id": "7ffdaaa1870e4b449f08ef6591198dfb"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/The_Bahamas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}", "SerialNumber": "1655", "question": "What are some islands in the bahamas?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Bahamas", "label": "bahamas"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/archipelago"}, {"uri": "http://dbpedia.org/ontology/Island", "label": "island"}], "id": "8ef554c7762349339b7cecc0fdf1bf1e"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mother_Teresa> <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_John_Paul_II> }", "SerialNumber": "1656", "question": "Was mother teresa beatified by John Paul the second?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mother_Teresa", "label": "mother teresa"}, {"uri": "http://dbpedia.org/resource/Pope_John_Paul_II", "label": "paul john"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/beatifiedBy", "label": "beatified by"}], "id": "dcf35e72e0e94e41bde4a681a72c6e01"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> . ?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Ch\u00eane-Bougeries> . }", "SerialNumber": "1661", "question": "Which  municipality is neighbored by Cologny and Chne-Bougeries?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cologny", "label": "Cologny"}, {"uri": "http://dbpedia.org/resource/Ch\u00eane-Bougeries", "label": "Chne-Bougeries"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/neighboringMunicipalities", "label": "municipality"}, {"uri": "http://dbpedia.org/property/neighboringMunicipalities", "label": "municipality"}], "id": "a1b9bccd83024859887b1a4045cc1240"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Graham_Richardson> <http://dbpedia.org/ontology/primeMinister> ?uri. <http://dbpedia.org/resource/Bob_McMullan> <http://dbpedia.org/ontology/primeMinister> ?uri . }", "SerialNumber": "1664", "question": "Which common prime minister did Graham Richardson and Bon McMullan serve ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Graham_Richardson", "label": "Graham Richardson"}, {"uri": "http://dbpedia.org/resource/Bob_McMullan", "label": "mcmullan"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/primeMinister", "label": "prime minister"}, {"uri": "http://dbpedia.org/ontology/primeMinister", "label": "prime minister"}], "id": "787190bf105a421a9ce3d9c43676b4e9"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Giannis_Alafouzos> <http://dbpedia.org/ontology/stateOfOrigin> ?uri } ", "SerialNumber": "1666", "question": "Where does the Giannis Alafouzos originate?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Giannis_Alafouzos", "label": "Giannis Alafouzos"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/stateOfOrigin"}], "id": "7d551dbcd79d403490a5b99b491823dd"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Screenwriter> . ?x <http://dbpedia.org/property/awards> ?uri  . }", "SerialNumber": "1670", "question": "What awards have been given to Screenwriters?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Screenwriter", "label": "Screenwriter"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/occupation"}, {"uri": "http://dbpedia.org/property/awards", "label": "awards"}], "id": "1f0727912ac34c55b9900d1943f9a7af"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Toronto>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "1672", "question": "What companies are located in toronto?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto", "label": "toronto"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locationCity", "label": "located"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "companies"}], "id": "861f142fbb834b069b0085c225e1a899"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maine_School_of_Science_and_Mathematics> <http://dbpedia.org/ontology/authority> ?uri. <http://dbpedia.org/resource/Charles_A._Boutelle> <http://dbpedia.org/property/restingplace> ?uri} ", "SerialNumber": "1674", "question": "What is the city of the Maine School of Science and Mathematics is also the resting place of Charles A. Boutelle ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Maine_School_of_Science_and_Mathematics", "label": "Maine School of Science and Mathematics"}, {"uri": "http://dbpedia.org/resource/Charles_A._Boutelle", "label": "Charles A. Boutelle"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/authority", "label": "city"}, {"uri": "http://dbpedia.org/property/restingplace", "label": "resting place"}], "id": "6d79d046defe4cb683dddbf548a4dbc1"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Harris_County,_Texas> . ?uri <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Tandem_Computers>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "1675", "question": "Which Harris County based company is a subsidiary of Tandem Computers?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Harris_County,_Texas", "label": "harris county"}, {"uri": "http://dbpedia.org/resource/Tandem_Computers", "label": "Tandem Computers"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locationCity", "label": "based"}, {"uri": "http://dbpedia.org/ontology/subsidiary", "label": "subsidiary"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "d1bcc9750c134471969808b985308178"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ptolemy_XII_Auletes> . ?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt>  . }", "SerialNumber": "1678", "question": "Which spouse of Ptolemy XIV had a mother named Ptolemy XII auletes ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ptolemy_XII_Auletes", "label": "Ptolemy XII auletes"}, {"uri": "http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt", "label": "ptolemy xiv"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/parent"}, {"uri": "http://dbpedia.org/ontology/spouse", "label": "spouse"}], "id": "17f767e9a51b4a3d935fa194d0de2f8d"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Texas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "1682", "question": "How many corporations were founded in Texas?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Texas", "label": "Texas"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/foundationPlace", "label": "founded"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "corporations"}], "id": "0adae92fcd52472bb68050b2bbb93c44"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/ontology/team> ?uri  . }", "SerialNumber": "1687", "question": "List some teams for which someone who has played as a defender, now plays?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Defenceman", "label": "now"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/position", "label": "plays"}, {"uri": "http://dbpedia.org/ontology/team", "label": "team"}], "id": "b387a0ed9c02429981b6d661bfe7d779"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Barbara_Bestor> <http://dbpedia.org/property/knownFor> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "1688", "question": "In which place is the company which is known for Barbara bestor located ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Barbara_Bestor", "label": "Barbara bestor"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/knownFor", "label": "known for"}, {"uri": "http://dbpedia.org/ontology/location", "label": "located"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "81a19f6c64e14ffeb7f3f28e34230331"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Ontario> . ?x <http://dbpedia.org/property/locations> ?uri  . }", "SerialNumber": "1689", "question": "Count all the places where companies located in Ontario operate.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ontario", "label": "Ontario"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locationCity", "label": "located"}, {"uri": "http://dbpedia.org/property/locations", "label": "located"}], "id": "b107d70a40bd4d58953a8a9b4aacc109"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/Bradenton,_Florida> . ?x <http://dbpedia.org/property/architect> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "SerialNumber": "1693", "question": "Who was the architect of the stadium currently run by Brandenton?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bradenton,_Florida", "label": "Brandenton"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/operator", "label": "Brandenton"}, {"uri": "http://dbpedia.org/property/architect", "label": "architect"}, {"uri": "http://dbpedia.org/ontology/Stadium", "label": "stadium"}], "id": "75f2b0e695d0422494bcbf36743ad108"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jean-Louis_Arcand> <http://dbpedia.org/property/institution> <http://dbpedia.org/resource/Geneva> }", "SerialNumber": "1696", "question": "Does Jean Louis Arcand work for Geneva?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jean-Louis_Arcand", "label": "arcand louis jean"}, {"uri": "http://dbpedia.org/resource/Geneva", "label": "Geneva"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/institution", "label": "work"}], "id": "8e29eff6b17f4319b9c659532af37bad"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Republic_of_Korea_Army> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "1697", "question": "How many religions are followed amongst the people who've worked in the Korean army?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Republic_of_Korea_Army", "label": "Korean"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/militaryBranch", "label": "army"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}], "id": "c7dc969d31554373b40ef9f089a6bbc3"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Pyusawhti> . ?x <http://dbpedia.org/ontology/type> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "SerialNumber": "1699", "question": "What kind of buildings were designed by Pyusawhti?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pyusawhti", "label": "Pyusawhti"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/architect", "label": "designed"}, {"uri": "http://dbpedia.org/ontology/type", "label": "designed"}, {"uri": "http://dbpedia.org/ontology/Building", "label": "building"}], "id": "4c467d0fc1fd40a199f7c5588d0aaee0"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/USS_Camp_(DE-251)> <http://dbpedia.org/property/shipBuilder> ?uri. <http://dbpedia.org/resource/USS_Sturtevant_(DE-239)> <http://dbpedia.org/property/shipBuilder> ?uri . }", "SerialNumber": "1703", "question": "Which ship builder built the USS Camp and Sturtevant ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/USS_Camp_(DE-251)", "label": "USS Camp"}, {"uri": "http://dbpedia.org/resource/USS_Sturtevant_(DE-239)", "label": "sturtevant uss"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/shipBuilder", "label": "ship builder"}, {"uri": "http://dbpedia.org/property/shipBuilder", "label": "ship builder"}], "id": "526573654e8e40fe9c04f756f3343bd8"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Bodhi_Elfman> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "1705", "question": "What are some movies whose score is composed by relatives of Bodhi Elfman?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bodhi_Elfman", "label": "Bodhi Elfman"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/relatives", "label": "relatives"}, {"uri": "http://dbpedia.org/property/music", "label": "composed"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "e0e0942378134df3b26ed071efe372b3"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/state> <http://dbpedia.org/resource/Metro_Manila> . ?x <http://dbpedia.org/property/athletics> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "SerialNumber": "1711", "question": "What sports can be played at universities in Metro Manila?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Metro_Manila", "label": "Metro Manila"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/state", "label": "in"}, {"uri": "http://dbpedia.org/property/athletics", "label": "played"}, {"uri": "http://dbpedia.org/ontology/University", "label": "universities"}], "id": "87ca63e3887e495ebe99cdef9dc9f3d7"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kafue_River> <http://dbpedia.org/ontology/riverMouth> ?uri. <http://dbpedia.org/resource/Shire_River> <http://dbpedia.org/ontology/riverMouth> ?uri . }", "SerialNumber": "1712", "question": "Where does Kafue and Shire river flow into?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kafue_River", "label": "river kafue"}, {"uri": "http://dbpedia.org/resource/Shire_River", "label": "Shire river"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/riverMouth", "label": "river"}, {"uri": "http://dbpedia.org/ontology/riverMouth", "label": "river"}], "id": "14aeee6f609641969e67d616c245ed48"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brian_Deegan_(rider)> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/Harold_Lloyd> <http://dbpedia.org/property/birthPlace> ?uri . }", "SerialNumber": "1713", "question": "Which US state gave  us Brian Deegan and Harold Lyold?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Brian_Deegan_(rider)", "label": "Brian Deegan"}, {"uri": "http://dbpedia.org/resource/Harold_Lloyd", "label": "harold"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/birthPlace", "label": "Harold"}, {"uri": "http://dbpedia.org/property/birthPlace", "label": "Harold"}], "id": "2ae49f2b089243fe8429fb7fc6f37020"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Charlemagne> <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Antipope_Paschal_III> }", "SerialNumber": "1715", "question": "was Charlemagne canonized by antipope pachal 3?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Charlemagne", "label": "Charlemagne"}, {"uri": "http://dbpedia.org/resource/Antipope_Paschal_III", "label": "antipope"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/canonizedBy", "label": "canonized by"}], "id": "56180046035946cf88878e6666d488c1"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ghana> <http://dbpedia.org/property/languages> <http://dbpedia.org/resource/Akan_language> }", "SerialNumber": "1717", "question": "Is Akan spoken in Ghana?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ghana", "label": "Ghana"}, {"uri": "http://dbpedia.org/resource/Akan_language", "label": "akan"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/languages", "label": "spoken"}], "id": "5eb2e5439fa141a895d7ce6ec1c0460b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/workInstitutions> <http://dbpedia.org/resource/University_of_Miami> . ?x <http://dbpedia.org/property/workInstitutions> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Medician>}", "SerialNumber": "1722", "question": "List the work institute of the medicians who has also worked at University of Miami ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/University_of_Miami", "label": "University of Miami"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/workInstitutions", "label": "worked"}, {"uri": "http://dbpedia.org/property/workInstitutions", "label": "worked"}, {"uri": "http://dbpedia.org/ontology/Medician", "label": "medician"}], "id": "2ea87bee77ff44d2a1bd856fc6106c1c"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Linda_Hogan> <http://dbpedia.org/ontology/ethnicity> ?uri. <http://dbpedia.org/resource/Holmes_Colbert> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ", "SerialNumber": "1723", "question": "What ethinicity of Linda Hogan is also the state of origin of Holmes Colbert ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Linda_Hogan", "label": "Linda Hogan"}, {"uri": "http://dbpedia.org/resource/Holmes_Colbert", "label": "Holmes Colbert"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/ethnicity", "label": "state of origin"}, {"uri": "http://dbpedia.org/ontology/stateOfOrigin", "label": "state of origin"}], "id": "fbc52b963d5141a6b89216bae276bf21"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/race> <http://dbpedia.org/resource/Dubai_World_Cup> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Jockey>}", "SerialNumber": "1725", "question": "Where are jockeys in Dubai World Cup from?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dubai_World_Cup", "label": "Dubai World Cup"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/race", "label": "jockeys"}, {"uri": "http://dbpedia.org/property/birthPlace", "label": "are"}, {"uri": "http://dbpedia.org/ontology/Jockey", "label": "jockeys"}], "id": "3932dc742d734d208470a844d5484ced"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentteam> <http://dbpedia.org/resource/Michigan_Wolverines>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "SerialNumber": "1727", "question": "Which american football players currently plays for Michigan Wolverines?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Michigan_Wolverines", "label": "Michigan Wolverines"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentteam", "label": "currently"}, {"uri": "http://dbpedia.org/ontology/AmericanFootballPlayer", "label": "american football player"}], "id": "fce78279c2e143a79652b8514207cd41"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Walter_Evans_Edge> <http://dbpedia.org/property/office> ?uri. <http://dbpedia.org/resource/Henry_Miller_Shreve> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "SerialNumber": "1728", "question": "What is the location of the Walter Evans Edge office which is also the place of birth of henry Miller ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Walter_Evans_Edge", "label": "Walter Evans Edge"}, {"uri": "http://dbpedia.org/resource/Henry_Miller_Shreve", "label": "miller henry"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/office", "label": "office"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "place birth"}], "id": "d6d1fdb7f3604da48fee7fba7961f107"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Glasgow_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "SerialNumber": "1730", "question": "What other destinations do airlines go to, whose flights also come to Glasgow?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Glasgow_Airport", "label": "Glasgow"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/targetAirport", "label": "flights"}, {"uri": "http://dbpedia.org/property/destinations", "label": "destinations"}, {"uri": "http://dbpedia.org/ontology/Airline", "label": "airline"}], "id": "5ba35b11cd8b47b3bdb0467bb646621b"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PATTS_College_of_Aeronautics> <http://dbpedia.org/property/athletics> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig> <http://dbpedia.org/ontology/sport> ?uri} ", "SerialNumber": "1731", "question": "List down the common sports played by PATTS College of Aeronautics and lytechnic University of the Philippines Taguig ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics", "label": "PATTS College of Aeronautics"}, {"uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig", "label": "philippines university lytechnic"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/athletics", "label": "Taguig"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}], "id": "cd069e1c88ed4e77ae308cbb998f57ca"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri. <http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch> <http://dbpedia.org/ontology/sport> ?uri} ", "SerialNumber": "1733", "question": "Of the sports commonly played at Islamic Azad Uni, tehran, which one does Jon Speelman play?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jon_Speelman", "label": "Jon Speelman"}, {"uri": "http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch", "label": "islamic"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/field", "label": "play"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}], "id": "6e794f3cb6e6412f993f19aa5cd71225"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Laurence_Mark> . ?uri <http://dbpedia.org/ontology/knownFor> ?x  . }", "SerialNumber": "1737", "question": "Who have become famous by movies produced by Laurence Mark?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Laurence_Mark", "label": "Laurence Mark"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/producer", "label": "produced"}, {"uri": "http://dbpedia.org/ontology/knownFor", "label": "movies"}], "id": "69fee15c06f64c7eb69fdfc71e10c6d8"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ganz_UV> <http://dbpedia.org/ontology/operator> ?uri. <http://dbpedia.org/resource/Balaton_wine_region> <http://dbpedia.org/ontology/location> ?uri} ", "SerialNumber": "1738", "question": "What is the common country of Ganz UV and Balaton wine region ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ganz_UV", "label": "Ganz UV"}, {"uri": "http://dbpedia.org/resource/Balaton_wine_region", "label": "Balaton wine region"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/operator", "label": "country"}, {"uri": "http://dbpedia.org/ontology/location", "label": "country"}], "id": "8553c4fee8b04dc18263ee3f07b81807"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Greenpeace_Nordic> <http://dbpedia.org/ontology/parentOrganisation> ?uri } ", "SerialNumber": "1739", "question": "What organization is the parent of Greenpeace Nordic?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Greenpeace_Nordic", "label": "Greenpeace Nordic"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/parentOrganisation", "label": "parent"}], "id": "6f1d569a147d482ca609cfdbec7c9ed8"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "SerialNumber": "1740", "question": "Give me some softwares which run on mac os", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mac_OS", "label": "mac os"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/operatingSystem", "label": "run"}, {"uri": "http://dbpedia.org/ontology/Software", "label": "software"}], "id": "aaf4a21d2ca04d3bb91aed5c6063223d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Panthera_leo_fossilis> <http://dbpedia.org/ontology/species> ?uri. <http://dbpedia.org/resource/Liger> <http://dbpedia.org/ontology/species> ?uri . }", "SerialNumber": "1744", "question": "Panthera leo fossils and Liger belong to which species?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Panthera_leo_fossilis", "label": "panthera"}, {"uri": "http://dbpedia.org/resource/Liger", "label": "Liger"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/species", "label": "species"}, {"uri": "http://dbpedia.org/ontology/species", "label": "species"}], "id": "2006a24c1c3e478b98df523596714251"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_France> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "1745", "question": "which awards have been given to people who fought in the Battle of France?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Battle_of_France", "label": "Battle of France"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/battle", "label": "Battle"}, {"uri": "http://dbpedia.org/ontology/award", "label": "awards"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "fought"}], "id": "30d46acd81d9420f9bef5bbebec0d15f"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/property/training> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "1746", "question": "How many people have been trained in an institute located in California?", "entity mapping": [{"uri": "http://dbpedia.org/resource/California", "label": "California"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/city", "label": "in"}, {"uri": "http://dbpedia.org/property/training", "label": "trained"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "located"}], "id": "44378225c4c7414bbcfefcb69cfc2d92"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)> <http://dbpedia.org/ontology/musicBy> ?uri. <http://dbpedia.org/resource/Moondog_Matinee> <http://dbpedia.org/ontology/subsequentWork> ?uri} ", "SerialNumber": "1747", "question": "Which composer subsequent work of Moondog Matinee and also composed The TImes They are A changin ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)", "label": "changin times they are"}, {"uri": "http://dbpedia.org/resource/Moondog_Matinee", "label": "Moondog Matinee"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/musicBy", "label": "composer"}, {"uri": "http://dbpedia.org/ontology/subsequentWork", "label": "subsequent work"}], "id": "a9fc9b062b16419dbf83984d9a7bcb0e"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Merritt_Cabal> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Lucifer's_Hammer> <http://dbpedia.org/ontology/publisher> ?uri} ", "SerialNumber": "1753", "question": "What magazine is Marritt Cabal known for which has Lucifer Hammer as publisher ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Merritt_Cabal", "label": ""}, {"uri": "http://dbpedia.org/resource/Lucifer's_Hammer", "label": "lucifer hammer"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/knownFor", "label": "known for"}, {"uri": "http://dbpedia.org/ontology/publisher", "label": "publisher"}], "id": "5cf1e1c8ee184ab0aa42a8628980116b"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Shahid_Khan> } ", "SerialNumber": "1757", "question": "Which football teams is Shahid Khan proprietor to?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Shahid_Khan", "label": "Shahid Khan"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owner", "label": "proprietor"}], "id": "9e56e9f24bb64c5b894e7a47b2c9cd94"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/Stoke_City_F.C.> } ", "SerialNumber": "1759", "question": "Which football players currently have their contracts with Stoke City F.C.?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Stoke_City_F.C.", "label": "Stoke City F.C."}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentclub", "label": "currently"}], "id": "2d3b740bd54a4388a8be9f63fcaef04d"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/A_Grand_Day_Out> <http://dbpedia.org/ontology/writer> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "SerialNumber": "1761", "question": "What are all the prizes won by the writer of A Grand Day Out?", "entity mapping": [{"uri": "http://dbpedia.org/resource/A_Grand_Day_Out", "label": "A Grand Day Out"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/writer", "label": "writer"}, {"uri": "http://dbpedia.org/ontology/award", "label": "won"}], "id": "9049b588d47b4566b827b69d457b3725"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Fran\u00e7ois_Burgers> <http://dbpedia.org/property/restingplace> ?uri. <http://dbpedia.org/resource/Johannes_Gerhardus_Strijdom> <http://dbpedia.org/property/restingplace> ?uri . }", "SerialNumber": "1764", "question": "Where are Thomas Franois Burgers and Johannes Gerhardus Strijdom buried?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Thomas_Fran\u00e7ois_Burgers", "label": "Johannes Gerhardus Strijdom"}, {"uri": "http://dbpedia.org/resource/Johannes_Gerhardus_Strijdom", "label": "Johannes Gerhardus Strijdom"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/restingplace"}, {"uri": "http://dbpedia.org/property/restingplace"}], "id": "b1d14746b41f47459edf2a268414687f"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Renaissance_Center> <http://dbpedia.org/property/address> ?uri } ", "SerialNumber": "1765", "question": "where are renaissance centers located?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Renaissance_Center", "label": "renaissance center"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/address", "label": "located"}], "id": "14d666af4e7f4944b90397bb7836911e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Australian_Alps> . ?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Goolwa,_South_Australia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "1770", "question": "Give the name of the river with source place as Australian Alps and has mouth place as Goolwa , a place in Siyuth Australia ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Australian_Alps", "label": "Australian Alps"}, {"uri": "http://dbpedia.org/resource/Goolwa,_South_Australia", "label": "australia"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourcePlace", "label": "source place"}, {"uri": "http://dbpedia.org/ontology/mouthPlace", "label": "mouth place"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "d3c5d6d98b654e44bbd5b942e911e74a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Kris_Kristofferson>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "SerialNumber": "1774", "question": "Which artists have co-starred with Kris Kristofferson?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kris_Kristofferson", "label": "Kris Kristofferson"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/associatedActs", "label": "co-starred"}, {"uri": "http://dbpedia.org/ontology/Artist", "label": "artist"}], "id": "191277ee793a402ab582ed1fbba59680"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/religion> ?uri  . }", "SerialNumber": "1775", "question": "Count the total religions followed by the ones living in England.", "entity mapping": [{"uri": "http://dbpedia.org/resource/England", "label": "England"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/residence", "label": "living"}, {"uri": "http://dbpedia.org/property/religion", "label": "religion"}], "id": "1cedfca911824453b06451cbc8104541"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Springer> <http://dbpedia.org/property/team> ?uri. <http://dbpedia.org/resource/Syracuse_University_Press> <http://dbpedia.org/property/parent> ?uri} ", "SerialNumber": "1776", "question": "Which club of Michael Springer is also the parent organization of Syracuse University press ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Springer", "label": "Michael Springer"}, {"uri": "http://dbpedia.org/resource/Syracuse_University_Press", "label": "Syracuse University press"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/team", "label": "organization"}, {"uri": "http://dbpedia.org/property/parent", "label": "parent"}], "id": "569d57916252412ab7543cdd78e851a3"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eastern_Washington> <http://dbpedia.org/ontology/river> ?uri. <http://dbpedia.org/resource/Central_Washington> <http://dbpedia.org/ontology/river> ?uri . }", "SerialNumber": "1778", "question": "Which river flows through both eastern and western washington?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Eastern_Washington", "label": "washington eastern"}, {"uri": "http://dbpedia.org/resource/Central_Washington", "label": "washington"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/river", "label": "river"}, {"uri": "http://dbpedia.org/ontology/river", "label": "river"}], "id": "0d9332702ee748b2a87f19d9c50726e4"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1790> <http://dbpedia.org/property/leader> ?x . ?x <http://dbpedia.org/property/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "1780", "question": "Who was the president under which people won the United States House of Representatives elections in 1790 ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1790", "label": "representatives elections"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/leader", "label": "elections"}, {"uri": "http://dbpedia.org/property/president", "label": "president"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "elections"}], "id": "3fd0cb3a9d11496ca7d876547a5e6409"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Terminal_Station_(Chattanooga)> . ?x <http://dbpedia.org/property/education> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>}", "SerialNumber": "1782", "question": "Terminal Station at Chattanooga is made by architects from which University?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Terminal_Station_(Chattanooga)", "label": "Terminal Station"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/knownFor", "label": "University"}, {"uri": "http://dbpedia.org/property/education", "label": "University"}, {"uri": "http://dbpedia.org/ontology/Architect", "label": "architect"}], "id": "b8180174343249208cb2beeebf8476a0"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2011\u201312_FC_Spartak_Moscow_season> <http://dbpedia.org/ontology/homeStadium> ?uri. <http://dbpedia.org/resource/Svetlana_Gounkina> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "SerialNumber": "1783", "question": "Which home stadium of 2011-12 FC Spartak Moscow season is also the location of birth of the Svetlana Gounkina ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2011\u201312_FC_Spartak_Moscow_season", "label": "spartak season moscow"}, {"uri": "http://dbpedia.org/resource/Svetlana_Gounkina", "label": "Svetlana Gounkina"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/homeStadium", "label": "home stadium"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "location of birth"}], "id": "d2b7dba56c5f4859813272dda053e0a1"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/firstTeam> <http://dbpedia.org/resource/Renault_in_Formula_One> . ?x <http://dbpedia.org/ontology/poleDriver> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FormulaOneRacer>}", "SerialNumber": "1786", "question": "How many different pole drivers are there, of the GPs when Renault was the first team?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Renault_in_Formula_One", "label": "renault"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/firstTeam", "label": "first team"}, {"uri": "http://dbpedia.org/ontology/poleDriver", "label": "pole driver"}, {"uri": "http://dbpedia.org/ontology/FormulaOneRacer", "label": "Renault"}], "id": "c015a34029f941aeb5c25cfc4bab4c52"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/John_Robert_Woodyard> . ?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Lovelace_Medal>  . }", "SerialNumber": "1788", "question": "Amongst the winner of Lovelace medal, who has John Robert as doctoral supervisor ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Robert_Woodyard", "label": "robert john"}, {"uri": "http://dbpedia.org/resource/Lovelace_Medal", "label": "Lovelace medal"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/doctoralAdvisor", "label": "doctoral supervisor"}, {"uri": "http://dbpedia.org/property/prizes", "label": "Robert"}], "id": "e179bec4f0ea4b508f69fac03d08356e"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Australia_at_the_2008_Summer_Olympics> <http://dbpedia.org/property/flagbearer> ?uri } ", "SerialNumber": "1789", "question": "who was the australian flagbearer of 2008 Summer Olympics?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Australia_at_the_2008_Summer_Olympics", "label": "2008 Summer Olympics"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/flagbearer", "label": "flagbearer"}], "id": "b9b35134084c486ab2f02ecdc549e6bc"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Bertrada_of_Laon> } ", "SerialNumber": "1790", "question": "Whose mam is Bertrada of Laon?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bertrada_of_Laon", "label": "Bertrada of Laon"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mother", "label": "mam"}], "id": "3230de5fe63a44debe27de6c25e6aedf"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ganges> <http://dbpedia.org/property/city> ?x . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}", "SerialNumber": "1791", "question": "List the leaders of all the cities through which the Ganga river flows ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ganges", "label": "Ganga"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/city", "label": "flows"}, {"uri": "http://dbpedia.org/ontology/leaderName", "label": "leaders"}, {"uri": "http://dbpedia.org/ontology/City", "label": "flows"}], "id": "7652df11d2a14922acffd1e9556bfb09"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/J._S._M._Hooper> <http://dbpedia.org/ontology/citizenship> ?uri. <http://dbpedia.org/resource/Robert_Valentine_(composer)> <http://dbpedia.org/ontology/country> ?uri} ", "SerialNumber": "1792", "question": "What is the common citizenship between JSM Hopoer and Robert Valentine ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/J._S._M._Hooper", "label": "JSM Hopoer"}, {"uri": "http://dbpedia.org/resource/Robert_Valentine_(composer)", "label": "Robert Valentine"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/citizenship", "label": "citizenship"}, {"uri": "http://dbpedia.org/ontology/country", "label": "in"}], "id": "4b41483f7e73472da3d5fafa4cc448d6"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Hynief> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "1797", "question": "How many people have worked in the band one of whose current member is Hynief?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Hynief", "label": "Hynief"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentMembers", "label": "current member"}, {"uri": "http://dbpedia.org/ontology/bandMember", "label": "member band"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "band"}], "id": "9287889114534eda9daed4e2d79a4680"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Alpine_skiing_at_the_1972_Winter_Olympics_\u2013_Women's_downhill> <http://dbpedia.org/ontology/bronzeMedalist> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }", "SerialNumber": "1798", "question": "What is the residence of the bronze medalist of Alpine skiing at the women's downhill competition at the 1972 Winter Olympics?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Alpine_skiing_at_the_1972_Winter_Olympics_\u2013_Women's_downhill", "label": "olympics downhill women's winter skiing"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/bronzeMedalist", "label": "bronze medalist"}, {"uri": "http://dbpedia.org/property/birthPlace", "label": "Olympics"}], "id": "42c827cfc2294a5390f501f2f6447b1a"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mount_St._Peter_Church> <http://dbpedia.org/property/architecture> <http://dbpedia.org/resource/Art_Deco> }", "SerialNumber": "1799", "question": "Does Mt St. Peter Churt follow the architectural style of art deco?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mount_St._Peter_Church", "label": "peter"}, {"uri": "http://dbpedia.org/resource/Art_Deco", "label": "art deco"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/architecture", "label": "architectural style"}], "id": "4a9b50b6f10f4e23bfacaee43d35e802"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/King_Crimson> . ?x <http://dbpedia.org/ontology/recordedIn> ?uri  . }", "SerialNumber": "1801", "question": "King crimson has been recorded in which places?", "entity mapping": [{"uri": "http://dbpedia.org/resource/King_Crimson", "label": "King crimson"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/artist", "label": "places"}, {"uri": "http://dbpedia.org/ontology/recordedIn", "label": "recorded in"}], "id": "711db5b7af9245649c23c84820a2671c"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant> <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Ford_Motor_Company> }", "SerialNumber": "1807", "question": "Does Ford own the Ford Kansas Assembly plant?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant", "label": "assembly kansas plant ford"}, {"uri": "http://dbpedia.org/resource/Ford_Motor_Company", "label": "Ford"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owningOrganisation", "label": "Ford own"}], "id": "7de6776232624ca297b978ded3f8f754"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/colour> <http://dbpedia.org/resource/Royal_blue> . ?x <http://dbpedia.org/property/nickname> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "SerialNumber": "1808", "question": "What are the nicknames of the schools whose color is royal blue?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_blue", "label": "royal blue"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/colour", "label": "color"}, {"uri": "http://dbpedia.org/property/nickname", "label": "nickname"}, {"uri": "http://dbpedia.org/ontology/School", "label": "school"}], "id": "dcb85ef5573c48b38fec1148f6076eae"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Lori_Black> . ?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "1810", "question": "Name the office holder who has a child named lori Black and Harvard Westlake school as one of the educational institute ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lori_Black", "label": "lori Black"}, {"uri": "http://dbpedia.org/resource/Harvard-Westlake_School", "label": "westlake harvard school"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/children", "label": "child"}, {"uri": "http://dbpedia.org/ontology/almaMater", "label": "education"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "office holder"}], "id": "305a5e72abde4540a896cb6f4e731952"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_National_Herald_(India)> <http://dbpedia.org/ontology/owner> ?uri. <http://dbpedia.org/resource/Yashpal_Kapur> <http://dbpedia.org/ontology/party> ?uri} ", "SerialNumber": "1811", "question": "Which ppolitical party of Yashpal Kapur is also the owner of National Herald ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_National_Herald_(India)", "label": "national herald"}, {"uri": "http://dbpedia.org/resource/Yashpal_Kapur", "label": "Yashpal Kapur"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owner", "label": "owner"}, {"uri": "http://dbpedia.org/ontology/party", "label": "political party"}], "id": "53399784d528412faa510052199348bf"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/McLean_Hospital> . ?x <http://dbpedia.org/property/restingplace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Congressman>}", "SerialNumber": "1814", "question": "Where is the tombstone of the congressman who died in the McLean hospital?", "entity mapping": [{"uri": "http://dbpedia.org/resource/McLean_Hospital", "label": "McLean hospital"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/deathPlace", "label": "died in"}, {"uri": "http://dbpedia.org/property/restingplace", "label": "tombstone"}, {"uri": "http://dbpedia.org/ontology/Congressman", "label": "congressman"}], "id": "208d4114c72d4eb8aa2dc244a8f1e842"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/highschool> <http://dbpedia.org/resource/Red_Lion_Area_School_District> . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "SerialNumber": "1817", "question": "Where did the athlete start his career, who did his highschool in Red Lion Area School District?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Red_Lion_Area_School_District", "label": "Red Lion Area School District"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/highschool", "label": "highschool"}, {"uri": "http://dbpedia.org/property/debutteam", "label": "School"}, {"uri": "http://dbpedia.org/ontology/Athlete", "label": "athlete"}], "id": "bdc8518615b54204b29359054a6ad859"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paul_Demi\u00e9ville> <http://dbpedia.org/property/fields> ?uri. <http://dbpedia.org/resource/Buddhist_Tai_Hung_College> <http://dbpedia.org/property/religion> ?uri} ", "SerialNumber": "1821", "question": "What faith of Buddhist Tai Hung College is also the acadmeic interest of Paul Demiville ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Demi\u00e9ville", "label": "Paul Demiville"}, {"uri": "http://dbpedia.org/resource/Buddhist_Tai_Hung_College", "label": "Buddhist Tai Hung College"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/fields", "label": "Paul"}, {"uri": "http://dbpedia.org/property/religion", "label": "faith"}], "id": "efe69ad1cb94450398a0a0a408332d63"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jim_Harbaugh> <http://dbpedia.org/property/currentteam> <http://dbpedia.org/resource/Michigan_Wolverines> }", "SerialNumber": "1825", "question": "Is jim harbaugh currently in the Michigan Wolverines?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jim_Harbaugh", "label": "jim harbaugh"}, {"uri": "http://dbpedia.org/resource/Michigan_Wolverines", "label": "Michigan Wolverines"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentteam", "label": "currently"}], "id": "8ce6aa741f5047309e078d1c2a08e7a4"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/training> <http://dbpedia.org/resource/University_of_Melbourne_Faculty_of_VCA_and_MCM> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "SerialNumber": "1826", "question": "How many awards have been received by graduates of University of Melbourne, Faculty of VCA & MCM?", "entity mapping": [{"uri": "http://dbpedia.org/resource/University_of_Melbourne_Faculty_of_VCA_and_MCM", "label": "university"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/training", "label": "MCM"}, {"uri": "http://dbpedia.org/ontology/award", "label": "awards"}], "id": "82a6252eb38448dba20dc6489bc2b39c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Thomas_Egerton_(publisher)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "SerialNumber": "1827", "question": "To which books Thomas Egerton, an editor?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Thomas_Egerton_(publisher)", "label": "Thomas Egerton"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/publisher", "label": "editor"}, {"uri": "http://dbpedia.org/ontology/Book", "label": "book"}], "id": "58cf5b8a4f4e47bcb79a98fac51edd37"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Plymouth,_Vermont> . ?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Samuel_W._McCall>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "1828", "question": "List the people with final resting place as Plymouth, Vermont and has Samuel W. McCall as predecessor?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Plymouth,_Vermont", "label": "Plymouth, Vermont"}, {"uri": "http://dbpedia.org/resource/Samuel_W._McCall", "label": "Samuel W. McCall"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/restingPlace", "label": "resting place"}, {"uri": "http://dbpedia.org/property/predecessor", "label": "predecessor"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "final"}], "id": "bef8f6aac12d4d6283dceb45a5a45f15"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Garbage_(band)> . ?x <http://dbpedia.org/ontology/recordedIn> ?uri  . }", "SerialNumber": "1830", "question": "In how many places has Garbage recorded their songs?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Garbage_(band)", "label": "Garbage"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/producer", "label": "songs"}, {"uri": "http://dbpedia.org/ontology/recordedIn", "label": "recorded in"}], "id": "595c138b55a942dd940bede3ff72b507"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tickle_Me> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/Viva_Las_Vegas> <http://dbpedia.org/property/artist> ?uri . }", "SerialNumber": "1833", "question": "Whose songs are Tickle Me and Viva Las Vegas?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tickle_Me", "label": "Tickle Me"}, {"uri": "http://dbpedia.org/resource/Viva_Las_Vegas", "label": "Viva Las Vegas"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/artist", "label": "songs"}, {"uri": "http://dbpedia.org/property/artist", "label": "songs"}], "id": "264c4445e1374947ab6f8121e12c286c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Charles_Drummond_Ellis> . ?uri <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Manhattan_Project>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "SerialNumber": "1834", "question": "Among the scientist known for Manhattan Project who had a doctoral student named Charles Ellis ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles_Drummond_Ellis", "label": "charles ellis"}, {"uri": "http://dbpedia.org/resource/Manhattan_Project", "label": "Manhattan Project"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/doctoralStudents", "label": "doctoral student"}, {"uri": "http://dbpedia.org/property/knownFor", "label": "known for"}, {"uri": "http://dbpedia.org/ontology/Scientist", "label": "scientist"}], "id": "0da441743df14fafb7bc6b4bcacc81bf"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sidney_Catlin_Partridge> <http://dbpedia.org/property/education> ?uri. <http://dbpedia.org/resource/Lisa_Brummel> <http://dbpedia.org/ontology/almaMater> ?uri} ", "SerialNumber": "1835", "question": "Which education center Sidney Catlin Partrodge attended which was also the alma mater of Lisa Brummel ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sidney_Catlin_Partridge", "label": ""}, {"uri": "http://dbpedia.org/resource/Lisa_Brummel", "label": "Lisa Brummel"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/education", "label": "alma mater"}, {"uri": "http://dbpedia.org/ontology/almaMater", "label": "alma mater"}], "id": "9abe253ae8a348c8b5f3b85f4cf62072"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kady_O'Malley> <http://dbpedia.org/property/homeTown> ?uri. <http://dbpedia.org/resource/Perianne_Jones> <http://dbpedia.org/property/club> ?uri} ", "SerialNumber": "1836", "question": "Which club of perianne Lones is also the home town of the Kady O'Malley ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kady_O'Malley", "label": "Kady O'Malley"}, {"uri": "http://dbpedia.org/resource/Perianne_Jones", "label": "perianne"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/homeTown", "label": "home town"}, {"uri": "http://dbpedia.org/property/club", "label": "club"}], "id": "b225170899d7462d96eaf7899775423b"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Native_Indonesians> <http://dbpedia.org/property/region> ?uri } ", "SerialNumber": "1837", "question": "Which countries share a similar sociocultural and ethnic heritage of that of Native Indonesians?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Native_Indonesians", "label": "Native Indonesians"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/region", "label": "heritage"}], "id": "176507c0f98f445c85cccae3d80a54b0"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Auckland> . ?x <http://dbpedia.org/property/purpose> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "SerialNumber": "1840", "question": "What are some organizations in Auckland created to do?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Auckland", "label": "Auckland"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/location", "label": "created"}, {"uri": "http://dbpedia.org/property/purpose", "label": "created"}, {"uri": "http://dbpedia.org/ontology/Organisation", "label": "organizations"}], "id": "35d4c9e5bb0d403a8949fe9fb0639704"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parentOrganisation> <http://dbpedia.org/resource/Colorado_Department_of_Natural_Resources> . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}", "SerialNumber": "1841", "question": "Where are the agencies headquartered at, which are under the Colorado Dept of Natural Resources?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Colorado_Department_of_Natural_Resources", "label": "Colorado Dept of Natural Resources"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/parentOrganisation", "label": "agencies headquartered"}, {"uri": "http://dbpedia.org/property/headquarters", "label": "headquarter"}, {"uri": "http://dbpedia.org/ontology/GovernmentAgency", "label": "agencies"}], "id": "fe21b9172386466fb7fef8d29772878e"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Economist> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "1843", "question": "How many different religions have economists followed?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Economist", "label": "economist"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/profession", "label": "economists"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}], "id": "4bae6679286944e0ab5bae123d3b66f8"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Orient_News> <http://dbpedia.org/property/headquarters> ?uri. <http://dbpedia.org/resource/Feras_Saied> <http://dbpedia.org/ontology/deathPlace> ?uri} ", "SerialNumber": "1846", "question": "In which city where there is a headquarters of Orient News and also Feras Saied died?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Orient_News", "label": "Orient News"}, {"uri": "http://dbpedia.org/resource/Feras_Saied", "label": "Feras Saied"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/headquarters", "label": "headquarters"}, {"uri": "http://dbpedia.org/ontology/deathPlace", "label": "died"}], "id": "2c9ee30345e3457898f20d4bc672ae79"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Raymond_E._Baldwin> <http://dbpedia.org/property/branch> ?uri } ", "SerialNumber": "1848", "question": "In which department does Raymond Baldwin work?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Raymond_E._Baldwin", "label": "Raymond Baldwin"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/branch", "label": "work"}], "id": "026887c01dd8473f92d6ec1da23af18d"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/Lighthouse_Boys_Club> . ?x <http://dbpedia.org/property/debutteam> ?uri  . }", "SerialNumber": "1849", "question": "What teams did the ex teamplayers of lighthouse boy club start their career with?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lighthouse_Boys_Club", "label": "lighthouse club"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/youthclubs", "label": "club"}, {"uri": "http://dbpedia.org/property/debutteam", "label": "teams"}], "id": "b7f41cde28da47ef84c2c318244b7edd"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Purvis_Eureka> <http://dbpedia.org/property/engine> ?uri. <http://dbpedia.org/resource/Ford_Theatre> <http://dbpedia.org/property/company> ?uri} ", "SerialNumber": "1853", "question": "Which producer of Purvis Eureka engine is also the owner of Ford Theatre ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Purvis_Eureka", "label": "Purvis Eureka"}, {"uri": "http://dbpedia.org/resource/Ford_Theatre", "label": "Ford Theatre"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/engine", "label": "engine"}, {"uri": "http://dbpedia.org/property/company", "label": "owner"}], "id": "ce99d86c121449bda242a1944532331a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_CH-47_Chinook>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "1855", "question": "Among the companies who has product named Chinook who has a key person as Dennis Muilenburg ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dennis_Muilenburg", "label": "Dennis Muilenburg"}, {"uri": "http://dbpedia.org/resource/Boeing_CH-47_Chinook", "label": "chinook"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/keyPeople", "label": "key"}, {"uri": "http://dbpedia.org/property/products", "label": "product"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "companies"}], "id": "59a2342df2b04a22832b4b8d099295ea"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Bombshell_(Smash)> . ?x <http://dbpedia.org/property/guests> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionEpisode>}", "SerialNumber": "1857", "question": "Who gave guest appearances on the show which is the next episode after the Bombshell one?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bombshell_(Smash)", "label": "Bombshell"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/previousWork", "label": "episode"}, {"uri": "http://dbpedia.org/property/guests", "label": "guest"}, {"uri": "http://dbpedia.org/ontology/TelevisionEpisode", "label": "episode one"}], "id": "6cd5cdc40f6e4af8a04465a6699c16ea"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Miluk_language> <http://dbpedia.org/property/region> ?uri. <http://dbpedia.org/resource/Cayuse_language> <http://dbpedia.org/property/region> ?uri . }", "SerialNumber": "1858", "question": "Miluk and Cayuse are still spoken in which part of the world?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Miluk_language", "label": "miluk"}, {"uri": "http://dbpedia.org/resource/Cayuse_language", "label": "cayuse"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/region", "label": "world"}, {"uri": "http://dbpedia.org/property/region", "label": "world"}], "id": "bbc69cd1992d42deba2ecb4e218a9349"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/David_Charles_(physician)> <http://dbpedia.org/property/workInstitutions> ?x . ?x <http://dbpedia.org/property/affiliation> ?uri  . }", "SerialNumber": "1860", "question": "With whom is the institution of David Charles affiliated?", "entity mapping": [{"uri": "http://dbpedia.org/resource/David_Charles_(physician)", "label": "David Charles"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/workInstitutions", "label": "institution"}, {"uri": "http://dbpedia.org/property/affiliation", "label": "affiliated"}], "id": "0394d1d9bb67406ebe89217042530952"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steven_Palazzo> <http://dbpedia.org/property/battles> ?uri. <http://dbpedia.org/resource/Tony_Hogg> <http://dbpedia.org/property/battles> ?uri . }", "SerialNumber": "1861", "question": "Which battle did both Steven Palazao and tony hogg fight in?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Steven_Palazzo", "label": "steven"}, {"uri": "http://dbpedia.org/resource/Tony_Hogg", "label": "tony hogg"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/battles", "label": "battle"}, {"uri": "http://dbpedia.org/property/battles", "label": "battle"}], "id": "ce165bf79de24f10844b39944b1c118c"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2012\u201313_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri } ", "SerialNumber": "1866", "question": "Who was the coach of marquette Golden Eagles men's basketball team-2012,13 season ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2012\u201313_Marquette_Golden_Eagles_men's_basketball_team", "label": "basketball marquette golden eagles men's"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/coach", "label": "coach"}], "id": "2462f71d97294217948911559d7808a7"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri. <http://dbpedia.org/resource/Eric_Schiller> <http://dbpedia.org/ontology/knownFor> ?uri} ", "SerialNumber": "1868", "question": "What made Jon Speelman and Eric Schiller famous?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jon_Speelman", "label": "Jon Speelman"}, {"uri": "http://dbpedia.org/resource/Eric_Schiller", "label": "Eric Schiller"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/field", "label": "famous"}, {"uri": "http://dbpedia.org/ontology/knownFor", "label": "famous"}], "id": "cad47dbadca34d12a26f9f492cee5f29"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Croix_de_guerre_1939\u20131945_(France)> . ?x <http://dbpedia.org/property/battles> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}", "SerialNumber": "1869", "question": "In which wars army men awarded with the Croix de Guerre, fought?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Croix_de_guerre_1939\u20131945_(France)", "label": "Croix de Guerre"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/awards", "label": "awarded"}, {"uri": "http://dbpedia.org/property/battles", "label": "fought"}, {"uri": "http://dbpedia.org/ontology/MilitaryPerson", "label": "fought"}], "id": "7b7764c0196d461999cc23dd0df6c84e"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Burro_Flats_Painted_Cave> <http://dbpedia.org/ontology/governingBody> ?uri. <http://dbpedia.org/resource/Boeing_B-17_Flying_Fortress> <http://dbpedia.org/ontology/manufacturer> ?uri} ", "SerialNumber": "1870", "question": "Which manufacturer of the Boeing B-17 Flying fortress is the manager of burro Flats Painted Caves ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Burro_Flats_Painted_Cave", "label": "burro Flats Painted Cave"}, {"uri": "http://dbpedia.org/resource/Boeing_B-17_Flying_Fortress", "label": "Boeing B-17 Flying fortress"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/governingBody", "label": "manager"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "manufacturer"}], "id": "4d44f78d46374b24819e6cdf6753aad7"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/Stoke_City_F.C.>  . }", "SerialNumber": "1872", "question": "How many people currently play for Stoke City F.C.?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Stoke_City_F.C.", "label": "Stoke City F.C."}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentclub", "label": "currently"}], "id": "e6e655798ed9475796f9df8aa87c9a4e"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Toronto> . ?x <http://dbpedia.org/property/locations> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "SerialNumber": "1873", "question": "In how many different places can I find companies which were founded in toronto?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto", "label": "toronto"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/foundationPlace", "label": "founded"}, {"uri": "http://dbpedia.org/property/locations", "label": "companies"}, {"uri": "http://dbpedia.org/ontology/Place", "label": "place"}], "id": "ec75426ef9034e49baa03c7c16d57f2a"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Jimmy_Wales> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "SerialNumber": "1874", "question": "How many organizations own the website to which Jimmy Wales contributes?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jimmy_Wales", "label": "Jimmy Wales"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/author", "label": "contributes"}, {"uri": "http://dbpedia.org/ontology/owner", "label": "own"}, {"uri": "http://dbpedia.org/ontology/Organisation", "label": "organizations"}], "id": "55b86a8a22e4483d935168408545caa7"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Arkansas> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}", "SerialNumber": "1876", "question": "Through how many cities does the river flowing into Arkansas go?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Arkansas", "label": "Arkansas"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/mouthMountain", "label": "river"}, {"uri": "http://dbpedia.org/ontology/city", "label": "in"}, {"uri": "http://dbpedia.org/ontology/City", "label": "in"}], "id": "5c2111f2815f4809b9548ab2c0c677d3"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Ted_Osborne> . ?uri <http://dbpedia.org/property/relatives> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "SerialNumber": "1877", "question": "Which fictional character's relatives were made by Ted Osborne?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ted_Osborne", "label": "Ted Osborne"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/creator", "label": "made by"}, {"uri": "http://dbpedia.org/property/relatives", "label": "relatives"}, {"uri": "http://dbpedia.org/ontology/FictionalCharacter", "label": "fictional character"}], "id": "74671972de564fbe97ece8a85fd86fcd"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/RENFE_Class_333> <http://dbpedia.org/ontology/designer> ?uri. <http://dbpedia.org/resource/Renaissance_Center> <http://dbpedia.org/property/owner> ?uri} ", "SerialNumber": "1880", "question": "Which designer of RENFE also owns Renaissance Center ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/RENFE_Class_333", "label": "renfe"}, {"uri": "http://dbpedia.org/resource/Renaissance_Center", "label": "Renaissance Center"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/designer", "label": "designer"}, {"uri": "http://dbpedia.org/property/owner", "label": "owns"}], "id": "9b8b445ddfbb463187269990961ac846"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/locationCountry> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "1882", "question": "What shows are on the networks which are from the United States?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": "United States"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locationCountry", "label": "from"}, {"uri": "http://dbpedia.org/property/network", "label": "network"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "99a06bb6d4f3448da8d9b37aec6a17fe"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Maple_Leaf_Sports_&_Entertainment> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "SerialNumber": "1883", "question": "Who have rented the stadium operated by Maple Leaf S&E?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Maple_Leaf_Sports_&_Entertainment", "label": "maple"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/operator", "label": "S&E"}, {"uri": "http://dbpedia.org/ontology/tenant", "label": "S&E"}, {"uri": "http://dbpedia.org/ontology/Stadium", "label": "stadium"}], "id": "2bce3f2fcdbd463ebbcd84e5b65eb439"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Snake_Island_(Black_Sea)> <http://dbpedia.org/property/locationCountry> ?uri } ", "SerialNumber": "1885", "question": "Where is Snake Island located ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Snake_Island_(Black_Sea)", "label": "Snake Island"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/locationCountry", "label": "located"}], "id": "586e586025864050b16699cda92980a7"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Peter_Thorneycroft> . ?x <http://dbpedia.org/ontology/relation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}", "SerialNumber": "1890", "question": "What are the relatives of the parliament member whose successor is Peter Thorneycroft?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Peter_Thorneycroft", "label": "Peter Thorneycroft"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/successor", "label": "successor"}, {"uri": "http://dbpedia.org/ontology/relation", "label": "relatives"}, {"uri": "http://dbpedia.org/ontology/MemberOfParliament", "label": "parliament member"}], "id": "3ece33a3b26c44ba89d83c5af7910d5a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentteam> <http://dbpedia.org/resource/Michigan_Wolverines> . ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/1998_Baltimore_Ravens_season>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "SerialNumber": "1893", "question": "Which american football player's current team is Michigan Wolverines and former team was  Baltimore Ravens ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Michigan_Wolverines", "label": "Michigan Wolverines"}, {"uri": "http://dbpedia.org/resource/1998_Baltimore_Ravens_season", "label": "baltimore ravens"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentteam", "label": "current team"}, {"uri": "http://dbpedia.org/ontology/formerTeam", "label": "former team"}, {"uri": "http://dbpedia.org/ontology/AmericanFootballPlayer", "label": "american football player"}], "id": "b82d8ce46e1a4a6ba75108b376994f10"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/lyrics> <http://dbpedia.org/resource/Inma_Gonz\u00e1lez> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . }", "SerialNumber": "1894", "question": "What famous work is derived from the one whose lyrics are written by Inma Gonzales?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Inma_Gonz\u00e1lez", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/lyrics", "label": "lyrics"}, {"uri": "http://dbpedia.org/ontology/basedOn", "label": "derived from"}], "id": "6afc2e0ce3f244ce93a5bed1fab03623"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/Hebron> . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . }", "SerialNumber": "1898", "question": "What are the veneration of the one for which there's a major shrine in Hebron?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Hebron", "label": "Hebron"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/majorShrine", "label": "major shrine"}, {"uri": "http://dbpedia.org/property/veneratedIn", "label": "there's"}], "id": "18eeaa768fa343b285501be229538892"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Militia>  . }", "SerialNumber": "1901", "question": "How many politicians are in the militia?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Militia", "label": "militia"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/branch", "label": "politicians"}], "id": "b3de1886f6a34847a46f036db7e7f0f2"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Water_resources_management_in_El_Salvador> <http://dbpedia.org/property/sourceCountry> ?uri. <http://dbpedia.org/resource/Jos\u00e9_Mar\u00eda_Orellana> <http://dbpedia.org/ontology/country> ?uri} ", "SerialNumber": "1903", "question": "What is the source country of Water resources managemnt in EL Salvador is also the land of Jos MAra Orellana ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Water_resources_management_in_El_Salvador", "label": "resources"}, {"uri": "http://dbpedia.org/resource/Jos\u00e9_Mar\u00eda_Orellana", "label": "orellana"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/sourceCountry", "label": "source country"}, {"uri": "http://dbpedia.org/ontology/country", "label": "country"}], "id": "a38439a78e5c4e43954ba3096b10f6c6"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/screenplay> ?x  . }", "SerialNumber": "1906", "question": "Some movies whose screenplay is done by american born people?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": "american"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/birthPlace", "label": "people"}, {"uri": "http://dbpedia.org/property/screenplay", "label": "screenplay"}], "id": "b9b27ecb9a874649a57739e1ec0b5ab4"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)> . ?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Dolley_Madison>  . }", "SerialNumber": "1908", "question": "Which colonel consort is Dolley Madison?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Colonel_(United_States)", "label": "colonel"}, {"uri": "http://dbpedia.org/resource/Dolley_Madison", "label": "Dolley Madison"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/rank", "label": "colonel consort"}, {"uri": "http://dbpedia.org/property/spouse", "label": "consort"}], "id": "c45b083d0f4e4d43b3c84cbb54b3e598"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Motor_Credit_Company> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/Dagenham_wind_turbines> <http://dbpedia.org/property/owner> ?uri . }", "SerialNumber": "1910", "question": "Which company ownes stock in Dagenham turbines and Ford Motor credit?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Motor_Credit_Company", "label": "Ford Motor credit"}, {"uri": "http://dbpedia.org/resource/Dagenham_wind_turbines", "label": "turbines dagenham"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/owner", "label": "ownes"}, {"uri": "http://dbpedia.org/property/owner", "label": "ownes"}], "id": "1d50c91b6a7745c6818f2e8464d35108"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/1999_Japanese_Grand_Prix> <http://dbpedia.org/property/poleDriver> <http://dbpedia.org/resource/Michael_Schumacher> }", "SerialNumber": "1915", "question": "Was Michael Schumacher a pole driver in the 1999 GP?", "entity mapping": [{"uri": "http://dbpedia.org/resource/1999_Japanese_Grand_Prix", "label": "1999"}, {"uri": "http://dbpedia.org/resource/Michael_Schumacher", "label": "Michael Schumacher"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/poleDriver", "label": "pole driver"}], "id": "9167d5c750d0472389d1ae6346e74154"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/NCAA_Division_I_Football_Bowl_Subdivision>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "SerialNumber": "1916", "question": "How many universities participate in the NCAA Division I Football Bowl Subdivision?", "entity mapping": [{"uri": "http://dbpedia.org/resource/NCAA_Division_I_Football_Bowl_Subdivision", "label": "NCAA Division I Football Bowl Subdivision"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/athletics", "label": "participate"}, {"uri": "http://dbpedia.org/ontology/University", "label": "universities"}], "id": "125b4ddfca3f45c987a4f7d3791fd239"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Sandman_(Vertigo)> <http://dbpedia.org/property/writers> ?uri. <http://dbpedia.org/resource/Neverwhere_(radio_play)> <http://dbpedia.org/ontology/writer> ?uri} ", "SerialNumber": "1920", "question": "Which writer of the Snaman is also the writer of Neverwher ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Sandman_(Vertigo)", "label": "the Snaman"}, {"uri": "http://dbpedia.org/resource/Neverwhere_(radio_play)", "label": "neverwher"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/writers", "label": "writer"}, {"uri": "http://dbpedia.org/ontology/writer", "label": "writer"}], "id": "8eea4bb7e4f9442a8153aa8ae835ffeb"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/ground> <http://dbpedia.org/resource/Riverside_Stadium> . ?uri <http://dbpedia.org/ontology/managerClub> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "1922", "question": "How many people have managed a club which owns the Riverside Stadium?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Riverside_Stadium", "label": "Riverside Stadium"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/ground", "label": "owns"}, {"uri": "http://dbpedia.org/ontology/managerClub", "label": "managed"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "owns"}], "id": "bf8962801bda4524830a4a9e93f343ae"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gregg_Toland> . ?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Orson_Welles>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "1930", "question": "What Orson Welles directed movie has  photography director as Gregg Toland ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gregg_Toland", "label": "Gregg Toland"}, {"uri": "http://dbpedia.org/resource/Orson_Welles", "label": "Orson Welles"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/cinematography", "label": "photography"}, {"uri": "http://dbpedia.org/property/director", "label": "director"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "bf9af6758f024671b29e7786a3bd5039"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1999_San_Marino_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri. <http://dbpedia.org/resource/1997_Canadian_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri} ", "SerialNumber": "1932", "question": "List the driver of SA MArino Grand Prix is also the Pole driver of Canadian Grand Proix ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/1999_San_Marino_Grand_Prix", "label": "marino"}, {"uri": "http://dbpedia.org/resource/1997_Canadian_Grand_Prix", "label": "canadian grand prix"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/firstDriver", "label": "driver"}, {"uri": "http://dbpedia.org/property/poleDriver", "label": "Pole driver"}], "id": "7eb44afae7a540749ea01a4484cc116c"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Screenwriter> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "SerialNumber": "1933", "question": "How many awards have screenwriters won?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Screenwriter", "label": "screenwriter"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/occupation", "label": "won"}, {"uri": "http://dbpedia.org/ontology/award", "label": "awards"}], "id": "ccfb1eb8fbba41d2931dfb71598a8784"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri. <http://dbpedia.org/resource/Sarah_Champion_(presenter)> <http://dbpedia.org/property/birthPlace> ?uri} ", "SerialNumber": "1934", "question": "What is the local authority of the Buckhurst Hill County High School is also the birth palce of Sarah hampion ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School", "label": "Buckhurst Hill County High School"}, {"uri": "http://dbpedia.org/resource/Sarah_Champion_(presenter)", "label": "hampion sarah"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/localAuthority", "label": "local authority"}, {"uri": "http://dbpedia.org/property/birthPlace", "label": "birth"}], "id": "c7974233b0ce42da82267d5081901e7d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_route_E39> <http://dbpedia.org/ontology/county> ?uri. <http://dbpedia.org/resource/European_route_E8> <http://dbpedia.org/ontology/county> ?uri . }", "SerialNumber": "1936", "question": "List the countries through which European rout E39 and E8 passes ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/European_route_E39", "label": "european rout"}, {"uri": "http://dbpedia.org/resource/European_route_E8", "label": "european rout"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/county", "label": "passes"}, {"uri": "http://dbpedia.org/ontology/county", "label": "passes"}], "id": "82515aca204c44bb8a57aef8e97e9753"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Orthonychidae>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bird>}", "SerialNumber": "1945", "question": "What are some orthonychidae birds?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Orthonychidae", "label": "orthonychidae"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/family", "label": "orthonychidae birds"}, {"uri": "http://dbpedia.org/ontology/Bird", "label": "bird"}], "id": "f8980026033540a6b7278aa9d07efa35"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Colonel_(The_Americans)> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/property/music> ?uri  . }", "SerialNumber": "1946", "question": "List the music played in television episode which came after The Colonel (The Americans) ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Colonel_(The_Americans)", "label": "The Colonel (The Americans)"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/subsequentWork", "label": "Colonel"}, {"uri": "http://dbpedia.org/property/music", "label": "music"}], "id": "13aa00a577f340fcbdb046e59b4c6be3"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alfred_Tarnowski> <http://dbpedia.org/property/placeOfDeath> ?uri } ", "SerialNumber": "1951", "question": "where did Alfred Tarnowski die?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Alfred_Tarnowski", "label": "Alfred Tarnowski"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfDeath", "label": "where"}], "id": "16e81494f124480cb7ff4c58f496996a"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Incredibles_(film_score)> <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Finding_Nemo> }", "SerialNumber": "1953", "question": "Was the Incredibles released before Finding Nemo?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Incredibles_(film_score)", "label": "the Incredibles"}, {"uri": "http://dbpedia.org/resource/Finding_Nemo", "label": "Finding Nemo"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/previousWork", "label": "released"}], "id": "f6acd592b57c4dac95edb3c787a5980e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Cape_Vincent,_New_York> . ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Kingston,_Ontario> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "1955", "question": "Which river originates from Cape Vincent and Kingston, Ontario?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cape_Vincent,_New_York", "label": "Cape Vincent"}, {"uri": "http://dbpedia.org/resource/Kingston,_Ontario", "label": "Kingston, Ontario"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/sourceLocation", "label": "originates"}, {"uri": "http://dbpedia.org/property/sourceLocation", "label": "originates"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "94b09d893f4549c8aa8340eebf9f2e4f"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/doctoralAdvisor> <http://dbpedia.org/resource/Ernest_Rutherford>  . }", "SerialNumber": "1958", "question": "How many thesis were supervised by Ernest Rutherford?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ernest_Rutherford", "label": "Ernest Rutherford"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/doctoralAdvisor", "label": "supervised"}], "id": "8de783323c0a490694c0e920f0ad07b8"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/New_York_City_FC>  . }", "SerialNumber": "1962", "question": "How many people currently play for the NYC FC?", "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_City_FC", "label": "NYC FC"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentclub", "label": "currently"}], "id": "54e227ff2d2e417f99bcbc650ff5d8a7"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Madiswil> <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Gutenburg,_Switzerland> }", "SerialNumber": "1964", "question": "Is Gutenberg neighbouring with Madiswil?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Madiswil", "label": "Madiswil"}, {"uri": "http://dbpedia.org/resource/Gutenburg,_Switzerland", "label": "Gutenberg"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/neighboringMunicipalities", "label": "Gutenberg"}], "id": "6182dae45a7a40889fd0d2797e4209ff"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/Concor_Holdings> . ?x <http://dbpedia.org/property/crosses> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "SerialNumber": "1967", "question": "Over what do Concor holdings have a bridge?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Concor_Holdings", "label": "Concor holdings"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/builder", "label": "Concor holdings"}, {"uri": "http://dbpedia.org/property/crosses", "label": "Over"}, {"uri": "http://dbpedia.org/ontology/Bridge", "label": "bridge"}], "id": "079e2720dce04b76bb7bc051f96ba21b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Daniel_L._D._Granger> <http://dbpedia.org/property/state> ?uri. <http://dbpedia.org/resource/Job_Durfee> <http://dbpedia.org/property/state> ?uri . }", "SerialNumber": "1970", "question": "Daniel L D Granger and Job Durfee have based their political career in which US state?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Daniel_L._D._Granger", "label": "granger daniel"}, {"uri": "http://dbpedia.org/resource/Job_Durfee", "label": "Job Durfee"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/state", "label": "state"}, {"uri": "http://dbpedia.org/property/state", "label": "state"}], "id": "e35b89affcbc4e069a971dce50f9fd26"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?x <http://dbpedia.org/property/mascot> ?uri  . }", "SerialNumber": "1974", "question": "How many different mascots are there of the NCAA teams?", "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association", "label": "NCAA"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/athletics", "label": "teams"}, {"uri": "http://dbpedia.org/property/mascot", "label": "mascot"}], "id": "21aefb3be51e45ccb573c41d235eb2c4"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Panathinaikos_F.C.> <http://dbpedia.org/ontology/owner> ?x . ?x <http://dbpedia.org/property/residence> ?uri  . }", "SerialNumber": "1975", "question": "Where do the stockholders of Pathaninaikos F.C. live?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Panathinaikos_F.C.", "label": "Pathaninaikos F.C."}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owner", "label": "stockholders"}, {"uri": "http://dbpedia.org/property/residence", "label": "live"}], "id": "a325797e93f24edab0569ec125f0d080"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Katyayana_(Buddhist)> <http://dbpedia.org/property/religion> ?uri. <http://dbpedia.org/resource/Palang_Dharma_Party> <http://dbpedia.org/ontology/ideology> ?uri} ", "SerialNumber": "1977", "question": "What is the common ideology followed by Katyayana and Palang Dharma Party ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Katyayana_(Buddhist)", "label": "Katyayana"}, {"uri": "http://dbpedia.org/resource/Palang_Dharma_Party", "label": "Palang Dharma Party"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/religion", "label": "common"}, {"uri": "http://dbpedia.org/ontology/ideology", "label": "ideology"}], "id": "2ba1fd420a3144f68cb807b475c66dd5"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/architecturalStyle> <http://dbpedia.org/resource/Modern_architecture> . ?x <http://dbpedia.org/property/address> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "SerialNumber": "1980", "question": "Where can I find some buildings of modern architecture?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Modern_architecture", "label": "modern architecture"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/architecturalStyle", "label": "architecture"}, {"uri": "http://dbpedia.org/property/address", "label": "find"}, {"uri": "http://dbpedia.org/ontology/Building", "label": "building"}], "id": "58c006275fb04301a88992b18018e5f8"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steve_Ontiveros_(infielder)> <http://dbpedia.org/property/debutteam> ?uri. <http://dbpedia.org/resource/Ramiro_Pe\u00f1a> <http://dbpedia.org/ontology/team> ?uri} ", "SerialNumber": "1981", "question": "Name the team Ramiro Pea played for, which was also the first team of Steve Ontiveros?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Steve_Ontiveros_(infielder)", "label": "Steve Ontiveros"}, {"uri": "http://dbpedia.org/resource/Ramiro_Pe\u00f1a", "label": "ramiro"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/debutteam", "label": "team"}, {"uri": "http://dbpedia.org/ontology/team", "label": "played for"}], "id": "1b6199ceb90d4d089a7a2933476ec371"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/regionServed> <http://dbpedia.org/resource/Australia> } ", "SerialNumber": "1985", "question": "List the companies operating in Australia?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Australia", "label": "Australia"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/regionServed", "label": "operating"}], "id": "4973207551934a3bbfe9a31d282f7aa1"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/Ja,_vi_elsker_dette_landet> . ?uri <http://dbpedia.org/ontology/country> ?x  . }", "SerialNumber": "1986", "question": "What all are in the states whose anthem is Ja, vi esker dette landet?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ja,_vi_elsker_dette_landet", "label": "landet"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/anthem", "label": "anthem"}, {"uri": "http://dbpedia.org/ontology/country", "label": "state"}], "id": "6e3344185dfb4c5dbeed1d2254ad79fb"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/club> <http://dbpedia.org/resource/Atl\u00e9tico_Petr\u00f3leos_de_Luanda_(handball)> . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "SerialNumber": "1988", "question": "Which country are the players of the Atletico Petroleos de Luanda from?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Atl\u00e9tico_Petr\u00f3leos_de_Luanda_(handball)", "label": "Atletico Petroleos de Luanda"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/club", "label": "players"}, {"uri": "http://dbpedia.org/ontology/nationality", "label": "country"}, {"uri": "http://dbpedia.org/ontology/Athlete", "label": "players"}], "id": "4b373e478fb544ff89ce330c0d13a38d"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant> <http://dbpedia.org/ontology/owningOrganisation> ?uri } ", "SerialNumber": "1989", "question": "Who owns the ford kansas assembly plant?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant", "label": "assembly kansas plant ford"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owningOrganisation", "label": "owns"}], "id": "7fe19c7b8b7e4a719c02a2308891d646"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Islam>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}", "SerialNumber": "1990", "question": "Which saints were the messengers of Islam?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Islam", "label": "Islam"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/veneratedIn", "label": "messengers"}, {"uri": "http://dbpedia.org/ontology/Saint", "label": "saint"}], "id": "d225159e360c4ab99b91e8064247d40a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/James_Hartness> . ?x <http://dbpedia.org/property/occupation> ?uri  . }", "SerialNumber": "1992", "question": "What do the relatives of James Hartness do?", "entity mapping": [{"uri": "http://dbpedia.org/resource/James_Hartness", "label": "James Hartness"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relation", "label": "relatives"}, {"uri": "http://dbpedia.org/property/occupation", "label": "relatives"}], "id": "02d9f9ed093c4c9bac55160e89a71635"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Sevan_Ross> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }", "SerialNumber": "1995", "question": "Where was the predecessor of Sevan Ross born?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sevan_Ross", "label": "Sevan Ross"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/successor", "label": "born"}, {"uri": "http://dbpedia.org/property/placeOfBirth", "label": "born"}], "id": "113256a516bc4fd6b1b550678ccd7750"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Daewoo_Tico> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "SerialNumber": "1996", "question": "Which company produced the car which was a new version of Daewoo's Tico?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Daewoo_Tico", "label": "Daewoo's Tico"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/predecessor", "label": "Tico"}, {"uri": "http://dbpedia.org/property/parentCompany", "label": "company"}, {"uri": "http://dbpedia.org/ontology/Automobile", "label": "Tico"}], "id": "359b7ca38c6d488cb3ebdbb52b991c87"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/2014_FIFA_U-17_Women's_World_Cup> . ?x <http://dbpedia.org/ontology/builder> ?uri  . }", "SerialNumber": "1997", "question": "Who built the stadiums where 2014 FIFA under 17 woman's world cup took place?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2014_FIFA_U-17_Women's_World_Cup", "label": "woman's world cup"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/tenant", "label": "place"}, {"uri": "http://dbpedia.org/ontology/builder", "label": "place"}], "id": "68cc4d86a23e4564a5b88efbd61a347b"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ra\u0161a_(river)> <http://dbpedia.org/ontology/source> ?uri } ", "SerialNumber": "1998", "question": "Name the source of Raa ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ra\u0161a_(river)", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/source", "label": "source"}], "id": "1230514af3324678b0f4930db7543258"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Cuman\u00e1> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "SerialNumber": "1999", "question": "In which countries does the sea lie on whose shore is the city of Cumana?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cuman\u00e1", "label": "Cumana"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/cities", "label": "shore"}, {"uri": "http://dbpedia.org/ontology/country", "label": "city"}, {"uri": "http://dbpedia.org/ontology/Sea", "label": "sea"}], "id": "4e66595b1889429ea3cc642a64440f99"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/college> <http://dbpedia.org/resource/Hawaii> . ?x <http://dbpedia.org/ontology/debutTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "SerialNumber": "2002", "question": "For which teams did the Hawai graduated players play their first game?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Hawaii", "label": "Hawai "}], "predicate mapping": [{"uri": "http://dbpedia.org/property/college", "label": "game"}, {"uri": "http://dbpedia.org/ontology/debutTeam", "label": "teams"}, {"uri": "http://dbpedia.org/ontology/Athlete", "label": "game"}], "id": "e4f65c146f2447c0b3c8147f59a837e1"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Michael_Deeley> . ?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "2004", "question": "Movie's produced by Michael Deeley has Jordan Cronenweth as director of photography", "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Deeley", "label": "Michael Deeley"}, {"uri": "http://dbpedia.org/resource/Jordan_Cronenweth", "label": "Jordan Cronenweth"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/producer", "label": "produced"}, {"uri": "http://dbpedia.org/ontology/cinematography", "label": "photography"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "Movie"}], "id": "4b43dbb1aa6943abab5354ce97147e72"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/magazine> <http://dbpedia.org/resource/Gangan_Comics> . ?x <http://dbpedia.org/property/author> ?uri  . }", "SerialNumber": "2007", "question": "Who has written works found in the Gangan comics?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gangan_Comics", "label": "Gangan comics"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/magazine", "label": "found"}, {"uri": "http://dbpedia.org/property/author", "label": "found"}], "id": "a45050c81a4d44f28d5f4050ae9db959"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Mama_Makes_Three> . ?x <http://dbpedia.org/property/guests> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionEpisode>}", "SerialNumber": "2009", "question": "Who has given guest appearances on the TV Episodes whose was music done by Mama Makes 3?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mama_Makes_Three", "label": "makes mama"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/music", "label": "music"}, {"uri": "http://dbpedia.org/property/guests", "label": "guest"}, {"uri": "http://dbpedia.org/ontology/TelevisionEpisode", "label": "episodes"}], "id": "0c03e9d597b44f8bbef68457b98bb7c1"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Start_+_Flug> . ?x <http://dbpedia.org/property/nationalOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Aircraft>}", "SerialNumber": "2012", "question": "In which countries have the Start + Flug aircrafts originated?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Start_+_Flug", "label": "Start + Flug"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/manufacturer", "label": "originated"}, {"uri": "http://dbpedia.org/property/nationalOrigin", "label": "originated"}, {"uri": "http://dbpedia.org/ontology/Aircraft", "label": "aircraft"}], "id": "9f314843488844988113ecbbe314006d"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/league> <http://dbpedia.org/resource/National_Basketball_Association> } ", "SerialNumber": "2013", "question": "return some  players who have played in the NBA?", "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Basketball_Association", "label": "NBA"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/league", "label": "played"}], "id": "1979785c219b4798a0610b3ffc06873b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Samuel_Hayes_(settler)> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}", "SerialNumber": "2017", "question": "What is the resting place of the politician who succeeded Samuel Hayes?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Samuel_Hayes_(settler)", "label": "Samuel Hayes"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/successor", "label": "succeeded"}, {"uri": "http://dbpedia.org/ontology/restingPlace", "label": "resting place"}, {"uri": "http://dbpedia.org/ontology/Politician", "label": "politician"}], "id": "fa9fedea238d4402b21a174c49cb2e2b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Ring_of_Honor> . ?x <http://dbpedia.org/property/billed> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "SerialNumber": "2023", "question": "Where did the wrestler trained by Ring of Honour get billed?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ring_of_Honor", "label": "Ring of Honou"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/trainer", "label": "trained"}, {"uri": "http://dbpedia.org/property/billed", "label": "billed"}, {"uri": "http://dbpedia.org/ontology/Athlete", "label": "wrestler"}], "id": "ac781ca0b046427fb17b9f7d786504b9"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jeff_Conaway> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jason_Carter_(actor)> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "2024", "question": "What is the television show whose cast members are Jeff Conaway and Jason Carter?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jeff_Conaway", "label": "Jeff Conaway"}, {"uri": "http://dbpedia.org/resource/Jason_Carter_(actor)", "label": "Jason Carter"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/starring", "label": "members"}, {"uri": "http://dbpedia.org/ontology/starring", "label": "members"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "television show"}], "id": "34f7503c1f79416eaf15faa883428f9d"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Pat_Vincent> <http://dbpedia.org/ontology/deathPlace> ?x . ?x <http://dbpedia.org/ontology/founder> ?uri  . }", "SerialNumber": "2025", "question": "Who founded the city where Pat Vincent die?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pat_Vincent", "label": "Pat Vincent"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/deathPlace", "label": "die"}, {"uri": "http://dbpedia.org/ontology/founder", "label": "founded"}], "id": "7eab338cb255401796c57269d23ae776"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ellsworth_Bunker> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/region> ?uri  . }", "SerialNumber": "2026", "question": "The successor of Ellsworth Bunker belongs to which religion?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ellsworth_Bunker", "label": "Ellsworth Bunker"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/successor", "label": "successor"}, {"uri": "http://dbpedia.org/ontology/region", "label": "religion"}], "id": "beb30f1a6feb4cb2a855e669bf3f7555"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Minister_of_Defense_(Saudi_Arabia)> . ?x <http://dbpedia.org/property/battles> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2029", "question": "In which wars were people from the Saudi Arabian ministry of defense involved?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Minister_of_Defense_(Saudi_Arabia)", "label": "Saudi Arabian"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/office", "label": "of"}, {"uri": "http://dbpedia.org/property/battles", "label": "involved"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "involved"}], "id": "778e7cfd62804443a18d4c3eb9a42131"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Arthur_St._Clair> <http://dbpedia.org/property/battles> ?x . ?x <http://dbpedia.org/property/combatant> ?uri  . }", "SerialNumber": "2034", "question": "How many factions were involved in the battles fought by Arthur St. Clair?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Arthur_St._Clair", "label": "Arthur St. Clair"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/battles", "label": "battles"}, {"uri": "http://dbpedia.org/property/combatant", "label": "fought"}], "id": "d73ddbee285644de8877440e530c8c3a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Frampton's_Camel>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "SerialNumber": "2038", "question": "What are the artists that have been in the band Framptons camel?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Frampton's_Camel", "label": "Framptons"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/associatedActs", "label": "camel"}, {"uri": "http://dbpedia.org/ontology/Artist", "label": "artist"}], "id": "ace6d15c16bc4a83b76485ccda9762e6"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/property/headcoach> ?uri } ", "SerialNumber": "2041", "question": "Who is the headcoach of 2013-14 Marquette Golden Eagles men's basketball team ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team", "label": "basketball marquette golden eagles"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/headcoach", "label": "headcoach"}], "id": "f08fb8d368d348e482a1d9c778dd17d5"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ph\u1ea1m_V\u0103n_\u0110\u1ed3ng> . ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/John_McEwen> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "2043", "question": "In which military conflict were Phm Vn ng and John McEwen commanders ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ph\u1ea1m_V\u0103n_\u0110\u1ed3ng", "label": "Phm Vn"}, {"uri": "http://dbpedia.org/resource/John_McEwen", "label": "John McEwen"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/commander", "label": "commander"}, {"uri": "http://dbpedia.org/ontology/commander", "label": "commander"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "military conflict"}], "id": "86ca35205b364789addf51963601e201"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Air_2000> <http://dbpedia.org/ontology/destination> <http://dbpedia.org/resource/North_America> }", "SerialNumber": "2044", "question": "Does Air 2000 fly to the north american continent?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Air_2000", "label": "Air 2000"}, {"uri": "http://dbpedia.org/resource/North_America", "label": "north american continent"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/destination", "label": "fly"}], "id": "7ab5eba0fa5e4d2db3867b842e966443"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/BMW_M43> . ?x <http://dbpedia.org/property/predecessor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engine>}", "SerialNumber": "2046", "question": "What is the predecessor of the car engine which was succeeded by  BMW M43 ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/BMW_M43", "label": "BMW M43"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/successor", "label": "succeeded"}, {"uri": "http://dbpedia.org/property/predecessor", "label": "predecessor"}, {"uri": "http://dbpedia.org/ontology/Engine", "label": "engine"}], "id": "298ec5bdf98b4eaead3626a3d1fd8456"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/debutTeam> <http://dbpedia.org/resource/San_Francisco_49ers>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "SerialNumber": "2047", "question": "How many players debuted their careers from San Francisco 49ers?", "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Francisco_49ers", "label": "San Francisco 49ers"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/debutTeam", "label": "debuted"}, {"uri": "http://dbpedia.org/ontology/Athlete", "label": "careers"}], "id": "5809473753f34eeab40d9ef6574a79a6"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)> <http://dbpedia.org/property/lyrics> <http://dbpedia.org/resource/Bob_Dylan> }", "SerialNumber": "2050", "question": "Did Bob Dylan write the lyrics of the times they are a changin'?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)", "label": "changin' times they"}, {"uri": "http://dbpedia.org/resource/Bob_Dylan", "label": "Bob Dylan"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/lyrics", "label": "lyrics"}], "id": "e8cf794706634a76b62c2aaf12adf298"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gabriel_Par\u00eds_Gordillo> <http://dbpedia.org/property/allegiance> ?uri. <http://dbpedia.org/resource/Gustavo_Rojas_Pinilla> <http://dbpedia.org/property/allegiance> ?uri . }", "SerialNumber": "2051", "question": "To which country do gabriel paris gordillo and gustavo rojas pinilla owe their allegiance?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gabriel_Par\u00eds_Gordillo", "label": "gordillo gabriel"}, {"uri": "http://dbpedia.org/resource/Gustavo_Rojas_Pinilla", "label": "gustavo rojas pinilla"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/allegiance", "label": "allegiance"}, {"uri": "http://dbpedia.org/property/allegiance", "label": "allegiance"}], "id": "3fa147b6f8f440749b08abb421bf2035"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Owen_Dougherty> <http://dbpedia.org/property/placeOfDeath> ?x . ?x <http://dbpedia.org/ontology/founder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}", "SerialNumber": "2055", "question": "Who is the co-founder of the city where Owen Dougherty died?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Owen_Dougherty", "label": "Owen Dougherty"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfDeath", "label": "died"}, {"uri": "http://dbpedia.org/ontology/founder", "label": "founder of"}, {"uri": "http://dbpedia.org/ontology/City", "label": "city"}], "id": "1e48900f6c1847c7832e07b1e02cb22c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/training> <http://dbpedia.org/resource/Academy_of_Fine_Arts_In_\u0141\u00f3d\u017a> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "SerialNumber": "2060", "question": "What awards have the alumni of Academy of Fine Arts in Lodz achieved?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Academy_of_Fine_Arts_In_\u0141\u00f3d\u017a", "label": "academy"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/training", "label": "achieved"}, {"uri": "http://dbpedia.org/ontology/award", "label": "awards"}], "id": "70c8d9f0e7c64d31b9e09f06e888d0ed"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Big_Ticket_Entertainment> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "2061", "question": "How many TV shows are of the company which are of company which is a subsidiary of Big  Ticket Entertainment ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Big_Ticket_Entertainment", "label": "entertainment ticket"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/subsidiary", "label": "subsidiary"}, {"uri": "http://dbpedia.org/property/company", "label": "company"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "0ca6c27bc7d045a09658ba31af63d7d0"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/Open_Society_Foundations> . ?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Susan_Weber_Soros>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2066", "question": "Name a person who works in Open Society Foundation and has wife named Susan Weber Soros ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Open_Society_Foundations", "label": "Open Society Foundation "}, {"uri": "http://dbpedia.org/resource/Susan_Weber_Soros", "label": "Susan Weber Soros"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/employer", "label": "named"}, {"uri": "http://dbpedia.org/property/spouse", "label": "wife"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "person"}], "id": "996ec9ddd3fb4c8ea7715aea366c4f9d"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/ontology/athletics> ?uri. <http://dbpedia.org/resource/Fritz_Chess> <http://dbpedia.org/ontology/genre> ?uri} ", "SerialNumber": "2069", "question": "Which athletics of Jaimatu Muslim Mindano is same as the genre of the Fritz Chess ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao", "label": "Jaimatu Muslim Mindano"}, {"uri": "http://dbpedia.org/resource/Fritz_Chess", "label": "Fritz Chess"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/athletics", "label": "athletics"}, {"uri": "http://dbpedia.org/ontology/genre", "label": "genre"}], "id": "c44ba26fe4574a649b78f1dc00246dfd"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Park_Chung-hee>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "2072", "question": "In what battles did president Park Chung-hee participate?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Park_Chung-hee", "label": "Park Chung-hee"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/commander", "label": "participate"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "participate"}], "id": "b381525459274ec79b5b9168839aa7b4"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Stephanie> <http://dbpedia.org/property/gender> <http://dbpedia.org/resource/Female> }", "SerialNumber": "2073", "question": "Is stephanie a female?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Stephanie", "label": "stephanie"}, {"uri": "http://dbpedia.org/resource/Female", "label": "female"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/gender", "label": "female"}], "id": "2c54bb98872f4466b6a36426db7f553d"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/party> <http://dbpedia.org/resource/Bharatiya_Janata_Party> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "2076", "question": "Count the number of religions followed by BJP members.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bharatiya_Janata_Party", "label": "BJP"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/party", "label": "number"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}], "id": "ac1933135e72469c8eb4faa146c394db"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/club> <http://dbpedia.org/resource/Middlesbrough_F.C.> . ?x <http://dbpedia.org/ontology/manager> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2077", "question": "How many people have been the head coach for Middlesbrough FC?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Middlesbrough_F.C.", "label": "Middlesbrough FC"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/club", "label": "head"}, {"uri": "http://dbpedia.org/ontology/manager", "label": "coach"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "head"}], "id": "0b31ffed88a540dc80c450e15236a114"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Lanao_del_Sur> . ?x <http://dbpedia.org/ontology/athletics> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "SerialNumber": "2079", "question": "What games are played at universities in Lanao Del Sur?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lanao_del_Sur", "label": "Lanao Del Sur"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/state", "label": "in"}, {"uri": "http://dbpedia.org/ontology/athletics", "label": "played"}, {"uri": "http://dbpedia.org/ontology/University", "label": "universities"}], "id": "f8733a59b674426dac53692d6ac50bb0"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Vangelis> . ?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "2086", "question": "Name the movie in which Vangelis gave the music and Jordan was the cinematographer ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Vangelis", "label": "Vangelis"}, {"uri": "http://dbpedia.org/resource/Jordan_Cronenweth", "label": "jordan"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/music", "label": "music"}, {"uri": "http://dbpedia.org/ontology/cinematography", "label": "cinematographer"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "190465152dd44639aab83ac6b0e1d0fa"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society>  . }", "SerialNumber": "2088", "question": "How many people won the Gold Medal of the Royal Astronomical Society?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society", "label": "Gold Medal of the Royal Astronomical Society"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/prizes", "label": "won"}], "id": "a6904e9b6e164493af1fde284d08f558"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alpine_Brigade_Taurinense> <http://dbpedia.org/ontology/battle> ?uri } ", "SerialNumber": "2090", "question": "With whom were the engagements of Alpine Brigade Taurinense?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Alpine_Brigade_Taurinense", "label": "Alpine Brigade Taurinense"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/battle", "label": "engagements"}], "id": "6289a18178e44e02b341c0614bad4c81"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}", "SerialNumber": "2092", "question": "In how many different places have US people died?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": "US"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBirth", "label": "places"}, {"uri": "http://dbpedia.org/ontology/deathPlace", "label": "places"}, {"uri": "http://dbpedia.org/ontology/Location", "label": "places"}], "id": "a4572121e3a84ab491141bad9959a94e"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Terry_Pratchett> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . }", "SerialNumber": "2096", "question": "Terry Pratchett has written about how many topics?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Terry_Pratchett", "label": "Terry Pratchett"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/author", "label": "topics"}, {"uri": "http://dbpedia.org/ontology/nonFictionSubject", "label": "Terry Pratchett"}], "id": "f38d40e812a24ed08486f86b89c75ca7"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Ferguson> <http://dbpedia.org/property/primeminister> ?uri. <http://dbpedia.org/resource/Mike_Kelly_(Australian_politician)> <http://dbpedia.org/property/primeminister> ?uri . }", "SerialNumber": "2099", "question": "Martin Ferguson and Mike Kelly served under which aussie PM?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Martin_Ferguson", "label": "Martin Ferguson"}, {"uri": "http://dbpedia.org/resource/Mike_Kelly_(Australian_politician)", "label": "Mike Kelly"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/primeminister", "label": "PM"}, {"uri": "http://dbpedia.org/property/primeminister", "label": "PM"}], "id": "2453d5655cc8407182387fe5d0514477"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/place> <http://dbpedia.org/resource/Mississippi_River> . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "2101", "question": "Who has fought in the conflicts around the Mississippi river?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mississippi_River", "label": "Mississippi river"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/place", "label": "Mississippi river"}, {"uri": "http://dbpedia.org/property/combatant", "label": "fought"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "conflicts"}], "id": "e0ad5d9267d544bea41199ce7045fc36"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/\u014ctani_University> <http://dbpedia.org/property/affiliation> ?uri. <http://dbpedia.org/resource/Udit_Raj> <http://dbpedia.org/ontology/religion> ?uri} ", "SerialNumber": "2102", "question": "List the relegion of tani University which is also the life stance of udit Raj ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/\u014ctani_University", "label": "university tani"}, {"uri": "http://dbpedia.org/resource/Udit_Raj", "label": "udit Raj"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/affiliation", "label": "University"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "life stance"}], "id": "95ad975ecd3f4f8a96cdc1d5ad089e0a"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/San_Marcos_River> <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Texas> }", "SerialNumber": "2103", "question": "Does the San Macros River start in Texas?", "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Marcos_River", "label": "river"}, {"uri": "http://dbpedia.org/resource/Texas", "label": "Texas"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourceMountain", "label": "start"}], "id": "33560cb70a394c659afde50ea4d2fa43"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/Quartermaster_Corps_(United_States_Army)> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }", "SerialNumber": "2104", "question": "Which university's graduates have worked in the Quartermaster corps?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Quartermaster_Corps_(United_States_Army)", "label": "Quartermaster corps"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/militaryUnit", "label": "worked"}, {"uri": "http://dbpedia.org/ontology/almaMater", "label": "graduates"}], "id": "a6a548a2d1ac484d8b94cd09ecf53768"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/David_Prowse_(politician)> <http://dbpedia.org/property/branch> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }", "SerialNumber": "2105", "question": "What is the mascot of the military unit of David Prowse?", "entity mapping": [{"uri": "http://dbpedia.org/resource/David_Prowse_(politician)", "label": "David Prowse"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/branch", "label": "unit"}, {"uri": "http://dbpedia.org/property/mascot", "label": "mascot"}], "id": "b19ab8c472b24e6b8dd6a089d1b46d61"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Teddy_Riley> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)> <http://dbpedia.org/ontology/musicalBand> ?uri} ", "SerialNumber": "2106", "question": "Which music band made Take Me There, and to which Tedd Riley was associated?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Teddy_Riley", "label": "riley tedd"}, {"uri": "http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)", "label": "Take Me There"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/associatedBand", "label": "associated"}, {"uri": "http://dbpedia.org/ontology/musicalBand", "label": "music band"}], "id": "551b48df0734464987251916a5e96362"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/trainer> <http://dbpedia.org/resource/Mouse_Morris> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}", "SerialNumber": "2107", "question": "Mouse Morris' horses have raced in which races?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mouse_Morris", "label": "Mouse Morris"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/trainer"}, {"uri": "http://dbpedia.org/property/race", "label": "race"}, {"uri": "http://dbpedia.org/ontology/Horse", "label": "horse"}], "id": "2e6a230473e948a29d59e965ed724a74"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/birthName> <http://dbpedia.org/resource/Kabir_Suman> . ?x <http://dbpedia.org/property/religion> ?uri  . }", "SerialNumber": "2110", "question": "What religion is Kabir Suman from?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kabir_Suman", "label": "Kabir Suman"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/birthName"}, {"uri": "http://dbpedia.org/property/religion", "label": "religion"}], "id": "a47123efd7d64ca9aa928cfb92693d4d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Big_Top_Ballet> <http://dbpedia.org/property/distributor> ?uri. <http://dbpedia.org/resource/Front_Row_(software)> <http://dbpedia.org/property/developer> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "2112", "question": "What company made the front row and distributed big top ballet?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Big_Top_Ballet", "label": "big top ballet"}, {"uri": "http://dbpedia.org/resource/Front_Row_(software)", "label": "front row"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/distributor", "label": "distributed"}, {"uri": "http://dbpedia.org/property/developer", "label": "made"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "7e818c143d0646119c7a6274c4471970"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Harris_County,_Texas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "2114", "question": "Which company is located in Harris County, Texas?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Harris_County,_Texas", "label": "Harris County, Texas"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locationCity", "label": "located"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "7ba27bb9e46648a595380f3277ca4f2f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Email_filtering> . ?x <http://dbpedia.org/property/almaMater> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "SerialNumber": "2115", "question": "Name the alma mater of the scientist famous for Email filtering ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Email_filtering", "label": "Email filtering"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/knownFor", "label": "famous"}, {"uri": "http://dbpedia.org/property/almaMater", "label": "alma mater"}, {"uri": "http://dbpedia.org/ontology/Scientist", "label": "scientist"}], "id": "c588fe59d877476892d39589f6172632"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1967_Mexican_Grand_Prix> <http://dbpedia.org/property/firstTeam> ?uri. <http://dbpedia.org/resource/Dagenham_wind_turbines> <http://dbpedia.org/property/owner> ?uri} ", "SerialNumber": "2117", "question": "Name the team which is owned by Dafenham wind turbines and stood first in 1967 mexican Grand Prix ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/1967_Mexican_Grand_Prix", "label": "1967 mexican Grand Prix"}, {"uri": "http://dbpedia.org/resource/Dagenham_wind_turbines", "label": "turbines"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/firstTeam", "label": "first team"}, {"uri": "http://dbpedia.org/property/owner", "label": "is owned by"}], "id": "b01d261027ab4a75ad6a18e3a4808236"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Criteria_Studios> . ?x <http://dbpedia.org/property/writer> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "SerialNumber": "2118", "question": "Tell me the number of writers whose works have been recorded in Criteria Studios?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Criteria_Studios", "label": "Criteria Studios"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/recordedIn", "label": "recorded in"}, {"uri": "http://dbpedia.org/property/writer", "label": "writers"}, {"uri": "http://dbpedia.org/ontology/Artist", "label": "works"}], "id": "c885120c181e4448adfcbe1da45585fb"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Kingdom_of_Naples> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2120", "question": "List all crafts of the people whose one of the profession is Kingdom of Naples ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kingdom_of_Naples", "label": "Kingdom of Naples"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/occupation", "label": "profession"}, {"uri": "http://dbpedia.org/ontology/occupation", "label": "profession"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "f3576d71ce1f48a6b87e8fb5a3713b6e"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Neil_Armstrong> <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> }", "SerialNumber": "2122", "question": "Was Apollo 11 a mission of Niel Armstrong?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Neil_Armstrong", "label": "armstrong"}, {"uri": "http://dbpedia.org/resource/Apollo_11", "label": "Apollo 11"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mission", "label": "mission"}], "id": "d3f64fbb4efc4bf583de0d8ffe4be68d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Hammond_organ> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "2123", "question": "What are the movies whose music composer uses a Hammond organ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Hammond_organ", "label": "Hammond organ"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/instrument"}, {"uri": "http://dbpedia.org/ontology/musicComposer", "label": "music composer"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "093e9fad547341e2a4784bd946f8d8cf"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)> <http://dbpedia.org/property/religiousAffiliation> ?uri. <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> ?uri . }", "SerialNumber": "2126", "question": "What religion do the Wickramabahu Centeral College and Neungin High School both follow?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)", "label": "wickramabahu college"}, {"uri": "http://dbpedia.org/resource/Neungin_High_School", "label": "Neungin High School"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/religiousAffiliation", "label": "religion"}, {"uri": "http://dbpedia.org/property/religiousAffiliation", "label": "religion"}], "id": "f2e6e08d863b45a0b2fde08ff71c4d93"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "2127", "question": "How many television shows are broadcasted on Fox Broadcasting Company?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company", "label": "Fox Broadcasting Company"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/channel", "label": "broadcasted"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "television show"}], "id": "900f0ac67c2d4655b104b6664838d60c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Darth_Vader> . ?uri <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Padm\u00e9_Amidala> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "SerialNumber": "2128", "question": "What is the fictional character which belongs to families of Darth Vader and Padm Amidala?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Darth_Vader", "label": "Darth Vader"}, {"uri": "http://dbpedia.org/resource/Padm\u00e9_Amidala", "label": "amidala padm"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/family", "label": "families"}, {"uri": "http://dbpedia.org/property/family", "label": "families"}, {"uri": "http://dbpedia.org/ontology/FictionalCharacter", "label": "fictional character"}], "id": "3fd0705b3a18418ca9748691d9ad8be4"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name> <http://dbpedia.org/ontology/album> ?uri } ", "SerialNumber": "2129", "question": "Where Everybody knows you is the theme album of which show ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name", "label": "everybody where knows"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/album", "label": "album"}], "id": "cff31d6e2dee48de9fc46d0ecb40ced5"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ronaldinho> <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Brazil_national_under-23_football_team> }", "SerialNumber": "2130", "question": "Does Ronaldinho play in the brazil's under 23 team?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ronaldinho", "label": "Ronaldinho"}, {"uri": "http://dbpedia.org/resource/Brazil_national_under-23_football_team", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/nationalteam", "label": "team"}], "id": "2d605f84b9af4256b26d59a784cee86e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Zambia> . ?x <http://dbpedia.org/ontology/river> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Dam>}", "SerialNumber": "2131", "question": "What are some rivers in Zambia which have a dam on them?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Zambia", "label": "Zambia"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/country"}, {"uri": "http://dbpedia.org/ontology/river", "label": "river"}, {"uri": "http://dbpedia.org/ontology/Dam", "label": "dam"}], "id": "c37f438af3ac4daf95e2ddf9341f360d"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/U.S._Route_165> . ?x <http://dbpedia.org/property/office> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2132", "question": "Which office's people have died on the US Route 165?", "entity mapping": [{"uri": "http://dbpedia.org/resource/U.S._Route_165", "label": "route 165"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/deathPlace", "label": "Route"}, {"uri": "http://dbpedia.org/property/office", "label": "office"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "Route"}], "id": "4e26840031c64a15a7abe3e1330a50b7"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Murray_Gold> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "2133", "question": "Name some shows similar to the one whose theme song is made by Murray Gold.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Murray_Gold", "label": "Murray Gold"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/themeMusicComposer", "label": "theme"}, {"uri": "http://dbpedia.org/ontology/related", "label": "made"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "eea52cce6ad445d8a6611b1b4d4538e7"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/municipality> <http://dbpedia.org/resource/Crook_County,_Oregon> . ?x <http://dbpedia.org/ontology/border> ?uri  . }", "SerialNumber": "2137", "question": "What is on the border of the places which fall under crook county municipality, oregon?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Crook_County,_Oregon", "label": "oregon county crook"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/municipality", "label": "municipality"}, {"uri": "http://dbpedia.org/ontology/border", "label": "border"}], "id": "a71853071a1b40a59c6ce4714b1ef5ee"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Gold_Base> . ?uri <http://dbpedia.org/ontology/religion> ?x  . }", "SerialNumber": "2139", "question": "Who are some people whose relation is hqed in Gold Base?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gold_Base", "label": "Gold Base"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/headquarters", "label": "hq"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "ed"}], "id": "44960e14ef46436fbcc7c4d75318662a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_Mexico> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "2141", "question": "Which New Mexico company provides One Drive as a service ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/New_Mexico", "label": "New Mexico"}, {"uri": "http://dbpedia.org/resource/OneDrive", "label": "One Drive"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/foundation"}, {"uri": "http://dbpedia.org/property/services", "label": "service"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "f08ad0e14fc34ee599e3747215483fca"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Malaysian_Public_Works_Department> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "SerialNumber": "2143", "question": "Who operates the bridges designed by Malaysian PWD?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Malaysian_Public_Works_Department", "label": "Malaysian"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/designer", "label": "designed"}, {"uri": "http://dbpedia.org/ontology/maintainedBy", "label": "PWD"}, {"uri": "http://dbpedia.org/ontology/Bridge", "label": "bridge"}], "id": "8cc77d4272db4da5a60221753631cf13"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Geography_Club_(play)> <http://dbpedia.org/property/place> ?uri. <http://dbpedia.org/resource/The_Kentucky_Cycle> <http://dbpedia.org/property/place> ?uri . }", "SerialNumber": "2145", "question": "Among which city where Geography Club played also had the Kenticky Cycle ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Geography_Club_(play)", "label": "Geography Club"}, {"uri": "http://dbpedia.org/resource/The_Kentucky_Cycle", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/place"}, {"uri": "http://dbpedia.org/property/place"}], "id": "8365e95b808d440cac8c8e713017ab1c"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/property/animator> ?uri. <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?uri} ", "SerialNumber": "2146", "question": "Who was the animator of both Tommy Tucker's Tooth and Skeleton Dance?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth", "label": "Tommy Tucker's Tooth"}, {"uri": "http://dbpedia.org/resource/The_Skeleton_Dance", "label": "skeleton dance the"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/animator", "label": "animator"}, {"uri": "http://dbpedia.org/ontology/animator", "label": "animator"}], "id": "13b47c5d160c4d96ad28e6814def4b42"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Foundation_for_Economic_Education> <http://dbpedia.org/ontology/keyPerson> ?x . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>}", "SerialNumber": "2148", "question": "What is the nationality of the economist who is one of the important people in the Foundation for Economic Education?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Foundation_for_Economic_Education", "label": "Foundation for Economic Education"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/keyPerson", "label": "people"}, {"uri": "http://dbpedia.org/ontology/nationality", "label": "nationality"}, {"uri": "http://dbpedia.org/ontology/Economist", "label": "economist"}], "id": "1f97981f73884227b98d2e193e4793c4"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Pittsburg,_New_Hampshire> . ?uri <http://dbpedia.org/ontology/source> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "2149", "question": "Name the rivers which originate from within Pittsburg?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pittsburg,_New_Hampshire", "label": "Pittsburg"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/cities", "label": "originate"}, {"uri": "http://dbpedia.org/ontology/source", "label": "originate"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "60918268c9dc4bc9a944056cf08df4b5"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Gymnastics_at_the_1956_Summer_Olympics_\u2013_Men's_rings> <http://dbpedia.org/ontology/silverMedalist> ?x . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }", "SerialNumber": "2150", "question": "What is the place of death of the gymnast who was the silver medalist at the 1956 Summer Olympics Men's rings ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gymnastics_at_the_1956_Summer_Olympics_\u2013_Men's_rings", "label": "olympics gymnast summer rings men's"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/silverMedalist", "label": "medalist silver"}, {"uri": "http://dbpedia.org/property/placeOfDeath", "label": "place of death"}], "id": "151f565ef0bc4267b5db57b098e82284"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/series> <http://dbpedia.org/resource/Absolutely_Fabulous> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "SerialNumber": "2151", "question": "What religion are the characters of Absolutely Fabulous from?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Absolutely_Fabulous", "label": "Absolutely Fabulous"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/series"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}, {"uri": "http://dbpedia.org/ontology/FictionalCharacter", "label": "characters"}], "id": "8b983e3a0771427fa876d31b4806a6a2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Krapanski_Potok> . ?x <http://dbpedia.org/ontology/source> ?uri  . }", "SerialNumber": "2152", "question": "Where does the river begin whose left tributary is Krapanski Potok?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Krapanski_Potok", "label": "Krapanski Potok"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/leftTributary", "label": "left tributary"}, {"uri": "http://dbpedia.org/ontology/source", "label": "begin"}], "id": "079c81f8aa684b9c90a281e08a9c84d5"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/La_Liga> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}", "SerialNumber": "2153", "question": "Name all the soccer players who played in a under 18 club for La Liga?", "entity mapping": [{"uri": "http://dbpedia.org/resource/La_Liga", "label": "La Liga"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/league", "label": "played"}, {"uri": "http://dbpedia.org/property/youthclubs", "label": "club"}, {"uri": "http://dbpedia.org/ontology/SoccerPlayer", "label": "soccer player"}], "id": "fe429424b0b34adda047a3ba868f0489"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Middlesbrough_F.C.> . ?x <http://dbpedia.org/ontology/manager> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2154", "question": "How many people have coached the players of Middlesbrough FC?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Middlesbrough_F.C.", "label": "Middlesbrough FC"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/team", "label": "players"}, {"uri": "http://dbpedia.org/ontology/manager", "label": "coach"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "players"}], "id": "53e44c387e97481c93a92afe3bf4dd57"}, {"sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Data_center_services> . ?x <http://dbpedia.org/property/services> ?uri }", "SerialNumber": "2158", "question": "Give me a count of the services by the company which provides Data center as the services ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Data_center_services", "label": "services center"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/services", "label": "services"}, {"uri": "http://dbpedia.org/property/services", "label": "services"}], "id": "1f6748d64d834a7f9f8a849a841bb8fb"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Scientology>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2161", "question": "List the people with Scientology as their religious belief?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Scientology", "label": "Scientology"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/religion", "label": "religious"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "belief"}], "id": "6d69d75249944430948e09c0741a01b2"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/NBC> . ?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Glen_and_Les_Charles>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "2163", "question": "Which program was on NBC network with executive producer as Glen and Les Charles?", "entity mapping": [{"uri": "http://dbpedia.org/resource/NBC", "label": "NBC"}, {"uri": "http://dbpedia.org/resource/Glen_and_Les_Charles", "label": "Glen and Les Charles"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/network", "label": "network"}, {"uri": "http://dbpedia.org/ontology/executiveProducer", "label": "executive producer"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "program"}], "id": "978a09e0cd01477cb3b794cae035132a"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Buddha_and_His_Dhamma> <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Buddhism> }", "SerialNumber": "2166", "question": "Is the book The Buddha and his Dhamma a book about Buddhism?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Buddha_and_His_Dhamma", "label": "The Buddha and his Dhamma"}, {"uri": "http://dbpedia.org/resource/Buddhism", "label": "Buddhism"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/literaryGenre", "label": "book"}], "id": "f45f71305db04f20a4880e91502a2d7e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Tom_McLaury> . ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Ike_Clanton> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2168", "question": "Who is the person opposed  by Tom McLaury and Ike Clanton?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tom_McLaury", "label": "Tom McLaury"}, {"uri": "http://dbpedia.org/resource/Ike_Clanton", "label": "Ike Clanton"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/opponent", "label": "opposed"}, {"uri": "http://dbpedia.org/ontology/opponent", "label": "opposed"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "person"}], "id": "3814808bac334e5f8d76f56a99bf5403"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Cross-platform> . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "SerialNumber": "2169", "question": "Who all have developed a cross platform software?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cross-platform", "label": "platform cross"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/operatingSystem", "label": "platform"}, {"uri": "http://dbpedia.org/ontology/developer", "label": "developed"}, {"uri": "http://dbpedia.org/ontology/Software", "label": "software"}], "id": "7fe6c4ee43cd4a048ae22cb336c1e62a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/education> <http://dbpedia.org/resource/Great_Ayton>  . }", "SerialNumber": "2170", "question": "Who attended Great Ayton university?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Great_Ayton", "label": "Great Ayton"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/education", "label": "university"}], "id": "e60e13c61f15439ab1d8ee9a7d9e3956"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/St._Peter's_Basilica> . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Pope>}", "SerialNumber": "2179", "question": "The pope whose shrine is in St Peter's Basilica was venerated in which sects?", "entity mapping": [{"uri": "http://dbpedia.org/resource/St._Peter's_Basilica", "label": "basilica peter's"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/majorShrine", "label": "shrine"}, {"uri": "http://dbpedia.org/property/veneratedIn", "label": "venerated in"}, {"uri": "http://dbpedia.org/ontology/Pope", "label": "pope"}], "id": "04c55a217eca42488ea5a3fadb654924"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/nominee> ?uri. <http://dbpedia.org/resource/Robert_Sarvis> <http://dbpedia.org/ontology/nominee> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "SerialNumber": "2181", "question": "For a position in which institution were both Jack Ryan and Robert sarvis both appointed?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)", "label": "Jack Ryan"}, {"uri": "http://dbpedia.org/resource/Robert_Sarvis", "label": "Robert sarvis"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/nominee", "label": "appointed"}, {"uri": "http://dbpedia.org/ontology/nominee", "label": "appointed"}, {"uri": "http://dbpedia.org/ontology/Organisation"}], "id": "7bfbc6d46c534d2bb0f4d755d9dc591b"}, {"sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Afghanistan> . ?x <http://dbpedia.org/ontology/battle> ?uri }", "SerialNumber": "2183", "question": "Count the total number of conflicts people who were part of conflict in afghanisthan ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Afghanistan", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/battle", "label": "conflict"}, {"uri": "http://dbpedia.org/ontology/battle", "label": "conflict"}], "id": "5de5a571a8944ee88bd9e7605b13f4da"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Kenthurst,_New_South_Wales>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TennisPlayer>}", "SerialNumber": "2184", "question": "Which tennis players live in Kenthurst, new south wales?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kenthurst,_New_South_Wales", "label": "Kenthurst"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/residence", "label": "wales"}, {"uri": "http://dbpedia.org/ontology/TennisPlayer", "label": "tennis player"}], "id": "cc4ae85ad1744fa583816c7460e19d3b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mall_of_America> <http://dbpedia.org/property/owned> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . }", "SerialNumber": "2188", "question": "Where is the head quarters of the parent company of Mall of America located?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mall_of_America", "label": "Mall of America"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/owned", "label": "located"}, {"uri": "http://dbpedia.org/property/headquarters", "label": "head quarters"}], "id": "13d8d20650a94f7cbef49822770fa47f"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sino-French_War> <http://dbpedia.org/ontology/territory> ?uri } ", "SerialNumber": "2189", "question": "Where was Sino-French War fought ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sino-French_War", "label": "Sino-French War"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/territory", "label": "fought"}], "id": "de5d715dbba14433bd2751418749b376"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/PyChess> <http://dbpedia.org/property/genre> ?uri} ", "SerialNumber": "2195", "question": "What genre isPyChess from, which employes Craig Van Tilbury?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Craig_Van_Tilbury", "label": "Craig Van Tilbury"}, {"uri": "http://dbpedia.org/resource/PyChess", "label": "PyChess"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/occupation", "label": "employes"}, {"uri": "http://dbpedia.org/property/genre", "label": "genre"}], "id": "a99633a7312140699f6da5ec60b3545a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/broadcastNetwork> <http://dbpedia.org/resource/SCOLA_(TV_service)> . ?x <http://dbpedia.org/property/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}", "SerialNumber": "2197", "question": "In which cities are there stations of SCOLA?", "entity mapping": [{"uri": "http://dbpedia.org/resource/SCOLA_(TV_service)", "label": "SCOLA"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/broadcastNetwork", "label": "cities"}, {"uri": "http://dbpedia.org/property/city", "label": "In"}, {"uri": "http://dbpedia.org/ontology/TelevisionStation", "label": "stations"}], "id": "8a63017795e246a49a5be13cbb278cc2"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/origin> <http://dbpedia.org/resource/Texarkana,_Texas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "SerialNumber": "2200", "question": "What are some bands out to texarkana?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Texarkana,_Texas", "label": "texarkana"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/origin"}, {"uri": "http://dbpedia.org/ontology/Band", "label": "band"}], "id": "2adb8b5dae3e4e8ea92922a707e6341e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Petersen_House>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2201", "question": "What famous politician died in the Petersen House?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Petersen_House", "label": "Petersen House"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/deathPlace", "label": "died in"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "politician"}], "id": "61066d63cf6b4c3d9e4dfdec5c6a430c"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer> <http://dbpedia.org/ontology/coverArtist> ?uri. <http://dbpedia.org/resource/The_Apple_Tree> <http://dbpedia.org/ontology/basedOn> ?uri} ", "SerialNumber": "2202", "question": "Which cover artist of the The Adventures of Tom Sawyer also the source of inspiration of The Appple Tree ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer", "label": "The Adventures of Tom Sawyer"}, {"uri": "http://dbpedia.org/resource/The_Apple_Tree", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/coverArtist", "label": "cover artist"}, {"uri": "http://dbpedia.org/ontology/basedOn", "label": "Tree"}], "id": "ac76f62cf58949f59c0a4e39a351a377"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Bryn_Mawr_Hospital> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }", "SerialNumber": "2204", "question": "Where was the person born who died in Bryn Mawr Hospital?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bryn_Mawr_Hospital", "label": "Bryn Mawr Hospital"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfDeath"}, {"uri": "http://dbpedia.org/property/placeOfBirth"}], "id": "2b12d0b229e446478c13760e9b57a5ea"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sino-French_War> <http://dbpedia.org/ontology/territory> ?uri. <http://dbpedia.org/resource/Tonkin_Campaign> <http://dbpedia.org/ontology/territory> ?uri . }", "SerialNumber": "2207", "question": "In which common territory did Sino French war and the Tonkin campaign take place?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sino-French_War", "label": "french sino war"}, {"uri": "http://dbpedia.org/resource/Tonkin_Campaign", "label": "Tonkin campaign"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/territory", "label": "territory"}, {"uri": "http://dbpedia.org/ontology/territory", "label": "territory"}], "id": "0ef7dd290adb47cc9515959eaf8bd328"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Glover_(video_game)> <http://dbpedia.org/ontology/distributor> ?uri. <http://dbpedia.org/resource/Seattle_Mariners> <http://dbpedia.org/ontology/owner> ?uri} ", "SerialNumber": "2208", "question": "Which distributer of Glover is also the stockholde of Seattle Mariners ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Glover_(video_game)", "label": "Glover"}, {"uri": "http://dbpedia.org/resource/Seattle_Mariners", "label": "Seattle Mariners"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/distributor", "label": "distributer"}, {"uri": "http://dbpedia.org/ontology/owner", "label": "distributer"}], "id": "098a7f4275924007b358ee48cefc7b23"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }", "SerialNumber": "2210", "question": "What are some important works of US citizens?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": "US"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/nationality", "label": "citizens"}, {"uri": "http://dbpedia.org/ontology/notableWork", "label": "works"}], "id": "c0f69ac1ab584bbaaca5272c9dd4aa74"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Paul_Dini>  . }", "SerialNumber": "2211", "question": "How many characters were made by Paul Dini?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Dini", "label": "Paul Dini"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/creators", "label": "made"}], "id": "444b6f68ae4145c1a8e151fe606ade0a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Ananda_Weerasekara> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "2213", "question": "What is the religion of the relatives of Ananda Weerasekara?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ananda_Weerasekara", "label": "Ananda Weerasekara"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relation", "label": "relatives"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}], "id": "c1d9817b260a4d0ead5c03372c35d776"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mainIngredient> <http://dbpedia.org/resource/Ham> . ?x <http://dbpedia.org/property/country> ?uri  . }", "SerialNumber": "2215", "question": "In which country's cuisine, ham is an important part?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ham", "label": "ham"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mainIngredient", "label": "part"}, {"uri": "http://dbpedia.org/property/country", "label": "country"}], "id": "ec8b9535d59d4655b5ff3f5a185c99cc"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maharashtra_Chess_Association> <http://dbpedia.org/property/purpose> ?uri. <http://dbpedia.org/resource/PyChess> <http://dbpedia.org/ontology/genre> ?uri} ", "SerialNumber": "2216", "question": "What is the purpose of the Maharashtra Chess Association which is genere of PyChess?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Maharashtra_Chess_Association", "label": "Maharashtra Chess Association"}, {"uri": "http://dbpedia.org/resource/PyChess", "label": "PyChess"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/purpose", "label": "purpose"}, {"uri": "http://dbpedia.org/ontology/genre"}], "id": "b34ea6d0eb0e4dc9878f34a21bde3842"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Lung_cancer> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2219", "question": "What medals have been given to people who died of lung cancer?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lung_cancer", "label": "lung cancer"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/deathCause", "label": "died"}, {"uri": "http://dbpedia.org/ontology/award", "label": "medals"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "died"}], "id": "2d27c6297df54cbd99d354a61045dba8"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/AeroKlub_Wroc\u0142aw> . ?x <http://dbpedia.org/property/nationality> ?uri  . }", "SerialNumber": "2222", "question": "Which country's engineered have studied at Aero Klub in Wroclaw?", "entity mapping": [{"uri": "http://dbpedia.org/resource/AeroKlub_Wroc\u0142aw", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/institution", "label": "Wroclaw"}, {"uri": "http://dbpedia.org/property/nationality", "label": "country's"}], "id": "d2da7d56a898475493bd3e92b6d60c91"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/England>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage>}", "SerialNumber": "2224", "question": "Count the drinks originated in England.", "entity mapping": [{"uri": "http://dbpedia.org/resource/England", "label": "England"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/origin", "label": "origin"}, {"uri": "http://dbpedia.org/ontology/Beverage", "label": "ated"}], "id": "665c48a565514b8d9451667f8ac5d5cb"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edwin_Adams_(politician)> <http://dbpedia.org/property/placeOfDeath> ?uri. <http://dbpedia.org/resource/William_A._Purtell> <http://dbpedia.org/ontology/birthPlace> ?uri . }", "SerialNumber": "2225", "question": "What place did Edwin Adams die at, which gave birth to William A Purtell?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Edwin_Adams_(politician)", "label": "Edwin Adams"}, {"uri": "http://dbpedia.org/resource/William_A._Purtell", "label": "william purtell"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfDeath", "label": "place"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "place birth"}], "id": "c44978af32a3433daf71471ea770529b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/training> <http://dbpedia.org/resource/National_Film_School_in_\u0141\u00f3d\u017a> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "SerialNumber": "2228", "question": "Trainees at the national film school of Lodz have received what awards?", "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Film_School_in_\u0141\u00f3d\u017a", "label": "national film school"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/training", "label": "received"}, {"uri": "http://dbpedia.org/ontology/award", "label": "awards"}], "id": "1074b9904318467e873e1d05472c6ace"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Providence_Chapel,_Charlwood> <http://dbpedia.org/property/style> <http://dbpedia.org/resource/New_England> }", "SerialNumber": "2229", "question": "Is the Providence Chapel, Charlwood made in New English style of architecture?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Providence_Chapel,_Charlwood", "label": "Providence Chapel, Charlwood"}, {"uri": "http://dbpedia.org/resource/New_England", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/style", "label": "style"}], "id": "c53debb465374190985a381113d5e2e1"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)> <http://dbpedia.org/ontology/draftTeam> ?uri. <http://dbpedia.org/resource/Doug_Acomb> <http://dbpedia.org/property/playedFor> ?uri} ", "SerialNumber": "2230", "question": "Which tema did Dough Acomb played for which is also the drafty team of Dale Mitchell ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)", "label": "Dale Mitchell"}, {"uri": "http://dbpedia.org/resource/Doug_Acomb", "label": "acomb"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/draftTeam", "label": "team"}, {"uri": "http://dbpedia.org/property/playedFor", "label": "played for"}], "id": "a0e3214b00d7484d9630cf4983167626"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia> } ", "SerialNumber": "2231", "question": "What is the river whose origin is North-Western Province, Zambia?", "entity mapping": [{"uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia", "label": "North-Western Province, Zambia"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourceRegion", "label": "origin"}], "id": "0ecf1c79d31641a3b107442ce8b8399b"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mount_Everest> <http://dbpedia.org/ontology/firstAscentPerson> <http://dbpedia.org/resource/Tenzing_Norgay> }", "SerialNumber": "2232", "question": "Is Tenzing Norgay  the first person to scale Mt. Everest?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mount_Everest", "label": "everest"}, {"uri": "http://dbpedia.org/resource/Tenzing_Norgay", "label": "Tenzing Norgay"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/firstAscentPerson", "label": "person first"}], "id": "3271ac84219e4f5995da87af671eaab7"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/James_K._Kelly> <http://dbpedia.org/property/state> ?uri. <http://dbpedia.org/resource/Umatilla_language> <http://dbpedia.org/property/region> ?uri} ", "SerialNumber": "2234", "question": "What is the state of Umatilla language which is also the state of James K. Kelly ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/James_K._Kelly", "label": "James K. Kelly"}, {"uri": "http://dbpedia.org/resource/Umatilla_language", "label": "Umatilla language"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/state", "label": "state"}, {"uri": "http://dbpedia.org/property/region"}], "id": "5d6c7cfe9fca43d7bf22d03f9f9d205e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Azerbaijan_State_Academic_Opera_and_Ballet_Theater> <http://dbpedia.org/ontology/locationCountry> ?uri. <http://dbpedia.org/resource/Baku_Puppet_Theatre> <http://dbpedia.org/ontology/locationCountry> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "SerialNumber": "2235", "question": "In which country can I find the State Academic Opera and Ballet Theater and Baku Puppet Theatre?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Azerbaijan_State_Academic_Opera_and_Ballet_Theater", "label": "academic theater ballet"}, {"uri": "http://dbpedia.org/resource/Baku_Puppet_Theatre", "label": "Baku Puppet Theatre"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locationCountry", "label": "country"}, {"uri": "http://dbpedia.org/ontology/locationCountry", "label": "country"}, {"uri": "http://dbpedia.org/ontology/Country", "label": "country"}], "id": "7cd083a1baa944fb93b2df81ca11207c"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Afrika_Baby_Bam> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Q-Tip_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri} ", "SerialNumber": "2236", "question": "What band was Afrika Baby Bam a part of, and often performed with Q Tip?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Afrika_Baby_Bam", "label": "Afrika Baby Bam"}, {"uri": "http://dbpedia.org/resource/Q-Tip_(musician)", "label": "tip"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/associatedBand", "label": "band"}, {"uri": "http://dbpedia.org/ontology/associatedMusicalArtist", "label": "Tip"}], "id": "e4204a1a2f2040a6aadcc27f9ff9c8a0"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jimmie_Lou_Fisher> <http://dbpedia.org/property/governor> ?uri } ", "SerialNumber": "2237", "question": "List the governers of Jimmie Lou Fisher?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jimmie_Lou_Fisher", "label": "Jimmie Lou Fisher"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/governor", "label": "governers"}], "id": "842c6e8c6a8b49ba99364b98105af678"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Garbage_(band)> . ?x <http://dbpedia.org/ontology/recordedIn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}", "SerialNumber": "2239", "question": "Where has GARAGE recorded its singles?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Garbage_(band)", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/producer", "label": "GARAGE"}, {"uri": "http://dbpedia.org/ontology/recordedIn", "label": "recorded"}, {"uri": "http://dbpedia.org/ontology/Single", "label": "single"}], "id": "7dd6d733dada4602b5f9249a4418c0ce"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Manu_Cornet> <http://dbpedia.org/property/employer> ?uri. <http://dbpedia.org/resource/Google.by> <http://dbpedia.org/ontology/author> ?uri} ", "SerialNumber": "2240", "question": "Which employer of Manu Cornet has alsoe written Google.by ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Manu_Cornet", "label": "Manu Cornet"}, {"uri": "http://dbpedia.org/resource/Google.by", "label": "Google.by"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/employer", "label": "employer"}, {"uri": "http://dbpedia.org/ontology/author", "label": "written"}], "id": "0d8127d7d9f94ef6ad941ee30b14e54c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/editor> <http://dbpedia.org/resource/Paul_Morphy> . ?x <http://dbpedia.org/property/discipline> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}", "SerialNumber": "2242", "question": "Which field's journals are edited by Paul Morphy?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Morphy", "label": "Paul Morphy"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/editor", "label": "edited by"}, {"uri": "http://dbpedia.org/property/discipline"}, {"uri": "http://dbpedia.org/ontology/AcademicJournal", "label": "journals"}], "id": "a44e98fa4c1e4f79b3c341844a6db478"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PATTS_College_of_Aeronautics> <http://dbpedia.org/property/athletics> ?uri. <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri} ", "SerialNumber": "2244", "question": "List the sports of PATTS College of Aeronautics which are of interest of Jon Speelman ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics", "label": "PATTS College of Aeronautics"}, {"uri": "http://dbpedia.org/resource/Jon_Speelman", "label": "Jon Speelman"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/athletics", "label": "interest"}, {"uri": "http://dbpedia.org/ontology/field", "label": "interest"}], "id": "d945ca666231404ea5dbf05646dcc45d"}, {"sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Swedish_language> . ?uri <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm> } ", "SerialNumber": "2249", "question": "Give me the count of newspaper whose language is Sweedish and headquartered at stockholm ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Swedish_language", "label": "language"}, {"uri": "http://dbpedia.org/resource/Stockholm", "label": "stockholm"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/language", "label": "language"}, {"uri": "http://dbpedia.org/property/headquarters", "label": "headquarter"}], "id": "01086492a07e4c6eb96f182023d92f9f"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/property/locations> ?uri  . }", "SerialNumber": "2250", "question": "In how many places are the companies founded in Canada operating?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Canada", "label": "Canada"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/foundationPlace", "label": "founded"}, {"uri": "http://dbpedia.org/property/locations", "label": "operating"}], "id": "b7d04c385e304556962dfa6f26906db4"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School> . ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2251", "question": "Name a person whose sucessor was Adrian A. basora and was educated at Harvard-Westlake School?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Harvard-Westlake_School", "label": "Harvard-Westlake School"}, {"uri": "http://dbpedia.org/resource/Adrian_A._Basora", "label": "Adrian A. basora"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/almaMater", "label": "edu"}, {"uri": "http://dbpedia.org/property/successor", "label": "cated"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "person"}], "id": "b049e9b6c3d84f8db89c6dad58c1b742"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Gatwick_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "SerialNumber": "2257", "question": "Which continents can be reached by flight companies available on Gatwick Airport?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gatwick_Airport", "label": "Gatwick Airport"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/targetAirport", "label": "airport"}, {"uri": "http://dbpedia.org/property/destinations", "label": "companies"}, {"uri": "http://dbpedia.org/ontology/Airline", "label": "companies"}], "id": "1330392af821465988520c7e62465234"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2009\u201310_Middlesbrough_F.C._season> <http://dbpedia.org/ontology/manager> ?uri } ", "SerialNumber": "2260", "question": "Who is the head coach of 2009-10 Middlesbrough F.C. season ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2009\u201310_Middlesbrough_F.C._season", "label": "middlesbrough season"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/manager", "label": "coach"}], "id": "71f8fa4b19a547668255c9310216a8f3"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/material> <http://dbpedia.org/resource/Concrete> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "SerialNumber": "2261", "question": "Which builder has made concrete bridges?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Concrete", "label": "concrete"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/material", "label": "made"}, {"uri": "http://dbpedia.org/ontology/builder", "label": "builder"}, {"uri": "http://dbpedia.org/ontology/Bridge", "label": "bridge"}], "id": "edc54c2ea5cb4ecca8de2091fad5fbf7"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/address> <http://dbpedia.org/resource/United_States>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>}", "SerialNumber": "2264", "question": "How many venues are located in the US?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": "US"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/address", "label": "located"}, {"uri": "http://dbpedia.org/ontology/Venue", "label": "venue"}], "id": "11bda0b4ba6e488ca7e8255d984a7792"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Warren_G._Harding> <http://dbpedia.org/ontology/vicePresident> ?uri. <http://dbpedia.org/resource/Charles_Evans_Hughes> <http://dbpedia.org/ontology/president> ?uri} ", "SerialNumber": "2265", "question": "Which vice president of Warren G. Harsing is also the president of Evans Hughes ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Warren_G._Harding", "label": "warren"}, {"uri": "http://dbpedia.org/resource/Charles_Evans_Hughes", "label": "hughes"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/vicePresident", "label": "vice president"}, {"uri": "http://dbpedia.org/ontology/president", "label": "president"}], "id": "d8dbbad92b504881bd9c0c8a1932d15e"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Momoko_K\u014dchi> } ", "SerialNumber": "2266", "question": "in which movies have momoki kochi acted", "entity mapping": [{"uri": "http://dbpedia.org/resource/Momoko_K\u014dchi", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/starring", "label": "in"}], "id": "0fd9b98ee3744db6b234eecdfcbe9e70"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/broadcastArea> <http://dbpedia.org/resource/Southeast_Asia> . ?x <http://dbpedia.org/property/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}", "SerialNumber": "2267", "question": "In which countries can i find broadcasted TV in southeast asia?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Southeast_Asia", "label": "southeast asia"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/broadcastArea", "label": "broadcasted"}, {"uri": "http://dbpedia.org/property/country", "label": "countries"}, {"uri": "http://dbpedia.org/ontology/TelevisionStation", "label": "TV"}], "id": "954385119c2440dc9e9ee5c3b6adab5b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Rodney_Eade> . ?x <http://dbpedia.org/property/location> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "SerialNumber": "2268", "question": "Where can i find teams whose coach has been Rodney Eade.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Rodney_Eade", "label": "Rodney Eade"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/coach", "label": "coach"}, {"uri": "http://dbpedia.org/property/location", "label": "find"}, {"uri": "http://dbpedia.org/ontology/SportsTeam", "label": "team"}], "id": "f6837bbaf0614048ab98cba4cad9d380"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/season> <http://dbpedia.org/resource/2014\u201315_La_Liga> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "SerialNumber": "2269", "question": "Count all those whose youthclub performed at the 14-15 La Liga?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2014\u201315_La_Liga", "label": "liga"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/season", "label": "Liga"}, {"uri": "http://dbpedia.org/property/youthclubs", "label": "youthclub"}, {"uri": "http://dbpedia.org/ontology/Athlete", "label": "Liga"}], "id": "44babf14274042b6a9d97382855b1f6f"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wayne_Allard> <http://dbpedia.org/ontology/region> ?uri. <http://dbpedia.org/resource/Juli_Ashton> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "SerialNumber": "2271", "question": "What city is it where Wayne Allard governs and Juli Ashton was born?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Wayne_Allard", "label": "Wayne Allard"}, {"uri": "http://dbpedia.org/resource/Juli_Ashton", "label": "Juli Ashton"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/region", "label": "born"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "born"}], "id": "766f8af12e0948349fb3a59be11f74e5"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> . ?uri <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Esther_Alder>  . }", "SerialNumber": "2272", "question": "Which neighboring municipalities of Cologny has a mayor named Ester Alder ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cologny", "label": "Cologny"}, {"uri": "http://dbpedia.org/resource/Esther_Alder", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/neighboringMunicipalities", "label": "neighboring municipalities"}, {"uri": "http://dbpedia.org/ontology/mayor", "label": "mayor"}], "id": "9617ad4477da40298f1e0e562959fcc3"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lee_Si-Chen> <http://dbpedia.org/property/almaMater> ?uri. <http://dbpedia.org/resource/Doug_Walgren> <http://dbpedia.org/ontology/almaMater> ?uri . }", "SerialNumber": "2277", "question": "Where did Doug Walgren and Lee Si Chen study?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lee_Si-Chen", "label": "chen lee"}, {"uri": "http://dbpedia.org/resource/Doug_Walgren", "label": "Doug Walgren"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/almaMater", "label": "study"}, {"uri": "http://dbpedia.org/ontology/almaMater", "label": "study"}], "id": "7bc28b110ed544cc8e98bdcf752d9c47"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/George_Whitefield_Davis> . ?x <http://dbpedia.org/property/restingplace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "2278", "question": "Where are the politicians buried who succeeded George Whitefield Davis?", "entity mapping": [{"uri": "http://dbpedia.org/resource/George_Whitefield_Davis", "label": "George Whitefield Davis"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/predecessor", "label": "succeeded"}, {"uri": "http://dbpedia.org/property/restingplace"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "succeeded"}], "id": "fc9e2cac170a44a2abdca158f66cd5af"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Tofa\u015f_\u015eahin> <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Ethiopia> }", "SerialNumber": "2280", "question": "Is the assembly of tofa ahin ethopia?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tofa\u015f_\u015eahin", "label": "tofa ahin"}, {"uri": "http://dbpedia.org/resource/Ethiopia", "label": "ethopia"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/assembly", "label": "assembly"}], "id": "87876aa79cba44138cff493d5e2315c7"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Sapindales> . ?uri <http://dbpedia.org/ontology/ingredient> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}", "SerialNumber": "2283", "question": "How many food items have an ingredient from the Sapindales family?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sapindales", "label": "Sapindales"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/order"}, {"uri": "http://dbpedia.org/ontology/ingredient", "label": "ingredient"}, {"uri": "http://dbpedia.org/ontology/Food", "label": "food"}], "id": "ec821782125a4c71bd3630880a66897e"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Qu\u00e1n_Th\u00e1nh_Temple> <http://dbpedia.org/property/buildingType> ?uri } ", "SerialNumber": "2285", "question": "Which type of  building is Qun Thnh Temple ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Qu\u00e1n_Th\u00e1nh_Temple", "label": "temple"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/buildingType", "label": "building type"}], "id": "287db86b21b143a9a561c5ba6db3d528"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Stanley_Cavell> <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/William_Shakespeare> }", "SerialNumber": "2286", "question": "Does Stanley Cavell study Shakespeare?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Stanley_Cavell", "label": "Stanley Cavell"}, {"uri": "http://dbpedia.org/resource/William_Shakespeare", "label": "Shakespeare"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mainInterests", "label": "study"}], "id": "bf777652c816485f8385ae21e670622b"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bombay_Sapphire> <http://dbpedia.org/property/distributor> ?uri. <http://dbpedia.org/resource/Rev_(drink)> <http://dbpedia.org/ontology/distributor> ?uri} ", "SerialNumber": "2288", "question": "Who is the common distributer of Bombay Sapphire and Rev ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bombay_Sapphire", "label": "Bombay Sapphire"}, {"uri": "http://dbpedia.org/resource/Rev_(drink)", "label": "Rev"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/distributor", "label": "distributer"}, {"uri": "http://dbpedia.org/ontology/distributor", "label": "distributer"}], "id": "d369a9c08c2447f2b26af647610308bc"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2008\u201309_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/property/headcoach> ?uri } ", "SerialNumber": "2294", "question": "Who is the headcoach of 2008-09 Marquette Golden Eagles men's basketball team ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2008\u201309_Marquette_Golden_Eagles_men's_basketball_team", "label": "basketball marquette golden eagles"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/headcoach", "label": "headcoach"}], "id": "0223d728dead415fa225cd560eb8ad33"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Air_2000> <http://dbpedia.org/property/destinations> ?uri. <http://dbpedia.org/resource/Novair_International_Airways> <http://dbpedia.org/property/destinations> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Continent>}", "SerialNumber": "2300", "question": "In which continent do Air 2000 and Novair International airways operate?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Air_2000", "label": "Air 2000"}, {"uri": "http://dbpedia.org/resource/Novair_International_Airways", "label": "Novair International airways"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/destinations", "label": "operate"}, {"uri": "http://dbpedia.org/property/destinations", "label": "operate"}, {"uri": "http://dbpedia.org/ontology/Continent", "label": "continent"}], "id": "8eaed436923e4051b575c7c6b88b9797"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Abdelhameed_Amarri> <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/Khartoum> }", "SerialNumber": "2303", "question": "Does Abdelhameed Amarri currently play for Khartoum?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Abdelhameed_Amarri", "label": "Abdelhameed Amarri"}, {"uri": "http://dbpedia.org/resource/Khartoum", "label": "Khartoum"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentclub"}], "id": "5fe5d9294f7a466290ef022f51f60336"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Eric_Harris_and_Dylan_Klebold>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2305", "question": "What are the name of the casualties affected by shooting rampage of Eric Harris and Dylan Klebold?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Eric_Harris_and_Dylan_Klebold", "label": "Eric Harris"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/deathCause", "label": "Klebold"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "Klebold"}], "id": "9b7b817753ae40aeae2859d4023cc052"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Creature_Comforts> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "SerialNumber": "2307", "question": "Name the awards that have been given to the writer made famous for Creature Comforts?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Creature_Comforts", "label": "Creature Comforts"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/notableWork", "label": "famous"}, {"uri": "http://dbpedia.org/ontology/award", "label": "awards"}, {"uri": "http://dbpedia.org/ontology/Writer", "label": "writer"}], "id": "5ffd4aac7b004bd480d28d364aeb2aa4"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Scott_Haran> <http://dbpedia.org/ontology/knownFor> ?x . ?x <http://dbpedia.org/ontology/producer> ?uri  . }", "SerialNumber": "2308", "question": "Who produces the tv series which made Scott Haran famous?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Scott_Haran", "label": "Scott Haran"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/knownFor", "label": "famous"}, {"uri": "http://dbpedia.org/ontology/producer", "label": "produces"}], "id": "6e94b499964c49839c36fe479f49b5ce"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/British_Columbia> . ?x <http://dbpedia.org/property/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}", "SerialNumber": "2309", "question": "List all the faiths that British Columbian politicians follow?", "entity mapping": [{"uri": "http://dbpedia.org/resource/British_Columbia", "label": "British Columbia"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/residence", "label": "follow"}, {"uri": "http://dbpedia.org/property/religion", "label": "faith"}, {"uri": "http://dbpedia.org/ontology/Politician", "label": "politician"}], "id": "c0c8c5735c8c4188978cb1911173a8df"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCity> <http://dbpedia.org/resource/Taiwan> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Device>}", "SerialNumber": "2314", "question": "What are some devices made by Taiwanese companies?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Taiwan", "label": "Taiwan"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/locationCity", "label": "companies"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "made by"}, {"uri": "http://dbpedia.org/ontology/Device", "label": "device"}], "id": "6ba75b7096eb497b85706c1872a9dbdd"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Salthill> <http://dbpedia.org/ontology/type> ?uri } ", "SerialNumber": "2315", "question": "What is a salthill?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Salthill", "label": "salthill"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/type"}], "id": "fb24fef4bec1494480df389bd6d410c1"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Connecticut_River> <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/White_River_(Vermont)> }", "SerialNumber": "2322", "question": "Does the white river flow into the connecticut river{u'_id': u'97e02dcf44aa43c1b7cc7a7c155b118f',", "entity mapping": [{"uri": "http://dbpedia.org/resource/Connecticut_River", "label": "connecticut river"}, {"uri": "http://dbpedia.org/resource/White_River_(Vermont)", "label": "white river"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/rightTributary", "label": "flow"}], "id": "9aa99d04670a49e185afbcd4d2a451f5"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/class> <http://dbpedia.org/resource/Luxury_vehicle> . ?x <http://dbpedia.org/property/related> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "SerialNumber": "2324", "question": "What are some cars similar to luxury cars?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Luxury_vehicle", "label": "luxury"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/class", "label": "cars"}, {"uri": "http://dbpedia.org/property/related", "label": "cars"}, {"uri": "http://dbpedia.org/ontology/Automobile", "label": "cars"}], "id": "cdd77de1c8c7471fa087116e8d6f3f19"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Regional_Radio_Sports_Network> <http://dbpedia.org/property/affiliations> ?uri } ", "SerialNumber": "2326", "question": "What is the regional radio sports network associated with?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Regional_Radio_Sports_Network", "label": "regional radio sports network"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/affiliations"}], "id": "d8830ee89d0547a7ba604e685fe17819"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/J._Bennett_Johnston> <http://dbpedia.org/ontology/relation> ?x . ?x <http://dbpedia.org/property/state> ?uri  . }", "SerialNumber": "2329", "question": "In which state does the ambassador who is in related with J Bennett Johnston live?", "entity mapping": [{"uri": "http://dbpedia.org/resource/J._Bennett_Johnston", "label": "J Bennett Johnston"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relation", "label": "live"}, {"uri": "http://dbpedia.org/property/state", "label": "state"}], "id": "c9d240e63ba642689eb8e646e435a6e5"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Daund_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> <http://dbpedia.org/resource/Mumbai> }", "SerialNumber": "2331", "question": "Does mumbai manage the railway line going to the daund railway junction?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Daund_Junction_railway_station", "label": "junction railway daund"}, {"uri": "http://dbpedia.org/resource/Mumbai", "label": "mumbai"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/servingRailwayLine", "label": "railway"}], "id": "9f9eec1d2b8b4a918048a556e1a1bda5"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Union_State> <http://dbpedia.org/property/largestCity> ?uri. <http://dbpedia.org/resource/Nina_Vislova> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "SerialNumber": "2332", "question": "Whihc place of birth of the Union State is also the largest city of Union Staete ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Union_State", "label": "Union State"}, {"uri": "http://dbpedia.org/resource/Nina_Vislova", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/largestCity", "label": "largest city"}, {"uri": "http://dbpedia.org/property/placeOfBirth", "label": "place of birth"}], "id": "7f5ac3d1ae004898ac4a4452eb9f8633"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Massachusetts_Department_of_Transportation> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoadTunnel>}", "SerialNumber": "2333", "question": "Who is the stockholder of the road tunnels operated by the Massachusetts Department of Transportation?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Massachusetts_Department_of_Transportation", "label": "Massachusetts Department of Transportation"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/operator", "label": "operated"}, {"uri": "http://dbpedia.org/property/owner", "label": "stockholder"}, {"uri": "http://dbpedia.org/ontology/RoadTunnel", "label": "road tunnel"}], "id": "fbd32172a29a4fa99c58fb5f6b536bff"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeStart> <http://dbpedia.org/resource/Port_Klang> . ?x <http://dbpedia.org/ontology/county> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Road>}", "SerialNumber": "2334", "question": "Through which counties does the road go which starts at the Port Klang?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Port_Klang", "label": "Port Klang"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/routeStart", "label": "starts"}, {"uri": "http://dbpedia.org/ontology/county", "label": "counties"}, {"uri": "http://dbpedia.org/ontology/Road", "label": "road"}], "id": "921cd73c37684f80bc35975c857bc622"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Kensington,_Maryland> . ?x <http://dbpedia.org/ontology/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "2335", "question": "Under which president did some politicians live in Kensington?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kensington,_Maryland", "label": "Kensington"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/residence", "label": "live"}, {"uri": "http://dbpedia.org/ontology/president", "label": "president"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "live"}], "id": "f3545d9f2444478d8c70f13b4ead6094"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "2338", "question": "To what companies is Dennis Muilenburg important?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dennis_Muilenburg", "label": "Dennis Muilenburg"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/keyPeople", "label": "important"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "companies"}], "id": "1220a8e5611d4f3da78af05e41f06c15"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeStart> <http://dbpedia.org/resource/Minneapolis> . ?x <http://dbpedia.org/ontology/operatedBy> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}", "SerialNumber": "2343", "question": "Who operates the railway line which begins in Minneapolis?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Minneapolis", "label": "Minneapolis"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/routeStart", "label": "begins"}, {"uri": "http://dbpedia.org/ontology/operatedBy", "label": ""}, {"uri": "http://dbpedia.org/ontology/RailwayLine", "label": "railway line"}], "id": "35a6ca70f4ec420db9bc0726e28369a3"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Ministry_of_Internal_Affairs_(Ukraine)> . ?x <http://dbpedia.org/property/allegiance> ?uri  . }", "SerialNumber": "2347", "question": "Wo which countries have the members of Ukrainian ministry of internal affairs swore their oath?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ministry_of_Internal_Affairs_(Ukraine)", "label": "ministry of internal affairs"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/branch", "label": "oath"}, {"uri": "http://dbpedia.org/property/allegiance", "label": "oath"}], "id": "78406ab0c12f410ea4fe01eb52998c48"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Henri_Putz> <http://dbpedia.org/ontology/battle> ?x . ?x <http://dbpedia.org/ontology/territory> ?uri  . }", "SerialNumber": "2348", "question": "Where did the conflict take place in which Henri Putz fought?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Henri_Putz", "label": "Henri Putz"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/battle", "label": "fought"}, {"uri": "http://dbpedia.org/ontology/territory", "label": "fought"}], "id": "95206ae40dfc4899ae52dc8c2629db84"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eristoff> <http://dbpedia.org/property/manufacturer> ?uri. <http://dbpedia.org/resource/Bombay_Sapphire> <http://dbpedia.org/property/distributor> ?uri} ", "SerialNumber": "2349", "question": "Which producer of  the Eristoff is also the  distributor of  Bombay Sapphire?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Eristoff", "label": "Eristoff"}, {"uri": "http://dbpedia.org/resource/Bombay_Sapphire", "label": "Bombay Sapphire"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/manufacturer", "label": "producer"}, {"uri": "http://dbpedia.org/property/distributor", "label": "distributor"}], "id": "dc8a5681c7d44c77b2ca46dfd4f97216"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant> <http://dbpedia.org/ontology/owningOrganisation> ?uri. <http://dbpedia.org/resource/Ford_Theatre> <http://dbpedia.org/property/company> ?uri} ", "SerialNumber": "2353", "question": "Which company of Ford Theatre is the owning organization of F0ord Kansa City Assemply Plant ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant", "label": ""}, {"uri": "http://dbpedia.org/resource/Ford_Theatre", "label": "Ford Theatre"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owningOrganisation"}, {"uri": "http://dbpedia.org/property/company", "label": "company"}], "id": "fa0015d04c344e6cb138c160055c7bc6"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lyndon_Bridge> <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Truss_bridge> }", "SerialNumber": "2355", "question": "Is Lyndon bridge a kind of Truss bridge?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lyndon_Bridge", "label": "Lyndon bridge"}, {"uri": "http://dbpedia.org/resource/Truss_bridge", "label": "Truss bridge"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/design", "label": "kind"}], "id": "ff5b48cd5c5346e19a026ec964d8fc9d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lemberger_LD20b> <http://dbpedia.org/property/nationalOrigin> ?uri. <http://dbpedia.org/resource/Start_+_Flug_H-101> <http://dbpedia.org/property/nationalOrigin> ?uri . }", "SerialNumber": "2356", "question": "Which country gave birth to the Lemberger LD20b and Start+Flug H101 aircrafts?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lemberger_LD20b", "label": "Lemberger LD20b"}, {"uri": "http://dbpedia.org/resource/Start_+_Flug_H-101", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/nationalOrigin", "label": "aircrafts"}, {"uri": "http://dbpedia.org/property/nationalOrigin", "label": "aircrafts"}], "id": "df292d030ce14f19904cf9e50c046181"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ethiopian_Parliament_Building> <http://dbpedia.org/property/locationCountry> ?uri } ", "SerialNumber": "2358", "question": "Where is Ethiopian Parliament Building located ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ethiopian_Parliament_Building", "label": "Ethiopian Parliament Building"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/locationCountry", "label": "located"}], "id": "07d85a1276ff4600947c0e31a1cfbdb8"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Toluca> . ?x <http://dbpedia.org/property/related> ?uri  . }", "SerialNumber": "2362", "question": "Enumerate the cars related to the ones assembled in Toluca?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Toluca", "label": "Toluca"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/assembly", "label": "assembled"}, {"uri": "http://dbpedia.org/property/related", "label": "related"}], "id": "390932ca27634c5d95ed6cc8e1cc22e1"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nextAlbum> <http://dbpedia.org/resource/Pirates_of_the_Caribbean:_Dead_Man's_Chest_(soundtrack)> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}", "SerialNumber": "2364", "question": "Who wrote the album coming right before Dead Man's Chest's OST?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pirates_of_the_Caribbean:_Dead_Man's_Chest_(soundtrack)", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/nextAlbum", "label": "album"}, {"uri": "http://dbpedia.org/property/writer", "label": "wrote"}, {"uri": "http://dbpedia.org/ontology/Album", "label": "album"}], "id": "1151e6908881444aab1d23d7ba18118b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/property/locations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "2367", "question": "Where can I find companies which originated in Canada?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Canada", "label": "Canada"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/foundationPlace", "label": "originated"}, {"uri": "http://dbpedia.org/property/locations", "label": "originated"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "companies"}], "id": "133cd7d5f379447cba8204eebe933035"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_McGregor> <http://dbpedia.org/ontology/education> ?uri. <http://dbpedia.org/resource/William_Anthony_(artist)> <http://dbpedia.org/ontology/training> ?uri} ", "SerialNumber": "2368", "question": "Which school of jack mcGregor attend which was also the training center of William Anthony ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jack_McGregor", "label": "jack mcGregor"}, {"uri": "http://dbpedia.org/resource/William_Anthony_(artist)", "label": "William Anthony"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/education", "label": "center"}, {"uri": "http://dbpedia.org/ontology/training", "label": "training"}], "id": "bed42761fb204d2d921d29f6c2f208f9"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Erica_Frank> <http://dbpedia.org/ontology/institution> ?uri. <http://dbpedia.org/resource/Ivan_Toplak> <http://dbpedia.org/ontology/managerClub> ?uri} ", "SerialNumber": "2369", "question": "What is the university to which Erica Frank went, and where Ivan Toplak was a club manager?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Erica_Frank", "label": "Erica Frank"}, {"uri": "http://dbpedia.org/resource/Ivan_Toplak", "label": "Ivan Toplak"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/institution", "label": "manager"}, {"uri": "http://dbpedia.org/ontology/managerClub", "label": "manager club"}], "id": "3d59ca37e4b14a8cb41c75edc17b64a4"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Delhi> . ?x <http://dbpedia.org/property/party> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "2370", "question": "To which party do the politicians who died in Delhi belong?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Delhi", "label": "Delhi"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfDeath"}, {"uri": "http://dbpedia.org/property/party", "label": "party"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "belong"}], "id": "2777b95873e84c3fb7296d2c71c9a917"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Levi_Lincoln,_Sr.> <http://dbpedia.org/property/successor> ?uri. <http://dbpedia.org/resource/William_Clark> <http://dbpedia.org/property/appointer> ?uri} ", "SerialNumber": "2371", "question": "Which appointer of William Clark is the successor of Levi Lincoln Sr ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Levi_Lincoln,_Sr.", "label": "lincoln levi"}, {"uri": "http://dbpedia.org/resource/William_Clark", "label": "William Clark"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/successor", "label": "successor"}, {"uri": "http://dbpedia.org/property/appointer", "label": "appointer"}], "id": "e3b7d06679344c72ad872f44eef2b7ec"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Martha's_Vineyard> . ?x <http://dbpedia.org/ontology/hometown> ?uri  . }", "SerialNumber": "2372", "question": "What is the hometown of the residents of Martha's vineyards?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Martha's_Vineyard", "label": "Martha's vineyard"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/residence", "label": "residents"}, {"uri": "http://dbpedia.org/ontology/hometown", "label": "hometown"}], "id": "a1e36ed22095495ebef02d6a2bcc945b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Rocket>}", "SerialNumber": "2373", "question": "Which companies have launched a rocket from Cape Canaveral Air Force station?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station", "label": "Cape Canaveral Air Force station"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/launchSite", "label": "launched"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "companies"}, {"uri": "http://dbpedia.org/ontology/Rocket", "label": "rocket"}], "id": "76748f8d6e754610ad1d151828b63d55"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/North_Carolina_Highway_280> <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Arden,_North_Carolina> }", "SerialNumber": "2375", "question": "Does the north carolina highway 280 end in Arden?", "entity mapping": [{"uri": "http://dbpedia.org/resource/North_Carolina_Highway_280", "label": "north carolina highway 280"}, {"uri": "http://dbpedia.org/resource/Arden,_North_Carolina", "label": "carolina north arden"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/routeEnd", "label": "end"}], "id": "4672bed413aa4edca536b02a3e76dd48"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Queensland> . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "SerialNumber": "2385", "question": "Scientists at the University of Queensland have won which awards?", "entity mapping": [{"uri": "http://dbpedia.org/resource/University_of_Queensland", "label": "University of Queensland"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/almaMater", "label": "won"}, {"uri": "http://dbpedia.org/property/awards", "label": "awards"}, {"uri": "http://dbpedia.org/ontology/Scientist", "label": "Scientist"}], "id": "e487c6936b554e3d8395e85c17492758"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Glover_(video_game)> <http://dbpedia.org/ontology/distributor> ?uri } ", "SerialNumber": "2391", "question": "name the Glover's distributer ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Glover_(video_game)", "label": "Glover"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/distributor", "label": "distributer"}], "id": "72cc5d9d290e4955a73f49b22c0110b3"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jaime_Bateman_Cay\u00f3n> <http://dbpedia.org/ontology/deathPlace> ?uri. <http://dbpedia.org/resource/Hornito,_Chiriqu\u00ed> <http://dbpedia.org/ontology/country> ?uri . }", "SerialNumber": "2392", "question": "What nation is Hornito located in, where Jamie Bateman Cayn died too?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jaime_Bateman_Cay\u00f3n", "label": "bateman"}, {"uri": "http://dbpedia.org/resource/Hornito,_Chiriqu\u00ed", "label": "hornito"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/deathPlace", "label": "died"}, {"uri": "http://dbpedia.org/ontology/country", "label": "nation"}], "id": "83a8ac74414c41bdb0cbf6842d12b28f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Science_fiction> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "2394", "question": "List the Sci-fi TV shows with theme music given by Ron Grainer?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Science_fiction", "label": ""}, {"uri": "http://dbpedia.org/resource/Ron_Grainer", "label": "Ron Grainer"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/genre", "label": "TV"}, {"uri": "http://dbpedia.org/property/themeMusicComposer", "label": "theme music"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "cd9712900aa94048b9a54b08142c25f4"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/managerClub> <http://dbpedia.org/resource/England_national_under-20_football_team> } ", "SerialNumber": "2396", "question": "who are all the people who have managed the England's under 20 soccer team?", "entity mapping": [{"uri": "http://dbpedia.org/resource/England_national_under-20_football_team", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/managerClub", "label": "managed"}], "id": "fa725591411f4ce1ae2beceed79c3adb"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Bend,_Oregon> . ?x <http://dbpedia.org/ontology/location> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ProtectedArea>}", "SerialNumber": "2398", "question": "Where are all the protected areas near Bend, Oregon?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bend,_Oregon", "label": "Bend, Oregon"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/nearestCity", "label": "near"}, {"uri": "http://dbpedia.org/ontology/location"}, {"uri": "http://dbpedia.org/ontology/ProtectedArea", "label": "protected area"}], "id": "2af11bb3bb23402891e39bffb10bc960"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hudson_River> <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Lower_Manhattan> }", "SerialNumber": "2399", "question": "Does the hudson river flow into the lower manhatten?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Hudson_River", "label": "hudson river"}, {"uri": "http://dbpedia.org/resource/Lower_Manhattan", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/mouthMountain", "label": "lower"}], "id": "ede4d3ef0e754051afede4dcc6babe40"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Julian_Leow_Beng_Kim> <http://dbpedia.org/property/almaMater> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "SerialNumber": "2400", "question": "In how many places did Julian Leow Beng Kim study?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Julian_Leow_Beng_Kim", "label": "Julian Leow Beng Kim"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/almaMater", "label": "study"}, {"uri": "http://dbpedia.org/ontology/University", "label": "study"}], "id": "229e4197d78f417ca569f31cb727d19d"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Parsons_School_of_Design> . ?uri <http://dbpedia.org/ontology/director> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "2403", "question": "How many movies have been directed by almunies of Parsons School of Design?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Parsons_School_of_Design", "label": "Parsons School of Design"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/education"}, {"uri": "http://dbpedia.org/ontology/director", "label": "directed by"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "a9dbfce5738c47e2bb59273f4492c7b3"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Alfred_Kleiner> <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Albert_Einstein> }", "SerialNumber": "2405", "question": "Was einstein a doctoral student of Alfred Kleiner?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Alfred_Kleiner", "label": "Alfred Kleiner"}, {"uri": "http://dbpedia.org/resource/Albert_Einstein", "label": "einstein"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/doctoralStudent", "label": "doctoral student"}], "id": "f107c093f6cd4143af7f686892a28d70"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mount_St._Peter_Church> <http://dbpedia.org/property/architecture> <http://dbpedia.org/resource/International_Style_(architecture)> }", "SerialNumber": "2406", "question": "Is the Mount St Peter Church made in the international architectural style?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mount_St._Peter_Church", "label": "church peter mount"}, {"uri": "http://dbpedia.org/resource/International_Style_(architecture)", "label": "international architectural style"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/architecture", "label": "architectural style"}], "id": "36f0f09f20ba45daacd083a3e57bd8b2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Fabio_Mercurio> <http://dbpedia.org/property/institution> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}", "SerialNumber": "2411", "question": "Who owns the bank where Fabio Mercurio works?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fabio_Mercurio", "label": "Fabio Mercurio"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/institution", "label": "works"}, {"uri": "http://dbpedia.org/property/owner", "label": "owns"}, {"uri": "http://dbpedia.org/ontology/Bank", "label": "bank"}], "id": "8da4d7ea35a54979b46ddfbfc64b1b5c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/BBC_Parliament> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "2412", "question": "What shows are aired on sister channels of BBC Parliaments", "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC_Parliament", "label": "BBC Parliament"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/sisterNames", "label": "sister"}, {"uri": "http://dbpedia.org/ontology/network", "label": "channels"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "2f903de0d05c4f3c9eb0fcf478f43406"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide> . ?x <http://dbpedia.org/property/address> ?uri  . }", "SerialNumber": "2414", "question": "Starwood operates in which places?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide", "label": "Starwood"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/operator", "label": "places"}, {"uri": "http://dbpedia.org/property/address", "label": "places"}], "id": "00922db47d90435cb5df5903a5025450"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/portrayer> <http://dbpedia.org/resource/Roger_Barton_(film_editor)> . ?uri <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Padm\u00e9_Amidala>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "SerialNumber": "2417", "question": "Which fictional character portrayed by Roger barton has Padm Amidala as family ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Roger_Barton_(film_editor)", "label": "Roger barton"}, {"uri": "http://dbpedia.org/resource/Padm\u00e9_Amidala", "label": "amidala padm"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/portrayer", "label": "portrayed"}, {"uri": "http://dbpedia.org/property/family", "label": "family"}, {"uri": "http://dbpedia.org/ontology/FictionalCharacter", "label": "fictional character"}], "id": "f14f313e8dc0452884affe033d0a04fe"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/Houston_City_Council> . ?uri <http://dbpedia.org/ontology/location> ?x  . }", "SerialNumber": "2420", "question": "Which things have been located, where governance is Houston City Council?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Houston_City_Council", "label": "Houston City Council"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/governingBody", "label": "governance"}, {"uri": "http://dbpedia.org/ontology/location", "label": "governance"}], "id": "82f48c9c0f194d4090c22604bf2864c5"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Everton_Park_State_High_School> . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2421", "question": "What awards have been given to people schooled in the Everton park state high?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Everton_Park_State_High_School", "label": "Everton"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/education", "label": "high"}, {"uri": "http://dbpedia.org/property/awards", "label": "awards"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "high"}], "id": "832739b6967a4676b06c86e5b1426922"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Shore_Plaza> <http://dbpedia.org/property/address> ?uri } ", "SerialNumber": "2423", "question": "Where is the south shore plaza located?", "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Shore_Plaza", "label": "south shore plaza"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/address", "label": "located"}], "id": "31a8e6b4c59a4b4eac26800d28fb8078"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/The_GNOME_Project> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . }", "SerialNumber": "2427", "question": "What is written in a programming language developed by GNOME Project?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_GNOME_Project", "label": "project gnome"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/developer", "label": "developed by"}, {"uri": "http://dbpedia.org/property/programmingLanguage", "label": "programming language"}], "id": "8e7ec89e4ed941bf8ca2d3ac48db3969"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/citizenship> <http://dbpedia.org/resource/Statelessness>  . }", "SerialNumber": "2428", "question": "Count all the stateless people", "entity mapping": [{"uri": "http://dbpedia.org/resource/Statelessness", "label": "stateless"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/citizenship", "label": "people"}], "id": "35abbfdef65f48d399ea86f591412293"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "2433", "question": "What is the television show with presentator as Ryan Seacrest and theme music composer as Julian Gingell?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ryan_Seacrest", "label": "Ryan Seacrest"}, {"uri": "http://dbpedia.org/resource/Julian_Gingell", "label": "Julian Gingell"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/presenter"}, {"uri": "http://dbpedia.org/property/themeMusicComposer", "label": "theme music composer"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "television show"}], "id": "d36cd4157a5647ac96cd3a1013473247"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Eugene_T._Mahoney_State_Park> . ?x <http://dbpedia.org/ontology/state> ?uri  . }", "SerialNumber": "2434", "question": "River which flows into the eugene mahoney state park pass through which states?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Eugene_T._Mahoney_State_Park", "label": "mahoney eugene state"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mouthLocation", "label": "pass"}, {"uri": "http://dbpedia.org/ontology/state", "label": "state"}], "id": "8aefda4d445e431ba18e9893471a7d0e"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/David_Bowens> <http://dbpedia.org/ontology/formerTeam> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "SerialNumber": "2436", "question": "For how many cities's teams did David Bowens play?", "entity mapping": [{"uri": "http://dbpedia.org/resource/David_Bowens", "label": "David Bowens"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/formerTeam", "label": "teams"}, {"uri": "http://dbpedia.org/ontology/locationCity", "label": "play"}, {"uri": "http://dbpedia.org/ontology/SportsTeam", "label": "team"}], "id": "e3e4596a38cd41b5925a1131d75af14f"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/service> <http://dbpedia.org/resource/Electronics_manufacturing_services> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }", "SerialNumber": "2451", "question": "Give me a count of everything made by the company which offers electronical manufacturing too.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Electronics_manufacturing_services", "label": "manufacturing"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/service", "label": "manufacturing"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "made by"}], "id": "0c63debd713445eebabef107c1f94b34"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/leaderTitle> <http://dbpedia.org/resource/President_of_France> . ?x <http://dbpedia.org/ontology/currency> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "SerialNumber": "2454", "question": "What currencies are prevalent in the countries governed by the President of France?", "entity mapping": [{"uri": "http://dbpedia.org/resource/President_of_France", "label": "President of France"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/leaderTitle", "label": "governed"}, {"uri": "http://dbpedia.org/ontology/currency", "label": "currencies"}, {"uri": "http://dbpedia.org/ontology/Country", "label": "countries"}], "id": "86c4146411a441b9b7ae67962a14c5a7"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Populous_(company)> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "SerialNumber": "2455", "question": "Which teams have used the stadium whose architect was Populous ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Populous_(company)", "label": "Populous"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/architect", "label": "architect"}, {"uri": "http://dbpedia.org/ontology/tenant", "label": "teams"}, {"uri": "http://dbpedia.org/ontology/Stadium", "label": "stadium"}], "id": "804153ef4a04420d9160d3b4da5a2545"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Canc\u00fan> . ?x <http://dbpedia.org/ontology/country> ?uri  . }", "SerialNumber": "2459", "question": "How many contries surround the seas on the banks of which is the city of Cancun?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Canc\u00fan", "label": "Cancun"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/cities", "label": "banks"}, {"uri": "http://dbpedia.org/ontology/country", "label": "city"}], "id": "4b63d37cdc444e47bb79f766451d32ac"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saleen_S5S_Raptor> <http://dbpedia.org/property/designer> ?uri. <http://dbpedia.org/resource/Jimmy_Diggs> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "SerialNumber": "2462", "question": "Which city was designed by saleen Pator which is also the birht location of Jimmy Diggs ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Saleen_S5S_Raptor", "label": "saleen"}, {"uri": "http://dbpedia.org/resource/Jimmy_Diggs", "label": "Jimmy Diggs"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/designer", "label": "designed"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "location"}], "id": "888e5195b6724c50955a1020e553cbf6"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Siege_of_Fort_Recovery> . ?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Indiana_Territory>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "2464", "question": "Name the office holder whose theatre is Siege of Fort Recovery and belongs to Indian territory branch ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Siege_of_Fort_Recovery", "label": "Siege of Fort Recovery"}, {"uri": "http://dbpedia.org/resource/Indiana_Territory", "label": "territory indian"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/battle", "label": "theatre"}, {"uri": "http://dbpedia.org/property/branch", "label": "branch"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "office holder"}], "id": "b7ffb05378d2452b978792c947b826e3"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/1906\u201317_Stanford_rugby_teams> <http://dbpedia.org/property/headcoach> ?x . ?x <http://dbpedia.org/ontology/university> ?uri  . }", "SerialNumber": "2465", "question": "What was the university of the rugby player who coached the Stanford rugby teams during 1906-1917?", "entity mapping": [{"uri": "http://dbpedia.org/resource/1906\u201317_Stanford_rugby_teams", "label": "stanford"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/headcoach", "label": "coached"}, {"uri": "http://dbpedia.org/ontology/university", "label": "university"}], "id": "6aad2feaead44d8e87827dc6c1ff9a57"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_\u2013_Bataan> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig> <http://dbpedia.org/ontology/sport> ?uri . }", "SerialNumber": "2466", "question": "Which sports are played at both the Polytech uni of Bataan and Taguig?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_\u2013_Bataan", "label": "polytech bataan"}, {"uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig", "label": "polytech taguig"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}], "id": "235bac8ebb9049149d10aec4b92b6881"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/related> <http://dbpedia.org/resource/Subaru_Outback> . ?x <http://dbpedia.org/ontology/layout> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "SerialNumber": "2469", "question": "What layout can be found in cars similar to the Subaru Outback?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Subaru_Outback", "label": "Subaru Outback"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/related", "label": "similar"}, {"uri": "http://dbpedia.org/ontology/layout", "label": "layout"}, {"uri": "http://dbpedia.org/ontology/Automobile", "label": "similar"}], "id": "3de0eac5123f4e209570dffcc7b9e398"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Environmentalism>  . }", "SerialNumber": "2471", "question": "How many organizations work for Environmentalism?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Environmentalism", "label": "Environmentalism"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/purpose", "label": "work"}], "id": "a8dde84d23764e07b345f79862bd2561"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet>  . }", "SerialNumber": "2472", "question": "Which producer of Boeing F/A-18E/F Super Hornet has a key person Dennis Muilenburg ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dennis_Muilenburg", "label": "Dennis Muilenburg"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/keyPeople", "label": "key"}, {"uri": "http://dbpedia.org/property/products", "label": "person"}, {"uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet", "label": "hornet super"}], "id": "1876b2c28ef241b785166c94d876c850"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sidney_Catlin_Partridge> <http://dbpedia.org/property/education> ?uri. <http://dbpedia.org/resource/Cyril_Hume> <http://dbpedia.org/property/education> ?uri . }", "SerialNumber": "2473", "question": "To which uni. did  sidney c patridge and cyril hume both once went?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sidney_Catlin_Partridge", "label": ""}, {"uri": "http://dbpedia.org/resource/Cyril_Hume", "label": "cyril hume"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/education", "label": "sidney"}, {"uri": "http://dbpedia.org/property/education", "label": "sidney"}], "id": "f15503debeab476e92bec7104ca5599b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Nandurbar> . ?x <http://dbpedia.org/ontology/party> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}", "SerialNumber": "2477", "question": "To which party does the politician belong, who was born in Nandurbar?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Nandurbar", "label": "Nandurbar"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBirth"}, {"uri": "http://dbpedia.org/ontology/party", "label": "party"}, {"uri": "http://dbpedia.org/ontology/Politician", "label": "politician"}], "id": "6ba161b8976648ed9d66e2ddb758f1f2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/debutTeam> <http://dbpedia.org/resource/Houston_Astros> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2482", "question": "People who debuted from Houston Astros have played in which clubs?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Houston_Astros", "label": "Houston Astros"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/debutTeam", "label": "debuted"}, {"uri": "http://dbpedia.org/ontology/team", "label": "clubs"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "clubs"}], "id": "cfcc12ca99344c948bb29580893f960e"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch> <http://dbpedia.org/ontology/sport> ?uri} ", "SerialNumber": "2483", "question": "What sport played at Islamic azad uni employes Craig Van Tilbury?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Craig_Van_Tilbury", "label": "Craig Van Tilbury"}, {"uri": "http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch", "label": "islamic azad"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/occupation", "label": "employes"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}], "id": "0cf0d3fc76114f5bb2970fc5db230b49"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Solidus_(coin)> . ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Aureus> . }", "SerialNumber": "2484", "question": "Where are Solidus and Aureus used?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Solidus_(coin)", "label": "Solidus"}, {"uri": "http://dbpedia.org/resource/Aureus", "label": "Aureus"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/currency"}, {"uri": "http://dbpedia.org/ontology/currency"}], "id": "1a1fe17b13dd4e109fdd6073577080a4"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Christiaan_Barnard> <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/University_of_Minnesota> }", "SerialNumber": "2491", "question": "Did Christian Barnard study in the University of Minnesota?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Christiaan_Barnard", "label": "Christian Barnard"}, {"uri": "http://dbpedia.org/resource/University_of_Minnesota", "label": "University of Minnesota"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/institution", "label": "study"}], "id": "bd015efa79cc4cf6ace73ea181c96abd"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rolando_Gomez> <http://dbpedia.org/property/homeTown> ?uri. <http://dbpedia.org/resource/Clyde_McNeal> <http://dbpedia.org/property/deathDate> ?uri} ", "SerialNumber": "2495", "question": "What is the home town of the Rolando Gomez is the DOD of the Clyde McNeal ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Rolando_Gomez", "label": "Rolando Gomez"}, {"uri": "http://dbpedia.org/resource/Clyde_McNeal", "label": "Clyde McNeal"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/homeTown", "label": "home town"}, {"uri": "http://dbpedia.org/property/deathDate", "label": "DOD"}], "id": "78242b591ed14293a5c985c9cdb0a3ab"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Ontario> . ?x <http://dbpedia.org/property/homeTown> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2499", "question": "List the home town of the people who have Ontario as one of it ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ontario", "label": "Ontario"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/homeTown", "label": "home town"}, {"uri": "http://dbpedia.org/property/homeTown", "label": "home town"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "87b748e0d7f448dfad6f4d9e657df140"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Pennsylvania>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}", "SerialNumber": "2501", "question": "Pennsylvania has how many american football teams?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pennsylvania", "label": "Pennsylvania"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/city"}, {"uri": "http://dbpedia.org/ontology/AmericanFootballTeam", "label": "american football team"}], "id": "1a867d312a124069949fc1d4e7e99000"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerusalem_Institute_of_Justice> <http://dbpedia.org/ontology/service> ?uri. <http://dbpedia.org/resource/Gaza\u2013Israel_conflict> <http://dbpedia.org/property/result> ?uri} ", "SerialNumber": "2503", "question": "name the region served by Jerusalem Institue of Justice which was also the conflict region in GazaIsrael ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jerusalem_Institute_of_Justice", "label": "jerusalem"}, {"uri": "http://dbpedia.org/resource/Gaza\u2013Israel_conflict", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/service", "label": "region"}, {"uri": "http://dbpedia.org/property/result", "label": "region"}], "id": "b2cd1f2860c74a409807a44fab5702ff"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Field_marshal> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "2504", "question": "Count the number of different religions that field marshals have followed?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Field_marshal", "label": "field marshals"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/militaryRank", "label": "number"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}], "id": "880132cb380144518ffc1218cb9fb11e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/album> <http://dbpedia.org/resource/Main_Course> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}", "SerialNumber": "2508", "question": "Who wrote the singles on the Main Course?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Main_Course", "label": "Main Course"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/album"}, {"uri": "http://dbpedia.org/property/writer", "label": "wrote"}, {"uri": "http://dbpedia.org/ontology/Single", "label": "single"}], "id": "ff272b89f0e04ea683d6f633ea223754"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Indian_English> . ?uri <http://dbpedia.org/ontology/residence> ?x  . }", "SerialNumber": "2513", "question": "Name a few whose live in a place where Indian English is an official language", "entity mapping": [{"uri": "http://dbpedia.org/resource/Indian_English", "label": "Indian English"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/officialLanguage", "label": "official language"}, {"uri": "http://dbpedia.org/ontology/residence", "label": "place"}], "id": "000c7ab2bce24308b9e2d7886852c5ab"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Louisiana> . ?x <http://dbpedia.org/property/knownFor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>}", "SerialNumber": "2516", "question": "What are some Louisiana based models known for?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Louisiana", "label": "Louisiana"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBirth"}, {"uri": "http://dbpedia.org/property/knownFor", "label": "known for"}, {"uri": "http://dbpedia.org/ontology/Model", "label": "model"}], "id": "b1e194a22c164d3a9200e8ed3425fd1b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Aardman_Animations> <http://dbpedia.org/ontology/keyPerson> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "SerialNumber": "2518", "question": "List the awards given to the important people of Aardman Animations?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Aardman_Animations", "label": "Aardman Animations"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/keyPerson", "label": "people"}, {"uri": "http://dbpedia.org/ontology/award", "label": "awards"}], "id": "ea43482e56b84335b891f1be6326132e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kathimerini> <http://dbpedia.org/ontology/publisher> ?x . ?x <http://dbpedia.org/property/residence> ?uri  . }", "SerialNumber": "2522", "question": "Where does the publisher of Kathimerini live?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kathimerini", "label": "Kathimerini"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/publisher", "label": "publisher"}, {"uri": "http://dbpedia.org/property/residence", "label": "live"}], "id": "c830276732964533b201803bc7dbe949"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/United_Kingdom> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "SerialNumber": "2524", "question": "To which places do the flights go by airlines headquartered in the UK?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_Kingdom", "label": "UK"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/headquarters", "label": "headquarter"}, {"uri": "http://dbpedia.org/property/destinations", "label": "ed"}, {"uri": "http://dbpedia.org/ontology/Airline", "label": "airline"}], "id": "efb84d67dd2347d9b6b254799a4661c3"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Moses> <http://dbpedia.org/ontology/relative> ?x . ?x <http://dbpedia.org/ontology/veneratedIn> ?uri  . }", "SerialNumber": "2525", "question": "Relatives of Moses used to follow which religions?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Moses", "label": "Moses"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relative", "label": "Relative"}, {"uri": "http://dbpedia.org/ontology/veneratedIn", "label": "religions"}], "id": "1b85b83eced84ed5bac6ce3b7641fe6b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/Association_of_Southeast_Asian_Institutions_of_Higher_Learning> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}", "SerialNumber": "2526", "question": "What sports are played at institutes affiliated by the Association of Southeast Asian Institutes of Higher Learning?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Association_of_Southeast_Asian_Institutions_of_Higher_Learning", "label": "Association of Southeast Asian Institutes"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/affiliation", "label": "Learning"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}, {"uri": "http://dbpedia.org/ontology/EducationalInstitution", "label": "Learning"}], "id": "e1bf04582dd24181bedaeba350fbf86e"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lagos_Preparatory_School> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/William_Garne> <http://dbpedia.org/ontology/occupation> ?uri} ", "SerialNumber": "2528", "question": "What sport amongst the one Lagos Preparatory School practices, did Willian Garne play for?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lagos_Preparatory_School", "label": "Lagos Preparatory School"}, {"uri": "http://dbpedia.org/resource/William_Garne", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}, {"uri": "http://dbpedia.org/ontology/occupation", "label": "play"}], "id": "16c8192ee06a41f8b0849022a7a0a8d0"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Groove_Thang> <http://dbpedia.org/ontology/musicalArtist> ?x . ?x <http://dbpedia.org/property/associatedActs> ?uri  . }", "SerialNumber": "2530", "question": "With which artist did the musical artist of Groove Thang collaborated ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Groove_Thang", "label": "Groove Thang"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/musicalArtist", "label": "musical artist"}, {"uri": "http://dbpedia.org/property/associatedActs", "label": "collaborated"}], "id": "bb2d7162c47e46b9a5ccd94bed534a92"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mainIngredient> <http://dbpedia.org/resource/Salad> . ?x <http://dbpedia.org/property/country> ?uri  . }", "SerialNumber": "2531", "question": "Where can i find salad based food?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Salad", "label": "salad"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mainIngredient", "label": "food"}, {"uri": "http://dbpedia.org/property/country", "label": "food"}], "id": "e4e55365215047349dcabad761023fd4"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Darren_Brass> <http://dbpedia.org/ontology/residence> ?uri. <http://dbpedia.org/resource/Belvin_Perry> <http://dbpedia.org/ontology/residence> ?uri . }", "SerialNumber": "2533", "question": "In which state do darren brass and belvin perry live?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Darren_Brass", "label": "darren brass"}, {"uri": "http://dbpedia.org/resource/Belvin_Perry", "label": "belvin perry"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/residence", "label": "live"}, {"uri": "http://dbpedia.org/ontology/residence", "label": "live"}], "id": "f01521d56f7e45d38d7855d22371b453"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mikhail_Pashnin> <http://dbpedia.org/property/prospectTeam> ?uri. <http://dbpedia.org/resource/Wilfred_McDonald> <http://dbpedia.org/property/playedFor> ?uri} ", "SerialNumber": "2535", "question": "Which team did wolfred McDonald is also the prospect team of Milkhail Pashnin ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mikhail_Pashnin", "label": "pashnin"}, {"uri": "http://dbpedia.org/resource/Wilfred_McDonald", "label": "mcdonald"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/prospectTeam", "label": "prospect team"}, {"uri": "http://dbpedia.org/property/playedFor", "label": "team"}], "id": "9c6b233ade344cbfa7f26302aa1584cc"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Rodi> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/Andy_Wyant> <http://dbpedia.org/property/placeOfDeath> ?uri} ", "SerialNumber": "2536", "question": "Where did Andy Wyant die and Robert Rodi was born in?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Rodi", "label": "Robert Rodi"}, {"uri": "http://dbpedia.org/resource/Andy_Wyant", "label": "Andy Wyant"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/birthPlace", "label": "born in"}, {"uri": "http://dbpedia.org/property/placeOfDeath"}], "id": "7cedb64c402a4e7cacbcc2a3d3a3280a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)>  . }", "SerialNumber": "2537", "question": "Name a colonel whose resting place is Montpelier ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Colonel_(United_States)", "label": "colonel"}, {"uri": "http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)", "label": "Montpelier"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/rank"}, {"uri": "http://dbpedia.org/property/restingplace", "label": "resting place"}], "id": "95aa0849c5cc45f18b94c5427546188b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Ultimate_Fighter:_A_Champion_Will_Be_Crowned> <http://dbpedia.org/property/city> ?uri. <http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Rousey_vs._Team_Tate> <http://dbpedia.org/property/city> ?uri . }", "SerialNumber": "2539", "question": "Where did the ultimate fighter: a champion will be crowned tonight and ultimate fighter: team rousey vs team tate take place?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Ultimate_Fighter:_A_Champion_Will_Be_Crowned", "label": "the ultimate fighter: a champion will be crowned"}, {"uri": "http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Rousey_vs._Team_Tate", "label": "ultimate fighter: rousey"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/city", "label": "place"}, {"uri": "http://dbpedia.org/property/city", "label": "place"}], "id": "364043e289af4b249909ba7a1c28c8ac"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Universe_in_a_Single_Atom> <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Buddhism> }", "SerialNumber": "2542", "question": "Is The Universe in a Single Atom a book about buddhism?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Universe_in_a_Single_Atom", "label": "The Universe in a Single Atom"}, {"uri": "http://dbpedia.org/resource/Buddhism", "label": "buddhism"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/literaryGenre", "label": "book"}], "id": "459dcf9d415e401787e5bfb3af170b9b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Harriman,_New_York>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "SerialNumber": "2544", "question": "Which musician was born in Harriman, NY?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Harriman,_New_York", "label": "harriman,"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBirth"}, {"uri": "http://dbpedia.org/ontology/MusicalArtist", "label": "musician"}], "id": "992095c492cf4b5ab41703a61761cbab"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Toronto> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "SerialNumber": "2545", "question": "What are the famous Uni Toronto scientists known for?", "entity mapping": [{"uri": "http://dbpedia.org/resource/University_of_Toronto", "label": "Uni Toronto"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/almaMater", "label": "famous"}, {"uri": "http://dbpedia.org/ontology/knownFor", "label": "known for"}, {"uri": "http://dbpedia.org/ontology/Scientist", "label": "scientist"}], "id": "01676793d39944c3aa2728c8e59460dd"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/United_States>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}", "SerialNumber": "2546", "question": "How many veterans are buried in the US?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": "US"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/restingPlace", "label": "buried in"}, {"uri": "http://dbpedia.org/ontology/MilitaryPerson", "label": "veterans"}], "id": "ccdd008db26a4b1bb06b083c9a25de17"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/National_Medal_of_Science> . ?x <http://dbpedia.org/property/doctoralStudents> ?uri  . }", "SerialNumber": "2547", "question": "Count the PhD students whose thesis are supervised by National Medal of Science winners?", "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Medal_of_Science", "label": "National Medal of Science"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/prizes", "label": "winners"}, {"uri": "http://dbpedia.org/property/doctoralStudents", "label": "students"}], "id": "d8cbe0bde1c74580876d692bc41e1096"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Gold_Base> . ?uri <http://dbpedia.org/ontology/religion> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2548", "question": "Count number of people who follow a religion which has an important office in Gold Base ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gold_Base", "label": "Gold Base"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/headquarters", "label": "office"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "office"}], "id": "0b008d07b5aa42aeb3116f72525c05a2"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Katyayana_(Buddhist)> <http://dbpedia.org/property/religion> ?uri } ", "SerialNumber": "2552", "question": "What is the relegious affiliations of Katyayana ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Katyayana_(Buddhist)", "label": "Katyayana"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/religion", "label": "affiliations"}], "id": "ac18c05943054b51a0b6a6c6483e24fa"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Tennessee> . ?uri <http://dbpedia.org/property/knownFor> ?x  . }", "SerialNumber": "2556", "question": "List the name of those who became famous for something garrisoned at Tennessee?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tennessee", "label": "Tennessee"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/garrison", "label": "garrison"}, {"uri": "http://dbpedia.org/property/knownFor", "label": "ed"}], "id": "ae1e012a0df44d74ab74f9890661c43e"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/jurisdiction> <http://dbpedia.org/resource/German-occupied_Europe> . ?x <http://dbpedia.org/ontology/leader> ?uri  . }", "SerialNumber": "2557", "question": "How many people have led agencies in German occupied Europe?", "entity mapping": [{"uri": "http://dbpedia.org/resource/German-occupied_Europe", "label": "German occupied Europe"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/jurisdiction", "label": "agencies"}, {"uri": "http://dbpedia.org/ontology/leader", "label": "led"}], "id": "7e7d19cbdc3d4fb7b2b4b7110f6aab4e"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer> <http://dbpedia.org/ontology/coverArtist> ?uri. <http://dbpedia.org/resource/Mark_Twain_Tonight> <http://dbpedia.org/property/writer> ?uri} ", "SerialNumber": "2559", "question": "Who was the cover artist of The Adventure of Tom Sawyer also wrote mark Twain Tonight ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer", "label": "adventure sawyer"}, {"uri": "http://dbpedia.org/resource/Mark_Twain_Tonight", "label": "mark Twain Tonight"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/coverArtist", "label": "cover artist"}, {"uri": "http://dbpedia.org/property/writer", "label": "wrote"}], "id": "b73800c673354bf3b828496ea3a2c9d6"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Cosmos_(Carl_Sagan_book)> <http://dbpedia.org/ontology/previousWork> ?x . ?x <http://dbpedia.org/property/subject> ?uri  . }", "SerialNumber": "2562", "question": "What is the subject of the book which preceded Sagan's Cosmos?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cosmos_(Carl_Sagan_book)", "label": "Cosmos"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/previousWork", "label": "preceded"}, {"uri": "http://dbpedia.org/property/subject", "label": "subject"}], "id": "4ef62e8a57af45229de3bc04ae17a70b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/Cockroach_Labs> . ?uri <http://dbpedia.org/property/author> ?x  . }", "SerialNumber": "2563", "question": "What was developed by someone working in Cockroach Labs?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cockroach_Labs", "label": "Cockroach Labs"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/employer", "label": "working"}, {"uri": "http://dbpedia.org/property/author", "label": "working"}], "id": "cb47161368654599a123ac5ecc45c968"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Letitia_MacTavish_Hargrave> <http://dbpedia.org/ontology/deathCause> ?uri } ", "SerialNumber": "2565", "question": "How did Letitia MacTavish Hargrave died ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Letitia_MacTavish_Hargrave", "label": "Letitia MacTavish Hargrave"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/deathCause", "label": "died"}], "id": "d47969ab783e4582a2e2fb7e0f0f5e8e"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/2015_North_American_Soccer_League_season> . ?x <http://dbpedia.org/ontology/ground> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "SerialNumber": "2572", "question": "In how many different stadiums are the seasons of the 2015 NA Soccer league held?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2015_North_American_Soccer_League_season", "label": "soccer league"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/league", "label": "league"}, {"uri": "http://dbpedia.org/ontology/ground", "label": "held"}, {"uri": "http://dbpedia.org/ontology/Stadium", "label": "stadium"}], "id": "f10350d3685640838feea5fdeaf7d694"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Russia_women's_national_volleyball_team> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "SerialNumber": "2573", "question": "In which countries were the Russian volleyball team players born?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Russia_women's_national_volleyball_team", "label": "Russian"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/nationalteam", "label": "team"}, {"uri": "http://dbpedia.org/property/placeOfBirth"}, {"uri": "http://dbpedia.org/ontology/Athlete", "label": "born"}], "id": "7713d7e1c178466791f85588f6e6bc0f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Limerick>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "2575", "question": "Which river originate from limerick?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Limerick", "label": "limerick"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mouthLocation", "label": "originate"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "f01085ed6c1646a49adc3df33bf1df55"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Solomon> <http://dbpedia.org/property/predecessor> ?x . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Monarch>}", "SerialNumber": "2577", "question": "Name the veneration of the monarch who is the predecessor of Solomon?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Solomon", "label": "Solomon"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/predecessor", "label": "predecessor"}, {"uri": "http://dbpedia.org/property/veneratedIn", "label": "veneration"}, {"uri": "http://dbpedia.org/ontology/Monarch", "label": "monarch"}], "id": "f53a548559d847459560227f6de16c73"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ganz_UV> <http://dbpedia.org/ontology/operator> ?uri } ", "SerialNumber": "2578", "question": "Who operates the Ganz UV?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ganz_UV", "label": "Ganz UV"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/operator", "label": "operates"}], "id": "7f98833cf8c94eed9fdf6fb194c481be"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Upper_Neretva> <http://dbpedia.org/ontology/mouthCountry> ?uri. <http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)> <http://dbpedia.org/property/firstAired> ?uri} ", "SerialNumber": "2580", "question": "In which country was GM was firt aired which is also the mouth country of Upper Neretva?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Upper_Neretva", "label": "Upper Neretva"}, {"uri": "http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/mouthCountry", "label": "mouth country"}, {"uri": "http://dbpedia.org/property/firstAired", "label": "aired"}], "id": "13acb5e7c9d2488ba706f3eabb8e78c0"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/John_Forbes_(British_Army_officer)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}", "SerialNumber": "2587", "question": "Which city's foundeer is John Forbes?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Forbes_(British_Army_officer)", "label": "John Forbes"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/founder"}, {"uri": "http://dbpedia.org/ontology/City", "label": "city"}], "id": "132b8410eb304e7a89c8c7717e9ed33f"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jeff_Conaway>  . }", "SerialNumber": "2588", "question": "How many times has Jeff Conaway been casted?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jeff_Conaway", "label": "Jeff Conaway"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/starring", "label": "casted"}], "id": "deb86e66bf6b4246b747867c3fd40564"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Los_Angeles_Clippers>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2590", "question": "How many people were drafted in the LA Clippers?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Los_Angeles_Clippers", "label": "LA Clippers"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/draftTeam", "label": "drafted"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "3cd3e5a6d4944cbe8c95808f0407e8d0"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Refriango> . ?x <http://dbpedia.org/property/origin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage>}", "SerialNumber": "2591", "question": "Where did the beverages sold by Refriango originate?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Refriango", "label": "Refriango"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/manufacturer", "label": "ate"}, {"uri": "http://dbpedia.org/property/origin", "label": "origin"}, {"uri": "http://dbpedia.org/ontology/Beverage", "label": "beverage"}], "id": "0564d9c87b7544ec8c5ee392b68afadc"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Indochina> . ?uri <http://dbpedia.org/ontology/commander> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "2592", "question": "In which wars did commanders born in Indochina fight?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Indochina", "label": "Indochina"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/birthPlace", "label": "born in"}, {"uri": "http://dbpedia.org/ontology/commander", "label": "commander"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "fight"}], "id": "3bb919a7b4894ae6afc9fc796ba76554"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/CN_Atl\u00e8tic-Barceloneta> <http://dbpedia.org/ontology/stadium> <http://dbpedia.org/resource/Barcelona> }", "SerialNumber": "2595", "question": "CN Atletic-Barceloneta has a stadium in Barcelona?", "entity mapping": [{"uri": "http://dbpedia.org/resource/CN_Atl\u00e8tic-Barceloneta", "label": ""}, {"uri": "http://dbpedia.org/resource/Barcelona", "label": "Barcelona"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/stadium", "label": "stadium"}], "id": "858f8152827d43efa3d30f8630da9251"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Morrissey> <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/The_Smiths> }", "SerialNumber": "2596", "question": "Is morrissey in the smiths?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Morrissey", "label": "morrissey"}, {"uri": "http://dbpedia.org/resource/The_Smiths", "label": "the smiths"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/associatedBand"}], "id": "40311c537af740a8829bdfa1cfaef4b1"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/United_States_Army_Command_and_General_Staff_College> . ?x <http://dbpedia.org/property/battles> ?uri  . }", "SerialNumber": "2597", "question": "In how many different wars have people graduated from the Army Command and General staff college fought?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Army_Command_and_General_Staff_College", "label": "Army Command"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/almaMater", "label": "graduated from"}, {"uri": "http://dbpedia.org/property/battles", "label": "fought"}], "id": "59c88192a89f429c98c06556c15f3aad"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Street_Dogs_of_South_Central> <http://dbpedia.org/property/narrator> <http://dbpedia.org/resource/Queen_Latifah> }", "SerialNumber": "2599", "question": "Was the street dogs of south central narrated by Queen Latifah?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Street_Dogs_of_South_Central", "label": "street dogs of south central"}, {"uri": "http://dbpedia.org/resource/Queen_Latifah", "label": "Queen Latifah"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/narrator", "label": "narrated"}], "id": "4f51e2f2604c49609c5b28c6d129bf7d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_San_Juan> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch> <http://dbpedia.org/ontology/sport> ?uri . }", "SerialNumber": "2604", "question": "Name the common sports played at Polytechnic University of Philippines San Juan and Islamic Azad University?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_San_Juan", "label": "polytechnic philippines university"}, {"uri": "http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch", "label": "university islamic"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}], "id": "da487a9e2aa64d0d900ccb99d5eb6fc5"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Colin_Brake> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>}", "SerialNumber": "2605", "question": "Who acted in the work written by Colin Brake?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Colin_Brake", "label": "Colin Brake"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/writer", "label": "written by"}, {"uri": "http://dbpedia.org/property/starring", "label": "acted"}, {"uri": "http://dbpedia.org/ontology/Work", "label": "work"}], "id": "ffdb4d5b27464d26bc824dced4615e8c"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Texas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "2608", "question": "Give me a count of companies located in Texas ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Texas", "label": "Texas"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locationCity", "label": "located"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "companies"}], "id": "7ddbd538a02143ec8dc92396be31453e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?uri <http://dbpedia.org/property/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "SerialNumber": "2612", "question": "What are the books written by authors who died in Madrid?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Madrid", "label": "Madrid"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/restingPlace", "label": "died"}, {"uri": "http://dbpedia.org/property/author", "label": "written by"}, {"uri": "http://dbpedia.org/ontology/Book", "label": "book"}], "id": "14c91859f31f43e99bc47c8be8f02f16"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/World_War_I>  . }", "SerialNumber": "2613", "question": "Name  some ww1 veterans?", "entity mapping": [{"uri": "http://dbpedia.org/resource/World_War_I", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/battles", "label": "veterans"}], "id": "d3cc7a7f2f7b40afb2398e62b690580e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Quick_bread> . ?x <http://dbpedia.org/ontology/region> ?uri  . }", "SerialNumber": "2614", "question": "Where can one find some quick bread in the world?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Quick_bread", "label": "quick bread"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/type", "label": "world"}, {"uri": "http://dbpedia.org/ontology/region", "label": "world"}], "id": "b8eb36910321468d898a9e2d1db1d016"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ren\u00e9_Romano> <http://dbpedia.org/property/citizenship> ?uri. <http://dbpedia.org/resource/Tahual> <http://dbpedia.org/property/location> ?uri} ", "SerialNumber": "2616", "question": "Where is Tahual located which is also the country of Ren Romano ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ren\u00e9_Romano", "label": "romano ren"}, {"uri": "http://dbpedia.org/resource/Tahual", "label": "Tahual"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/citizenship", "label": "Romano"}, {"uri": "http://dbpedia.org/property/location", "label": "Romano"}], "id": "37d0eb12d3c94597911b7c985670d4c2"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kariba_Dam> <http://dbpedia.org/ontology/river> ?uri. <http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station> <http://dbpedia.org/ontology/river> ?uri . }", "SerialNumber": "2621", "question": "What is the river on which the Kariba Dam and Batoka Gorge Hydroelectirc power station exist?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kariba_Dam", "label": "Kariba Dam"}, {"uri": "http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/river", "label": "river"}, {"uri": "http://dbpedia.org/ontology/river", "label": "river"}], "id": "f3c826d486634c9d83b4d891f9c0eb35"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony> . ?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/PlayStation_2>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "SerialNumber": "2623", "question": "What is the name of the information appliance by sony whose predecessor is PlayStation 2?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony", "label": "sony"}, {"uri": "http://dbpedia.org/resource/PlayStation_2", "label": "PlayStation 2"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/manufacturer"}, {"uri": "http://dbpedia.org/property/predecessor", "label": "predecessor"}, {"uri": "http://dbpedia.org/ontology/InformationAppliance", "label": "information appliance"}], "id": "070e0e36e87b4eeda426afc352710eae"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/College_Sainte-Marie> <http://dbpedia.org/property/county> <http://dbpedia.org/resource/Mauritius> }", "SerialNumber": "2624", "question": "Is the College Sainte Marie in Mauritius?", "entity mapping": [{"uri": "http://dbpedia.org/resource/College_Sainte-Marie", "label": "college sainte marie"}, {"uri": "http://dbpedia.org/resource/Mauritius", "label": "Mauritius"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/county", "label": "in"}], "id": "e5ba33e4f5e84baba047469c0c00fa35"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/narrated> <http://dbpedia.org/resource/Ringo_Starr> . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}", "SerialNumber": "2625", "question": "Who were the narrators of the albums which had Ringo Starr as one of the narrator ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ringo_Starr", "label": "Ringo Starr"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/narrated", "label": "narrator"}, {"uri": "http://dbpedia.org/property/narrated", "label": "narrator"}, {"uri": "http://dbpedia.org/ontology/Album", "label": "album"}], "id": "661df655b8234afdb7975e82bacf8c18"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Bert_S._Michell> . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RaceHorse>}", "SerialNumber": "2627", "question": "What awards have been given to race horses bred by Bert Michell?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bert_S._Michell", "label": "Bert Michell"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/trainer", "label": "bred"}, {"uri": "http://dbpedia.org/ontology/honours", "label": "awards"}, {"uri": "http://dbpedia.org/ontology/RaceHorse", "label": "race horse"}], "id": "c44d40b04a6344f0b925ae5a869a162e"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Danny_Felice> <http://dbpedia.org/ontology/hometown> ?uri } ", "SerialNumber": "2628", "question": "Danny Felice, the Gibraltarian guitarist is from which city?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Danny_Felice", "label": "Danny Felice"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/hometown", "label": "city"}], "id": "1f283dc1bb87433d804608abb6d42fb9"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bogobiri_House> <http://dbpedia.org/property/locationCity> ?uri } ", "SerialNumber": "2633", "question": "Where is Bogobiri House located ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bogobiri_House", "label": "Bogobiri House"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/locationCity", "label": "located"}], "id": "c6a2f3f300014efbb98edeadddbbd5f5"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands>  . }", "SerialNumber": "2635", "question": "How many areas are led by Willem Alexander?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands", "label": "Willem Alexander"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/leader", "label": "led"}], "id": "672bf19ac1154092909bd114c425c125"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Swahili_language> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }", "SerialNumber": "2636", "question": "What sports are played in schools where Swahili is the official language?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Swahili_language", "label": "language swahili"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/language", "label": "language"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}], "id": "248fbcca0cc84ab7a183eeb56854398e"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Immunology> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}", "SerialNumber": "2637", "question": "Count the awards received by Immunologists?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Immunology", "label": "Immunologi"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/fields", "label": "sts"}, {"uri": "http://dbpedia.org/ontology/award", "label": "awards received"}, {"uri": "http://dbpedia.org/ontology/Award", "label": "awards received"}], "id": "68b2123a04bb4f809d1d4e74e6c6d5a0"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Iowa> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2640", "question": "What is the occupation of the people who are born in Iowa?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Iowa", "label": "Iowa"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/birthPlace", "label": "born in"}, {"uri": "http://dbpedia.org/ontology/occupation", "label": "occupation"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "1e325840e9a4488d9ab113c9cf46d4dd"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Seven_Springs_Mountain_Resort> . ?uri <http://dbpedia.org/property/owner> ?x  . }", "SerialNumber": "2641", "question": "Who holds shares in something famous for the Seven Spring Mountain Resort?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Seven_Springs_Mountain_Resort", "label": "mountain spring resort seven"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/knownFor", "label": "Resort"}, {"uri": "http://dbpedia.org/property/owner", "label": "Resort"}], "id": "5a343f2e17ff49d3abcce067bc9113ca"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Blue_Jacket> . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "2643", "question": "Who all were involved in the wars fought by the commander Blue Jacket?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Blue_Jacket", "label": "Blue Jacket"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/commander", "label": "commander"}, {"uri": "http://dbpedia.org/property/combatant", "label": "fought"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "fought"}], "id": "fa87970fbd454ac58ae0fd59fa7f59ea"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_York_City> . ?uri <http://dbpedia.org/ontology/board> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2644", "question": "What are some people who are on the board of companies founded in NY?", "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_City", "label": "NY"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/foundation", "label": "founded"}, {"uri": "http://dbpedia.org/ontology/board", "label": "board"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "companies"}], "id": "1b7009c254174184a4496ada2462fa8e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Toluca> . ?x <http://dbpedia.org/property/related> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "SerialNumber": "2645", "question": "What are some cars similar to the ones assembled at Toluca?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Toluca", "label": "Toluca"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/assembly", "label": "assembled"}, {"uri": "http://dbpedia.org/property/related", "label": "at"}, {"uri": "http://dbpedia.org/ontology/Automobile", "label": "assembled"}], "id": "37341d4902c249d1a926afdf3ec6895d"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Winston_Bryant> <http://dbpedia.org/property/governor> ?uri. <http://dbpedia.org/resource/Carl_Stokes> <http://dbpedia.org/property/president> ?uri} ", "SerialNumber": "2646", "question": "Which governer of Winston bryant is also the president of Carl Stokes ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Winston_Bryant", "label": "Winston bryant"}, {"uri": "http://dbpedia.org/resource/Carl_Stokes", "label": "Carl Stokes"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/governor", "label": "governer"}, {"uri": "http://dbpedia.org/property/president", "label": "president"}], "id": "edf2e6aeff7841b9bd3da7e23089514b"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eric_Schiller> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri} ", "SerialNumber": "2650", "question": "What sport is Eric Schiller known for, and employes Craig Van Tibury?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Eric_Schiller", "label": "Eric Schiller"}, {"uri": "http://dbpedia.org/resource/Craig_Van_Tilbury", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/knownFor", "label": "known for"}, {"uri": "http://dbpedia.org/ontology/occupation", "label": "Van"}], "id": "eca9dd9de8cf482bad043751461e8aac"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kriminalpolizei> <http://dbpedia.org/ontology/leader> ?uri } ", "SerialNumber": "2651", "question": "Which minister was responsible for Kriminalpolizie?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kriminalpolizei", "label": "Kriminalpolizie"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/leader", "label": "responsible"}], "id": "eb264bdc56224986bac08332b3941a2d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Dead_Sea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "2654", "question": "What is the river whose mouth is in deadsea?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dead_Sea", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/riverMouth", "label": "river mouth"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "d2c55064c2b1442aa5d1e53946aaec43"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Stanley_Kubrick> . ?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Laurie_Johnson>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "2657", "question": "Which Stanley Kubrick's movie has music by Laurie Johnson?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Stanley_Kubrick", "label": "Stanley Kubrick"}, {"uri": "http://dbpedia.org/resource/Laurie_Johnson", "label": "Laurie Johnson"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/director"}, {"uri": "http://dbpedia.org/property/music", "label": "music"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "e18646f7fb64400cbcaff2210d28e040"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Gredelj> . ?x <http://dbpedia.org/ontology/riverMouth> ?uri  . }", "SerialNumber": "2658", "question": "Where does the river flows into, which starts in Gredelj?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gredelj", "label": "Gredelj"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/source", "label": "starts"}, {"uri": "http://dbpedia.org/ontology/riverMouth", "label": "river"}], "id": "6a93144b4a8a49b8b9ea07d4b5392496"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Bare_Necessities> <http://dbpedia.org/ontology/artist> ?uri. <http://dbpedia.org/resource/Rock-a-Doodle> <http://dbpedia.org/ontology/starring> ?uri} ", "SerialNumber": "2662", "question": "What artist was associated closely with the bare necessities and rock a doodle?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Bare_Necessities", "label": "the bare necessities"}, {"uri": "http://dbpedia.org/resource/Rock-a-Doodle", "label": "doodle rock"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/artist", "label": "artist"}, {"uri": "http://dbpedia.org/ontology/starring", "label": "doodle"}], "id": "691beaad90c049ee8b594572b8dbc124"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jason_Carter_(actor)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "2666", "question": "In what tv shows did Jason Carter act?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jason_Carter_(actor)", "label": "Jason Carter"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/starring", "label": "act"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "cdc7afa4efc24c619aebfe90b366a6da"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Spanish_language> . ?uri <http://dbpedia.org/property/author> ?x  . }", "SerialNumber": "2667", "question": "Name some books by Spanish speaking authors.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Spanish_language", "label": "Spanish"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/language", "label": "speaking"}, {"uri": "http://dbpedia.org/property/author", "label": "authors"}], "id": "47bc9fd86bf54061b9df63ac5d6789c1"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_\u2013_Men's_singles> <http://dbpedia.org/ontology/silverMedalist> ?uri. <http://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics> <http://dbpedia.org/property/flagbearer> ?uri} ", "SerialNumber": "2668", "question": "Which  siler medalist of the Tennis at the 2012 Summer Olympics  Men's singles was also the  flagbearer of the Switzerland at the 2008 Summer Olympics", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_\u2013_Men's_singles", "label": "olympics singles tennis summer"}, {"uri": "http://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics", "label": "Switzerland at the 2008 Summer Olympics"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/silverMedalist", "label": "siler medalist"}, {"uri": "http://dbpedia.org/property/flagbearer", "label": "flagbearer"}], "id": "811b775c0148423ebd8f7f213fb6fafa"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/river> <http://dbpedia.org/resource/Pequea_Creek> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "SerialNumber": "2670", "question": "In which states are there bridges over the Pequea Creek?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pequea_Creek", "label": "Pequea Creek"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/river"}, {"uri": "http://dbpedia.org/ontology/state", "label": "state"}, {"uri": "http://dbpedia.org/ontology/Bridge", "label": "bridge"}], "id": "e162c9820c6a4768bf7ffd8afc11a55b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Harvard_Medical_School> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Medician>}", "SerialNumber": "2672", "question": "List the birthplace of the medicians who studied in Harvard.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Harvard_Medical_School", "label": "Harvard"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/institution", "label": "studied"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "birthplace"}, {"uri": "http://dbpedia.org/ontology/Medician", "label": "medician"}], "id": "5313a4dd9c5a451ebf0c06bd24ed2b0a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Texas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "2673", "question": "Name some Texas based companies ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Texas", "label": "Texas"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locationCity", "label": "based"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "companies"}], "id": "07747709891b435d84ae5c14259e92f7"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_Chess> <http://dbpedia.org/property/genre> ?uri. <http://dbpedia.org/resource/New_Zealand_Chess_Federation> <http://dbpedia.org/property/purpose> ?uri} ", "SerialNumber": "2674", "question": "What is common between genre of battle chess and purpose of New Zealand Chess ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Battle_Chess", "label": "battle chess"}, {"uri": "http://dbpedia.org/resource/New_Zealand_Chess_Federation", "label": "zealand chess"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/genre", "label": "genre"}, {"uri": "http://dbpedia.org/property/purpose", "label": "purpose"}], "id": "4ae6b12b53054ad29b07c61a48527249"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010> <http://dbpedia.org/property/incumbent> <http://dbpedia.org/resource/John_Boehner> }", "SerialNumber": "2675", "question": "Was John Boehner the winner of the US House of Representatives elections in Ohio in 2010?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010", "label": "representatives elections house ohio 2010"}, {"uri": "http://dbpedia.org/resource/John_Boehner", "label": "John Boehner"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/incumbent", "label": "Ohio"}], "id": "a1e1a70a1c92405e903356d3f058bda5"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/order> <http://dbpedia.org/resource/Governorate_of_New_Castile> } ", "SerialNumber": "2677", "question": "who is the governer of New Castile?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Governorate_of_New_Castile", "label": "New Castile"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/order", "label": "governer"}], "id": "cb24b43a6ea14f8691476c986fd94deb"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baku_Puppet_Theatre> <http://dbpedia.org/ontology/locationCountry> ?uri. <http://dbpedia.org/resource/Anar_Salmanov> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "SerialNumber": "2678", "question": "In which country is the Baku puppet Theater located which is also the birth palce of Anar Salmanov ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Baku_Puppet_Theatre", "label": "puppet"}, {"uri": "http://dbpedia.org/resource/Anar_Salmanov", "label": "Anar Salmanov"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locationCountry", "label": "country"}, {"uri": "http://dbpedia.org/property/placeOfBirth", "label": "birth"}], "id": "1a35a6119a4a482286916e22a00ff89f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/The_Pentagon> . ?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_Defense>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}", "SerialNumber": "2681", "question": "Which military unit's  garrison is Pentagon and command structure is United States Department of Defense?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Pentagon", "label": "pentagon"}, {"uri": "http://dbpedia.org/resource/United_States_Department_of_Defense", "label": "United States Department of Defense"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/garrison", "label": "garrison"}, {"uri": "http://dbpedia.org/ontology/commandStructure", "label": "command structure"}, {"uri": "http://dbpedia.org/ontology/MilitaryUnit", "label": "military unit"}], "id": "45ef969f39544740a00aabf182833319"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/St._Louis> . ?uri <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Madison_River>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "SerialNumber": "2682", "question": "Which university with athletics department in NCAA Division I Football Bowl Subdivision has nickname Tulane Green Wave ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/St._Louis", "label": ""}, {"uri": "http://dbpedia.org/resource/Madison_River", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/mouthMountain", "label": "Wave"}, {"uri": "http://dbpedia.org/ontology/rightTributary", "label": "Wave"}, {"uri": "http://dbpedia.org/ontology/University", "label": "university"}], "id": "560edd5735a04aed942d6c71d7d47f1f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)> <http://dbpedia.org/property/firstAired> ?uri. <http://dbpedia.org/resource/Ne_daj_se,_Nina> <http://dbpedia.org/property/firstAired> ?uri . }", "SerialNumber": "2685", "question": "Which countries were the first to play Gumus and Ne daj se, Nina?", "entity mapping": [{"uri": "http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)", "label": ""}, {"uri": "http://dbpedia.org/resource/Ne_daj_se,_Nina", "label": "Ne daj se, Nina"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/firstAired", "label": "first"}, {"uri": "http://dbpedia.org/property/firstAired", "label": "first"}], "id": "156a0839803f4a9d9e14200615736044"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_Pius_X> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2686", "question": "Where did the people beatified by Pope Pius X die?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pope_Pius_X", "label": "Pope Pius X"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/beatifiedBy", "label": "beatified by"}, {"uri": "http://dbpedia.org/property/deathPlace", "label": "die"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "die"}], "id": "d5315c64d719430e9602df94b8a89c09"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/firstDriver> <http://dbpedia.org/resource/Damon_Hill> . ?x <http://dbpedia.org/ontology/poleDriver> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}", "SerialNumber": "2689", "question": "Who were the pole drivers in GP when Damon hill was a first driver?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Damon_Hill", "label": "Damon hill"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/firstDriver", "label": "first driver"}, {"uri": "http://dbpedia.org/ontology/poleDriver", "label": "pole driver"}, {"uri": "http://dbpedia.org/ontology/GrandPrix", "label": "GP"}], "id": "0517011b2e174b5cb27a397265665cbd"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Target_Field_(Metro_Transit_station)> <http://dbpedia.org/ontology/owningOrganisation> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . }", "SerialNumber": "2691", "question": "Where is the headquarters of the public transit system which owns Target Field, a Metro Transit Station  ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Target_Field_(Metro_Transit_station)", "label": "Target Field"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owningOrganisation"}, {"uri": "http://dbpedia.org/property/headquarters", "label": "headquarters"}], "id": "4854b75bd8f94014ad4edb9315ad62a4"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Gabriel_Slaughter> <http://dbpedia.org/ontology/governor> ?x . ?x <http://dbpedia.org/ontology/relation> ?uri  . }", "SerialNumber": "2692", "question": "List the relatives of the governor of Gabriel Slaughter?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gabriel_Slaughter", "label": "Gabriel Slaughter"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/governor", "label": "governor"}, {"uri": "http://dbpedia.org/ontology/relation", "label": "relatives"}], "id": "7d303bc28df742ec80b74432bd497aff"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baja_California_Peninsula> <http://dbpedia.org/ontology/location> ?uri. <http://dbpedia.org/resource/WEPG> <http://dbpedia.org/property/city> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Continent>}", "SerialNumber": "2693", "question": "What continent of the world has Baja California peninsula and also has WEPG in one of it's cities?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Baja_California_Peninsula", "label": "Baja California peninsula"}, {"uri": "http://dbpedia.org/resource/WEPG", "label": "WEPG"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/location", "label": "cities"}, {"uri": "http://dbpedia.org/property/city", "label": "in"}, {"uri": "http://dbpedia.org/ontology/Continent", "label": "continent"}], "id": "1afef26545cf4f17bb7933a2939142af"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indian_general_election,_2004_(Delhi)> <http://dbpedia.org/ontology/affiliation> ?uri. <http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)> <http://dbpedia.org/ontology/affiliation> ?uri . }", "SerialNumber": "2694", "question": "Which party won both the general electoin and the andhra pradesh election in 2004?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Delhi)", "label": "election general"}, {"uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)", "label": "election pradesh general"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/affiliation", "label": "election"}, {"uri": "http://dbpedia.org/ontology/affiliation", "label": "election"}], "id": "412afcb751c4440083508ff2aa23abe8"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Virtual_Console>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "SerialNumber": "2695", "question": "How many games are released for virtual consoles?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Virtual_Console", "label": "virtual console"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/computingPlatform", "label": "released"}, {"uri": "http://dbpedia.org/ontology/VideoGame", "label": "games"}], "id": "876a44de32e64aaa9855928c078039df"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Somerville_College,_Oxford> . ?x <http://dbpedia.org/ontology/party> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "2697", "question": "To what political party do the politicians graduated from Somerville college, Oxford belong to?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Somerville_College,_Oxford", "label": "Somerville college, Oxford"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/almaMater", "label": "graduated from"}, {"uri": "http://dbpedia.org/ontology/party", "label": "political party"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "belong"}], "id": "e3a7059770184b25a4d9b0398742786f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wallace_Dollase> <http://dbpedia.org/ontology/deathPlace> ?uri  . }", "SerialNumber": "2698", "question": "Where did Wallace Dollase die?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Wallace_Dollase", "label": "Wallace Dollase"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/deathPlace", "label": "die"}], "id": "8e08009e99dc455d922ce7a0ada9717a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Pope_John_Paul_II> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . }", "SerialNumber": "2699", "question": "Where did the people canonized by John Paul II die?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pope_John_Paul_II", "label": "John Paul II"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/canonizedBy", "label": "canonized by"}, {"uri": "http://dbpedia.org/property/deathPlace", "label": "die"}], "id": "b73c98e1a1cc4ebeb320c1268ec30b4e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Charlie_Mensuel> <http://dbpedia.org/property/editor> ?x . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }", "SerialNumber": "2700", "question": "Where did the editor of Charlie Mensuel die ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Charlie_Mensuel", "label": "Charlie Mensuel"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/editor", "label": "editor"}, {"uri": "http://dbpedia.org/property/placeOfDeath"}], "id": "39963beccde446c8944047f4d4cb3b84"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Denver_Broncos> <http://dbpedia.org/ontology/locationCity> ?uri } ", "SerialNumber": "2702", "question": "Where is Denver Broncos located ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Denver_Broncos", "label": "Denver Broncos"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locationCity", "label": "located"}], "id": "617982e40b1c40909cdb633c1b374e5f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fiq,_Ethiopia> <http://dbpedia.org/ontology/country> ?uri. <http://dbpedia.org/resource/Adugna_Deyas> <http://dbpedia.org/property/birthPlace> ?uri . }", "SerialNumber": "2704", "question": "What is the birthplace of Adugna Deyas and the place where Fiq is located?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fiq,_Ethiopia", "label": ""}, {"uri": "http://dbpedia.org/resource/Adugna_Deyas", "label": "Adugna Deyas"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/country", "label": "located"}, {"uri": "http://dbpedia.org/property/birthPlace", "label": "birthplace"}], "id": "3fab7450096d4585bd162a32f10f08f9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Abdel_Bouckar> <http://dbpedia.org/property/team> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . }", "SerialNumber": "2708", "question": "Where is the team of Abdel Boucker located ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Abdel_Bouckar", "label": "Abdel Boucker"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/team", "label": "team"}, {"uri": "http://dbpedia.org/ontology/location", "label": "located"}], "id": "dc81947e16094c54835cf356fa78365b"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Malaysian_Chinese_Association> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "2711", "question": "Count the different religions practiced by people who are in the Malaysian and Chinese association.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Malaysian_Chinese_Association", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/party", "label": "are"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}], "id": "cf59b2f2f22e46d1af44c855e60632fe"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Don_R._Berlin> <http://dbpedia.org/ontology/employer> ?uri. <http://dbpedia.org/resource/Michael_M._Sears> <http://dbpedia.org/ontology/employer> ?uri . }", "SerialNumber": "2712", "question": "Name few companies where don berlin and michael sears have worked together?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Don_R._Berlin", "label": "berlin don"}, {"uri": "http://dbpedia.org/resource/Michael_M._Sears", "label": "michael sears"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/employer", "label": "worked"}, {"uri": "http://dbpedia.org/ontology/employer", "label": "worked"}], "id": "c9e971b03aac43bcba9df9779256b126"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Svetlana_Navasardyan> <http://dbpedia.org/property/origin> ?uri } ", "SerialNumber": "2713", "question": "To which country is Svetlana Navasardyan from?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Svetlana_Navasardyan", "label": "Svetlana Navasardyan"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/origin", "label": "country"}], "id": "e89c7b6d4201411dadea15fc7a9138db"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Grey_Goose_(vodka)> <http://dbpedia.org/property/manufacturer> ?uri. <http://dbpedia.org/resource/Bombay_Sapphire> <http://dbpedia.org/property/distributor> ?uri} ", "SerialNumber": "2721", "question": "Which distributer of Bombay Sapphire also makes Grewy goose ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Grey_Goose_(vodka)", "label": "goose"}, {"uri": "http://dbpedia.org/resource/Bombay_Sapphire", "label": "Bombay Sapphire"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/manufacturer", "label": "makes"}, {"uri": "http://dbpedia.org/property/distributor", "label": "goose"}], "id": "8e47a69cb3824a16a86d9f02afd2a593"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest> . ?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "2723", "question": "Name the TV show broadcasted by Fox and presented by Ryan Seacrest ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ryan_Seacrest", "label": "Ryan Seacrest"}, {"uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/presenter", "label": "presented"}, {"uri": "http://dbpedia.org/ontology/channel", "label": "Fox"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "679e1082fff84c878024ee1d62389f0b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Graham_Holdings_Company> . ?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Kaplan,_Inc.> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "SerialNumber": "2724", "question": "Which university has affiliations to Graham Holdings and Kaplan, Inc.?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Graham_Holdings_Company", "label": "holdings graham"}, {"uri": "http://dbpedia.org/resource/Kaplan,_Inc.", "label": "Kaplan, Inc."}], "predicate mapping": [{"uri": "http://dbpedia.org/property/affiliations", "label": "affiliations"}, {"uri": "http://dbpedia.org/property/affiliations", "label": "affiliations"}, {"uri": "http://dbpedia.org/ontology/University", "label": "university"}], "id": "fe42aff9ce524c13950df850ed4d0737"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School> . ?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2726", "question": "Name the person who was educated at Harvard-Westlake and won the Screen Actor Guild Life Achievement Award ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Harvard-Westlake_School", "label": "harvard-westlake"}, {"uri": "http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award", "label": "achievement screen guild award actor"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/almaMater", "label": "edu"}, {"uri": "http://dbpedia.org/ontology/award", "label": "Award"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "person"}], "id": "ec4218ce66a54c50ad5b8d8fc802f0e7"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Badminton_at_the_2012_Summer_Olympics_\u2013_Women's_doubles> <http://dbpedia.org/ontology/bronzeMedalist> ?x . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BadmintonPlayer>}", "SerialNumber": "2727", "question": "What is the place of birth of the badminton player who is the bronze medalist of Badminton at the 2012 Summer Olympics  Women's doubles ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Badminton_at_the_2012_Summer_Olympics_\u2013_Women's_doubles", "label": "badminton olympics women's doubles"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/bronzeMedalist", "label": "bronze medalist"}, {"uri": "http://dbpedia.org/property/placeOfBirth", "label": "place of birth"}, {"uri": "http://dbpedia.org/ontology/BadmintonPlayer", "label": "badminton player"}], "id": "18f4530b96d3413c887a761ef3de1cf0"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Bachelor_of_Arts> . ?x <http://dbpedia.org/ontology/residence> ?uri  . }", "SerialNumber": "2728", "question": "Where do bachelor of arts live?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bachelor_of_Arts", "label": "bachelor of arts"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/almaMater", "label": "live"}, {"uri": "http://dbpedia.org/ontology/residence", "label": "live"}], "id": "fc455f282c6549adaa1614637ae68991"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Beverly_Hills,_California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2729", "question": "How many people live in the Beverly Hills, California?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Beverly_Hills,_California", "label": "Beverly Hills, California"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/residence", "label": "live"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "live"}], "id": "1cf3ba4382444e65880adff73f7125e7"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Jadavpur_(Lok_Sabha_constituency)> . ?x <http://dbpedia.org/property/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2734", "question": "Which religion do the people follow, whose constituency is Jadavpur?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jadavpur_(Lok_Sabha_constituency)", "label": "Jadavpur"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/constituency", "label": "constituency"}, {"uri": "http://dbpedia.org/property/religion", "label": "religion"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "08165fd11c3f4e49bdd932736db1e9c3"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/service> <http://dbpedia.org/resource/Office_365> . ?x <http://dbpedia.org/property/services> ?uri  . }", "SerialNumber": "2736", "question": "What other things are provided by the producer of Office 365?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Office_365", "label": "Office 365"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/service", "label": "producer"}, {"uri": "http://dbpedia.org/property/services", "label": "producer"}], "id": "cc70615cda2f4cd19a95e83f87285f3d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Jens_Jensen_(landscape_architect)> . ?uri <http://dbpedia.org/ontology/deathPlace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2738", "question": "Who are the people who died in a place architected by Jens Jensen", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jens_Jensen_(landscape_architect)", "label": "Jens Jensen"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/architect", "label": "architect"}, {"uri": "http://dbpedia.org/ontology/deathPlace", "label": "died in"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "ed"}], "id": "50ba41d267374555bc6bf5c1cf570b75"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Multilingualism> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "SerialNumber": "2739", "question": "What are the software whose programming language are Multilingual?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Multilingualism", "label": "multilingual"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/language", "label": "language"}, {"uri": "http://dbpedia.org/property/programmingLanguage", "label": "programming language"}, {"uri": "http://dbpedia.org/ontology/Software", "label": "software"}], "id": "452343f0f60b42b399b7d2cb29d6bb91"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/A._K._Singh> . ?x <http://dbpedia.org/property/party> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2740", "question": "What is the political party of the person succeeded by A.K. Singh?", "entity mapping": [{"uri": "http://dbpedia.org/resource/A._K._Singh", "label": "A.K. Singh"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/successor", "label": "succeeded"}, {"uri": "http://dbpedia.org/property/party", "label": "political party"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "person"}], "id": "882d32179f904be8b3678aa0b25fb3c7"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Brian_Graden>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "2742", "question": "What tv show is created by Brian Graden?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Brian_Graden", "label": "Brian Graden"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/developer", "label": "created"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "1b967dc18818484ba213913e39ac2215"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ganz_UV> <http://dbpedia.org/ontology/operator> ?uri. <http://dbpedia.org/resource/G\u00e9za_Horv\u00e1th> <http://dbpedia.org/ontology/nationality> ?uri} ", "SerialNumber": "2744", "question": "Which operator of ganz UV is also the nationality of the Gza Horvth ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ganz_UV", "label": "ganz UV"}, {"uri": "http://dbpedia.org/resource/G\u00e9za_Horv\u00e1th", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/operator", "label": "operator"}, {"uri": "http://dbpedia.org/ontology/nationality", "label": "nationality"}], "id": "2cbe6f6028204f2db497e7aa21514cae"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/deathCause> <http://dbpedia.org/resource/Suicide> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }", "SerialNumber": "2745", "question": "What was the career of some people who have committed suicide?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Suicide", "label": "suicide"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/deathCause", "label": "committed"}, {"uri": "http://dbpedia.org/ontology/occupation", "label": "career"}], "id": "9e4c63f453514fb8b3ebf0531dfa0cd7"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alton_Ochsner> <http://dbpedia.org/ontology/institution> ?uri } ", "SerialNumber": "2748", "question": "Name the institute of Alton Ochsner ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Alton_Ochsner", "label": "Alton Ochsner"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/institution", "label": "institute"}], "id": "4ff9b452822549048ab6fb060739559c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)> <http://dbpedia.org/ontology/affiliation> ?uri. <http://dbpedia.org/resource/Indian_general_election,_2009> <http://dbpedia.org/ontology/affiliation> ?uri . }", "SerialNumber": "2750", "question": "Who won the general elections in India in 2009, and had also won the AP elections in 2004 ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)", "label": ""}, {"uri": "http://dbpedia.org/resource/Indian_general_election,_2009", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/affiliation", "label": "elections"}, {"uri": "http://dbpedia.org/ontology/affiliation", "label": "elections"}], "id": "19a01f4fb64d4746969d681e2913f645"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_McGregor> <http://dbpedia.org/ontology/education> ?uri. <http://dbpedia.org/resource/Philip_W._Pillsbury> <http://dbpedia.org/property/education> ?uri} ", "SerialNumber": "2751", "question": "What is the common palce of study for jack McGregor and Philip W. Pillsbury ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jack_McGregor", "label": "jack McGregor"}, {"uri": "http://dbpedia.org/resource/Philip_W._Pillsbury", "label": "Philip W. Pillsbury"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/education", "label": "study"}, {"uri": "http://dbpedia.org/property/education", "label": "study"}], "id": "d0c96c44212d47e1b3ebd9752421d1f7"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Swimming_at_the_2004_Summer_Olympics_\u2013_Men's_100_metre_freestyle> <http://dbpedia.org/ontology/bronzeMedalist> <http://dbpedia.org/resource/Ian_Thorpe> }", "SerialNumber": "2752", "question": "Is Ian Thorpe the bronze medalist of Swimming at the 2004 Summer Olympics  Men's 100 metre freestyle?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Swimming_at_the_2004_Summer_Olympics_\u2013_Men's_100_metre_freestyle", "label": "freestyle swimming olympics summer"}, {"uri": "http://dbpedia.org/resource/Ian_Thorpe", "label": "Ian Thorpe"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/bronzeMedalist", "label": "bronze medalist"}], "id": "c124e98b0ceb4a70a62e4f8655c08c56"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Ann_Arbor,_Michigan> . ?x <http://dbpedia.org/ontology/residence> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2754", "question": "Where can I find people whose hometown is Ann Arbour in Michigan?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ann_Arbor,_Michigan", "label": "michigan"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/homeTown", "label": "hometown"}, {"uri": "http://dbpedia.org/ontology/residence", "label": "Michigan"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "Michigan"}], "id": "95b3fafcb14440d895c1336ced355494"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/billed> <http://dbpedia.org/resource/Norman,_Oklahoma> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Wrestler>}", "SerialNumber": "2759", "question": "Where did the wrestler die who was billed in Norman, Oklahoma?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Norman,_Oklahoma", "label": "Norman, Oklahoma"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/billed", "label": "billed"}, {"uri": "http://dbpedia.org/ontology/deathPlace", "label": "die"}, {"uri": "http://dbpedia.org/ontology/Wrestler", "label": "wrestler"}], "id": "503e2359a25a4b54a614650a40b1ab55"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Commodore_64> . ?x <http://dbpedia.org/property/genre> ?uri  . }", "SerialNumber": "2760", "question": "How many different genres of games can I find which are compatible with the Commodore 64?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Commodore_64", "label": "Commodore 64"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/computingPlatform", "label": "compatible"}, {"uri": "http://dbpedia.org/property/genre", "label": "genre"}], "id": "f30e5b31cebd42fca8e78aee5f693598"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/David_Hume> . ?x <http://dbpedia.org/property/education> ?uri  . }", "SerialNumber": "2761", "question": "Where did the relatives of David Hume study?", "entity mapping": [{"uri": "http://dbpedia.org/resource/David_Hume", "label": "David Hume"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relative", "label": "relative"}, {"uri": "http://dbpedia.org/property/education", "label": "study"}], "id": "6b5ad23d383444478ce3e8e1acbbc649"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet> . ?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg>  . }", "SerialNumber": "2762", "question": "Which producer of Boeing F/A has Dennis Muilenburg as an important person ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dennis_Muilenburg", "label": "Dennis Muilenburg"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/product", "label": "person"}, {"uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet", "label": "person"}, {"uri": "http://dbpedia.org/property/keyPeople", "label": "person"}], "id": "1534fc10e4894ed2b6b0d699ae7dd80c"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jonas_Gahr_St\u00f8re> <http://dbpedia.org/property/constituency> ?uri. <http://dbpedia.org/resource/Sverre_Krogh_Sundb\u00f8> <http://dbpedia.org/property/birthPlace> ?uri} ", "SerialNumber": "2763", "question": "Name the constituency of Jonas Gahr where Sverre Krogh was born ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jonas_Gahr_St\u00f8re", "label": "jonas gahr"}, {"uri": "http://dbpedia.org/resource/Sverre_Krogh_Sundb\u00f8", "label": "sverre krogh"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/constituency", "label": "constituency"}, {"uri": "http://dbpedia.org/property/birthPlace", "label": "born"}], "id": "f67fb0a1674440259432e6bf7019bf1a"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Owyhee_River> <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Oregon> }", "SerialNumber": "2765", "question": "Does the owyhee river flow into oregon?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Owyhee_River", "label": "owyhee river"}, {"uri": "http://dbpedia.org/resource/Oregon", "label": "oregon"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/mouthMountain", "label": "flow"}], "id": "fef9e0b2920a4196a4fb2a73724a9af3"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Convent_of_the_Barefoot_Trinitarians> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "SerialNumber": "2777", "question": "Count all the books written by an author buried in the Convent of Barefoot Trinitarians?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Convent_of_the_Barefoot_Trinitarians", "label": "trinitarians barefoot convent"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/restingPlace", "label": "buried in"}, {"uri": "http://dbpedia.org/ontology/author", "label": "written by"}, {"uri": "http://dbpedia.org/ontology/Book", "label": "book"}], "id": "9615aa0561ce4e4a960d23ede56fc21a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mojo_Priest> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/On_Deadly_Ground> <http://dbpedia.org/property/director> ?uri . }", "SerialNumber": "2778", "question": "Which director of On deadly Ground also released Mojo Priest ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mojo_Priest", "label": "Mojo Priest"}, {"uri": "http://dbpedia.org/resource/On_Deadly_Ground", "label": "On deadly Ground"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/artist", "label": "released"}, {"uri": "http://dbpedia.org/property/director", "label": "director"}], "id": "2a96555f9e0048bbb838499c8484797b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/jurisdiction> <http://dbpedia.org/resource/Nazi_Germany> . ?x <http://dbpedia.org/ontology/leader> ?uri  . }", "SerialNumber": "2779", "question": "Who were some governmental heads in Nazi Germany?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Nazi_Germany", "label": "Nazi Germany"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/jurisdiction", "label": "heads"}, {"uri": "http://dbpedia.org/ontology/leader", "label": "heads"}], "id": "615091ae47f447b2996f509c01cc4b6f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Truckee,_California> . ?uri <http://dbpedia.org/property/voices> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "2781", "question": "What are some TV shows whose voice actors are from Truckee, California, US?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Truckee,_California", "label": "Truckee, California"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/birthPlace", "label": "actors"}, {"uri": "http://dbpedia.org/property/voices", "label": "voice"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "3722e91c57c84a39bac14bfe89532583"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/president> <http://dbpedia.org/resource/Bill_Clinton> . ?uri <http://dbpedia.org/property/successor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "2782", "question": "What is the total number of office holders who preceded the people working under president bill clinton?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bill_Clinton", "label": "bill clinton"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/president", "label": "president"}, {"uri": "http://dbpedia.org/property/successor", "label": "working"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "office holder"}], "id": "ebace02293c84cddabf5803a707d140d"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Wizard_rock> <http://dbpedia.org/ontology/stylisticOrigin> <http://dbpedia.org/resource/Harry_Potter> }", "SerialNumber": "2788", "question": "Is wizard rock inspired from Harry potter?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Wizard_rock", "label": "wizard rock"}, {"uri": "http://dbpedia.org/resource/Harry_Potter", "label": "Harry"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/stylisticOrigin", "label": "potter"}], "id": "4d16a08db93348988792d0efc91d6ae6"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Y-block_engine> <http://dbpedia.org/ontology/manufacturer> ?uri. <http://dbpedia.org/resource/Ford_SHO_V8_engine> <http://dbpedia.org/ontology/manufacturer> ?uri . }", "SerialNumber": "2790", "question": "Who made the Y block engine and the SHO V8 engine?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Y-block_engine", "label": "engine block"}, {"uri": "http://dbpedia.org/resource/Ford_SHO_V8_engine", "label": "engine sho v8"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/manufacturer", "label": "made"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "made"}], "id": "ae24568ec2e94bb3b2c5de7ef38478e5"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Fantasy> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . }", "SerialNumber": "2793", "question": "How many subjects have been covered in fantasy novels?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fantasy", "label": "fantasy"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/literaryGenre", "label": "novels"}, {"uri": "http://dbpedia.org/ontology/nonFictionSubject", "label": "subjects"}], "id": "7b67e23763bd4b55a7a2c6e9ad44b195"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri. <http://dbpedia.org/resource/Antoine_Bibeau> <http://dbpedia.org/property/draftTeam> ?uri} ", "SerialNumber": "2798", "question": "Name the tenants of MAsterCard center wich is also the draft team of Antoine Bibeau?", "entity mapping": [{"uri": "http://dbpedia.org/resource/MasterCard_Centre", "label": "mastercard"}, {"uri": "http://dbpedia.org/resource/Antoine_Bibeau", "label": "Antoine Bibeau"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/tenants", "label": "tenants"}, {"uri": "http://dbpedia.org/property/draftTeam", "label": "draft team"}], "id": "3a34f7c15c0e48bba64cbc21b231ee6b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Patr\u00edcia_Amorim> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>}", "SerialNumber": "2799", "question": "Which teams participate in the football seasons headed by Patricia Amorim?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Patr\u00edcia_Amorim", "label": "Patricia Amorim"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/chairman", "label": "headed"}, {"uri": "http://dbpedia.org/property/name", "label": "headed"}, {"uri": "http://dbpedia.org/ontology/SportsSeason", "label": "seasons"}], "id": "d5c6186b35e84d629ac4471b606ac5ea"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Percy_Fitzwallace> <http://dbpedia.org/property/battles> ?uri } ", "SerialNumber": "2801", "question": "In which wars did Percy Fitzwallace fight?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Percy_Fitzwallace", "label": "Percy Fitzwallace"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/battles", "label": "fight"}], "id": "826719619f624cc08c74945255b6df1d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)>  . }", "SerialNumber": "2804", "question": "Who are some US colonels?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Colonel_(United_States)", "label": "colonel"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/rank"}], "id": "c07f906674b1433bbb4e9555d8ff28a4"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Elizabeth_II>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "SerialNumber": "2805", "question": "How many places were ruled by Elizabeth II?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Elizabeth_II", "label": "Elizabeth II"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/leaderName", "label": "ruled"}, {"uri": "http://dbpedia.org/ontology/Place", "label": "place"}], "id": "ccaaf32b5f0f46d699458212fd57221a"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Julius_C._Burrows> <http://dbpedia.org/property/order> ?uri } ", "SerialNumber": "2808", "question": "What is the rank of Julius C. Burrows politically?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Julius_C._Burrows", "label": "Julius C. Burrows"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/order", "label": "politically"}], "id": "5a6ec3749e5e4c7ab7af6a94563ea793"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/training> <http://dbpedia.org/resource/Art_Students_League_of_New_York> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "SerialNumber": "2811", "question": "Artists trained at art students league NY are buried where?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Art_Students_League_of_New_York", "label": "NY"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/training", "label": "trained"}, {"uri": "http://dbpedia.org/ontology/restingPlace", "label": "buried"}, {"uri": "http://dbpedia.org/ontology/Artist", "label": "Artist"}], "id": "5bc9919a43db4252ba6316057cf3b8e0"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Monta\u00f1as_Mayas_Chiquibul> <http://dbpedia.org/property/country> ?uri. <http://dbpedia.org/resource/Jos\u00e9_Bernardo_Escobar> <http://dbpedia.org/property/birthPlace> ?uri . }", "SerialNumber": "2816", "question": "Which country of Montaas Mayas Chiquibul is the birth place of Jos Bernardo Escobar?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Monta\u00f1as_Mayas_Chiquibul", "label": "chiquibul"}, {"uri": "http://dbpedia.org/resource/Jos\u00e9_Bernardo_Escobar", "label": "bernardo escobar"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/country", "label": "country"}, {"uri": "http://dbpedia.org/property/birthPlace", "label": "birth place"}], "id": "3c710b7cf9c740f1ab2af4ee8e84d4db"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Francisco_Pizarro> <http://dbpedia.org/ontology/monarch> <http://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor> }", "SerialNumber": "2817", "question": "Was Francisco Pizarro of the monarch of Charles 5, of the roman empire?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Francisco_Pizarro", "label": "Francisco Pizarro"}, {"uri": "http://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor", "label": "charles roman"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/monarch", "label": "monarch"}], "id": "8cd244d8962b4f808264a0ce811cf46a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kim_Sawchuk> <http://dbpedia.org/property/region> ?uri. <http://dbpedia.org/resource/Vuelta_Mexico_Telmex> <http://dbpedia.org/property/region> ?uri . }", "SerialNumber": "2828", "question": "In which part of the world will I find Kim Sawchuk and Vuelta Mexico Telmex?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kim_Sawchuk", "label": "Kim Sawchuk"}, {"uri": "http://dbpedia.org/resource/Vuelta_Mexico_Telmex", "label": "Vuelta Mexico Telmex"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/region", "label": "find"}, {"uri": "http://dbpedia.org/property/region", "label": "find"}], "id": "7a206da5629442c7a1853a9b62464368"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/EXperimental_Computing_Facility> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>}", "SerialNumber": "2829", "question": "List everything written in languages developed by EXperimental Computing Facility?", "entity mapping": [{"uri": "http://dbpedia.org/resource/EXperimental_Computing_Facility", "label": "EXperimental Computing Facility"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/author", "label": "developed"}, {"uri": "http://dbpedia.org/property/programmingLanguage", "label": "languages"}, {"uri": "http://dbpedia.org/ontology/Work", "label": "developed"}], "id": "9c31f5b82f7345a08d1845c0744d8eac"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Me_and_My_Arrow> <http://dbpedia.org/ontology/album> ?x . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}", "SerialNumber": "2830", "question": "Who is the singer of the album which has a song Me and My arrow ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Me_and_My_Arrow", "label": "Me and My arrow"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/album", "label": "album"}, {"uri": "http://dbpedia.org/property/narrated", "label": "song"}, {"uri": "http://dbpedia.org/ontology/Album", "label": "album"}], "id": "5e40045c1ab34eae8400e7bb2de5784d"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/The_Band> . ?x <http://dbpedia.org/ontology/subsequentWork> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}", "SerialNumber": "2833", "question": "How many albums did the maker of The Band produce?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Band", "label": "The Band"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/artist", "label": "Band"}, {"uri": "http://dbpedia.org/ontology/subsequentWork", "label": "produce"}, {"uri": "http://dbpedia.org/ontology/Album", "label": "album"}], "id": "f08d139cd5f1417a98264657c0c71637"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Fantasy> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "SerialNumber": "2837", "question": "What are some non fiction subjects dealt with in fantasy novels?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fantasy", "label": "fantasy"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/literaryGenre", "label": "novels"}, {"uri": "http://dbpedia.org/ontology/nonFictionSubject", "label": "fiction"}, {"uri": "http://dbpedia.org/ontology/Book", "label": "novels"}], "id": "42fdd268b8604dadbb164492ae3450eb"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_St._Clair> . ?x <http://dbpedia.org/property/combatant> ?uri  . }", "SerialNumber": "2840", "question": "Who has fought in wars under commander Arthur St Clair?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Arthur_St._Clair", "label": "Arthur St Clair"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/commander", "label": "commander"}, {"uri": "http://dbpedia.org/property/combatant", "label": "wars"}], "id": "14ded43faabe4a51af41cfafc21363c2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Immunology> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "SerialNumber": "2841", "question": "Which awards have been given to immunologists?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Immunology", "label": "immunologi"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/fields", "label": "sts"}, {"uri": "http://dbpedia.org/ontology/award", "label": "awards"}], "id": "61573482fe9745b38c65109394bdc050"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Foxconn>  . }", "SerialNumber": "2848", "question": "Foxconn makes how many things?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Foxconn", "label": "Foxconn"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/manufacturer", "label": "things"}], "id": "785671e67373470d82a70c72bbe1184d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Deborah_Turness> . ?uri <http://dbpedia.org/ontology/network> ?x  . }", "SerialNumber": "2850", "question": "What is telecasted on the network where Deborah Turness holds important position?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Deborah_Turness", "label": "Deborah Turness"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/keyPerson", "label": "position"}, {"uri": "http://dbpedia.org/ontology/network", "label": "network"}], "id": "b46c1b706504419494f4cccf84754e62"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/place> <http://dbpedia.org/resource/New_York_City> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Play>}", "SerialNumber": "2851", "question": "Which actors have performed in plays performed in New York?", "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_City", "label": "New York"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/place"}, {"uri": "http://dbpedia.org/property/starring", "label": "actor"}, {"uri": "http://dbpedia.org/ontology/Play", "label": "play"}], "id": "da4845645dbf4dd5b072c54980634196"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Fran\u00e7ois_Hollande> . ?x <http://dbpedia.org/ontology/currency> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "SerialNumber": "2852", "question": "What currencies are used in the countries which have been governed by Francois Hollande?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fran\u00e7ois_Hollande", "label": "Francois Hollande"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/leader", "label": "governed"}, {"uri": "http://dbpedia.org/ontology/currency", "label": "currencies"}, {"uri": "http://dbpedia.org/ontology/Country", "label": "land"}], "id": "dcae078ebdd74499a63310fa184928ff"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Episcopal_Church_(United_States)> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "2855", "question": "Where did the office holder died who also have faith in Episcopal Church ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Episcopal_Church_(United_States)", "label": "Episcopal Church"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/religion", "label": "faith"}, {"uri": "http://dbpedia.org/ontology/deathPlace", "label": "died"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "office holder"}], "id": "52e919158ffa4ce9bdb2817cebd96da5"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Prime_Minister's_House_(Colombo)> . ?uri <http://dbpedia.org/ontology/leader> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}", "SerialNumber": "2861", "question": "What are the political parties whose leaders have lived in the Prime Minister's House?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Prime_Minister's_House_(Colombo)", "label": "Prime Minister's House"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/residence", "label": "lived"}, {"uri": "http://dbpedia.org/ontology/leader", "label": "leader"}, {"uri": "http://dbpedia.org/ontology/PoliticalParty", "label": "political"}], "id": "d7c709165e3246d1b9cbeb191dd2c877"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Jennifer_Lopez> . ?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Brian_Dunkleman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "2863", "question": "Name a TV show judged by Jennifier Lopez and presented by Brian Dunkleman ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jennifer_Lopez", "label": ""}, {"uri": "http://dbpedia.org/resource/Brian_Dunkleman", "label": "Brian Dunkleman"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/judges", "label": "judged"}, {"uri": "http://dbpedia.org/property/presenter", "label": "presented"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "be2a715e677a435cabaf67c8f17f8a02"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Chiva_bus> <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/Ford_Motor_Company> }", "SerialNumber": "2864", "question": "Is the Chiva Bus by the Ford Motor Company?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chiva_bus", "label": "Chiva Bus"}, {"uri": "http://dbpedia.org/resource/Ford_Motor_Company", "label": "Ford Motor Company"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/automobilePlatform"}], "id": "92cd517187c04052aa28c65e8e7ba93e"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/race> <http://dbpedia.org/resource/Breeders'_Cup_Turf> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }", "SerialNumber": "2865", "question": "From how many different places have participants of Breeders's Cup Turf come?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Breeders'_Cup_Turf", "label": "Cup Turf"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/race", "label": "participants"}, {"uri": "http://dbpedia.org/property/birthPlace", "label": "places"}], "id": "13648ac67f4843b3ad93c7137fcb34bd"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/2009_FIFA_Club_World_Cup_squads> <http://dbpedia.org/ontology/currentMember> <http://dbpedia.org/resource/Lionel_Messi> }", "SerialNumber": "2866", "question": "Was Lionel Messi a member  of the 2009 FIFA World Cup squads?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2009_FIFA_Club_World_Cup_squads", "label": "squads world fifa 2009"}, {"uri": "http://dbpedia.org/resource/Lionel_Messi", "label": "Lionel Messi"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/currentMember", "label": "member"}], "id": "3e2b19f37e1342c5a7856184624b9fd1"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Jim_Harris_(entrepreneur)> . ?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Harris_County,_Texas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "2867", "question": "Name the company founded by Jim Harris located in Harris County, Texas ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)", "label": "Jim Harris"}, {"uri": "http://dbpedia.org/resource/Harris_County,_Texas", "label": "Harris County, Texas"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/foundedBy", "label": "founded by"}, {"uri": "http://dbpedia.org/ontology/locationCity", "label": "located"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "30679d014e3749319a88ec1614bdb393"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Virtual_Console> . ?uri <http://dbpedia.org/property/composer> <http://dbpedia.org/resource/Hirokazu_Tanaka>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "SerialNumber": "2868", "question": "Which video game composed by Hirokazu Tanaka can be played on virtual Console ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Virtual_Console", "label": "virtual Console"}, {"uri": "http://dbpedia.org/resource/Hirokazu_Tanaka", "label": "Hirokazu Tanaka"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/computingPlatform", "label": "played"}, {"uri": "http://dbpedia.org/property/composer", "label": "composed"}, {"uri": "http://dbpedia.org/ontology/VideoGame", "label": "video game"}], "id": "b9faf98cfa3b43fb928d2b9eb258ae41"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WBIG-FM> <http://dbpedia.org/ontology/programmeFormat> ?uri } ", "SerialNumber": "2870", "question": "what kind of things play on WBIG FM?", "entity mapping": [{"uri": "http://dbpedia.org/resource/WBIG-FM", "label": "wbig fm"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/programmeFormat"}], "id": "84f0e1da1e174000b08ae2510b0bf079"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Derick_Heathcoat-Amory,_1st_Viscount_Amory> . ?x <http://dbpedia.org/property/primeminister> ?uri  . }", "SerialNumber": "2872", "question": "Who was the prime minister under which the predecessor of Derick Heathcoat Amory served?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Derick_Heathcoat-Amory,_1st_Viscount_Amory", "label": "Derick Heathcoat Amory"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/successor", "label": "served"}, {"uri": "http://dbpedia.org/property/primeminister", "label": "minister prime"}], "id": "ae588c3050cf4a769d629c8c2ecc8893"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Dhoondte_Reh_Jaaoge!_(1998_film)> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2874", "question": "What are the birth place of the people who are the star of Dhoondte Reh Jaaoge?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dhoondte_Reh_Jaaoge!_(1998_film)", "label": "Dhoondte Reh Jaaoge"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/starring", "label": "star"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "birth place"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "bac4ecaac8954b3d83266bf1363bd5c8"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Drayton> <http://dbpedia.org/property/appointer> ?uri. <http://dbpedia.org/resource/George_Madison> <http://dbpedia.org/ontology/relation> ?uri} ", "SerialNumber": "2877", "question": "Which relative of George Madison is the appointer of John Drayton ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Drayton", "label": "John Drayton"}, {"uri": "http://dbpedia.org/resource/George_Madison", "label": "George Madison"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/appointer", "label": "appointer"}, {"uri": "http://dbpedia.org/ontology/relation", "label": "relative"}], "id": "7507c5dcd77b4a1f8662415059e43340"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Geoffrey_Burgon> . ?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Julian_Doyle_(filmmaker)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "2879", "question": "List the movies edited by Julian Doyle in which music was composed by Geoffrey Brugon ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Geoffrey_Burgon", "label": "geoffrey"}, {"uri": "http://dbpedia.org/resource/Julian_Doyle_(filmmaker)", "label": "Julian Doyle"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/music", "label": "music"}, {"uri": "http://dbpedia.org/property/editing", "label": "edited by"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "0881b71d464e4be09d6650e2467d8008"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Commodore_64> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "SerialNumber": "2886", "question": "What genres of games are available on the Commodore 64?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Commodore_64", "label": "Commodore 64"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/computingPlatform"}, {"uri": "http://dbpedia.org/property/genre", "label": "genre"}, {"uri": "http://dbpedia.org/ontology/VideoGame", "label": "games"}], "id": "692a622dfa204b6faf27d4609436b8ae"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Vandenberg_Air_Force_Base> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "2888", "question": "How many companies have launched their rockets from the Vandenerg Air base?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Vandenberg_Air_Force_Base", "label": "Vandenerg Air"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/launchSite", "label": "launched"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "base"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "companies"}], "id": "bdf990ee5daf4f10a200bcfd984e01f6"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Congress_of_Industrial_Organizations> <http://dbpedia.org/property/founded> ?uri. <http://dbpedia.org/resource/Pittsburgh_Steelers> <http://dbpedia.org/property/city> ?uri} ", "SerialNumber": "2892", "question": "In which city of Pittsburg Steelers was the Congress of Inductrial Organization founded ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Congress_of_Industrial_Organizations", "label": "organization"}, {"uri": "http://dbpedia.org/resource/Pittsburgh_Steelers", "label": "Pittsburg Steelers"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/founded", "label": "founded"}, {"uri": "http://dbpedia.org/property/city", "label": "city"}], "id": "2e984fcd973d4c79ae9ab371222218af"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Duane_Allman> <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_SG> }", "SerialNumber": "2894", "question": "Was Duanne Allman famous for playing the Gibson SG?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Duane_Allman", "label": "allman"}, {"uri": "http://dbpedia.org/resource/Gibson_SG", "label": "Gibson SG"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/notableInstruments", "label": "playing"}], "id": "fdb525be2aca4cfda57372b41b1b6b79"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Betsy's_Wedding> <http://dbpedia.org/ontology/starring> ?uri. <http://dbpedia.org/resource/Sixteen_Candles> <http://dbpedia.org/property/starring> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "2895", "question": "List the people casted in Betsy's Wedding and 16 candles?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Betsy's_Wedding", "label": "Betsy's Wedding"}, {"uri": "http://dbpedia.org/resource/Sixteen_Candles", "label": "candles"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/starring", "label": "candles"}, {"uri": "http://dbpedia.org/property/starring", "label": "candles"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "candles"}], "id": "7d51f1bf12ac4424b780213dac02bcb2"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Nebraska> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }", "SerialNumber": "2898", "question": "For how many things are people famous, who were born in Nebraska?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Nebraska", "label": "Nebraska"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/birthPlace", "label": "born in"}, {"uri": "http://dbpedia.org/ontology/knownFor", "label": "people"}], "id": "77907c919f714ac4ac233e3c93545099"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/settlementType> <http://dbpedia.org/resource/Provinces_of_Zambia> . ?uri <http://dbpedia.org/ontology/sourceRegion> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "2902", "question": "Which rivers start from the Provinces of Zambia?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Provinces_of_Zambia", "label": "Provinces of Zambia"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/settlementType", "label": "start"}, {"uri": "http://dbpedia.org/ontology/sourceRegion", "label": "start"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "436413f766614075bd1ac508ff48ff64"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Screenwriter> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "SerialNumber": "2906", "question": "What awards have been given to some screenwriters?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Screenwriter", "label": "screenwriter"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/occupation"}, {"uri": "http://dbpedia.org/ontology/award", "label": "awards"}], "id": "9d4bc4521629455eae2f5b6be2f76dc2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Henry_Bourchier,_1st_Earl_of_Essex> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . }", "SerialNumber": "2909", "question": "Where is the spouse of Henry Bourchier of Essex buried?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Henry_Bourchier,_1st_Earl_of_Essex", "label": "bourchier henry essex"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/spouse", "label": "spouse"}, {"uri": "http://dbpedia.org/property/placeOfBurial", "label": "buried"}], "id": "b38a612b13ec49d4b8be8365b8a0d89b"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/screenplay> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "2912", "question": "How many movies have a screenplay located in the States?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": "States"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/birthPlace", "label": "located"}, {"uri": "http://dbpedia.org/property/screenplay", "label": "screenplay"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "20c51164ad5a4b42acd9a417f6770edc"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/McKechnie_Field> <http://dbpedia.org/property/architect> ?uri } ", "SerialNumber": "2913", "question": "Which companies were behind the renovation of McKechnie Field ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/McKechnie_Field", "label": "McKechnie Field"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/architect", "label": "renovation"}], "id": "691ab450f3054f89b7b59afe0c27f96f"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/LoDaisKa_Site> <http://dbpedia.org/ontology/nearestCity> ?uri } ", "SerialNumber": "2920", "question": "what cities are close by LoDaisKa ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/LoDaisKa_Site", "label": "lodaiska"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/nearestCity", "label": "are"}], "id": "c1aabd659ada47e2b412d630a3a3814b"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Letitia_MacTavish_Hargrave> <http://dbpedia.org/ontology/deathCause> ?uri. <http://dbpedia.org/resource/Sextus_Barbour> <http://dbpedia.org/property/deathCause> ?uri} ", "SerialNumber": "2921", "question": "Why did Letita McTavish Hargrave and Sextus Barbour die?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Letitia_MacTavish_Hargrave", "label": ""}, {"uri": "http://dbpedia.org/resource/Sextus_Barbour", "label": "Sextus Barbour"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/deathCause", "label": "die"}, {"uri": "http://dbpedia.org/property/deathCause", "label": "die"}], "id": "7d39f4c231f744dfb4e0f7f5f4f15b7f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> . ?uri <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/Software_as_a_service>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "SerialNumber": "2924", "question": "List the softwares which runs on Microsoft Windows and has license as Software as a service?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Windows", "label": "Microsoft Windows"}, {"uri": "http://dbpedia.org/resource/Software_as_a_service", "label": "Software as a service"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/operatingSystem", "label": "runs"}, {"uri": "http://dbpedia.org/ontology/license", "label": "license"}, {"uri": "http://dbpedia.org/ontology/Software", "label": "software"}], "id": "29584b2edbec44168d3adb4cd1d3f20f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/The_CW> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "2926", "question": "What are the TV shows whose network is also known as the CW?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_CW", "label": "the CW"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/sisterNames", "label": "known"}, {"uri": "http://dbpedia.org/property/network", "label": "network"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "a6de49d9743f440db28ce26337d15730"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "2927", "question": "What are some tv shows created by Simon Fuller?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Simon_Fuller", "label": "Simon Fuller"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/creator", "label": "created"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "created"}], "id": "ce328b878c624b718d5f92fe48d01626"}, {"sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/Basketball> . ?x <http://dbpedia.org/property/athletics> ?uri }", "SerialNumber": "2928", "question": "Count the number of sports played by the universities whose one of the sports is baketball ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Basketball", "label": "one"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/athletics", "label": "baketball"}, {"uri": "http://dbpedia.org/property/athletics", "label": "baketball"}], "id": "f250fdf5363442e1a68b1575a75f7649"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Esnault-Pelterie_R.E.P._1> <http://dbpedia.org/property/manufacturer> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }", "SerialNumber": "2929", "question": "Where was the engineer born who manufactured EP R.E.P. 1?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Esnault-Pelterie_R.E.P._1", "label": "1"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/manufacturer", "label": "manufactured"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "EP"}], "id": "c5ad9696ccbc49d48f66061c12d9fce0"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/Columbia_Records> . ?x <http://dbpedia.org/ontology/employer> ?uri  . }", "SerialNumber": "2931", "question": "Where has the employee of Columbia Records  worked ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Columbia_Records", "label": "Columbia Records"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/employer", "label": "worked"}, {"uri": "http://dbpedia.org/ontology/employer", "label": "worked"}], "id": "91fac607c06844458a5a93efbc30e6cb"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/Taekwondo> . ?x <http://dbpedia.org/property/athletics> ?uri  . }", "SerialNumber": "2933", "question": "What are the sports played by the universities who also plays taekwondo ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Taekwondo", "label": "taekwondo"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/athletics", "label": "plays"}, {"uri": "http://dbpedia.org/property/athletics", "label": "plays"}], "id": "574c7a40663240129e6f74a6c30fa086"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica> . ?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Erich_Bagge> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "SerialNumber": "2937", "question": "Under which scientist did doctoral students erban ieica and Erich Bagge study?", "entity mapping": [{"uri": "http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica", "label": ""}, {"uri": "http://dbpedia.org/resource/Erich_Bagge", "label": "Erich Bagge"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/doctoralStudents", "label": "doctoral students"}, {"uri": "http://dbpedia.org/property/doctoralStudents", "label": "doctoral students"}, {"uri": "http://dbpedia.org/ontology/Scientist", "label": "scientist"}], "id": "5f766cb18b93417495ec541e7749269c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Peter_Frampton> . ?uri <http://dbpedia.org/property/associatedActs> ?x  . }", "SerialNumber": "2938", "question": "Who did the associated act which is a Peter Frampton production ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Peter_Frampton", "label": "Peter Frampton"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/producer", "label": "production"}, {"uri": "http://dbpedia.org/property/associatedActs", "label": "associated act"}], "id": "c34a5952b1a648adbac30cc484fc4092"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Yosemite_National_Park> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . }", "SerialNumber": "2939", "question": "Give me list of people who were the first to climb a peak in the Yosemite park?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Yosemite_National_Park", "label": "yosemite park"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locatedInArea", "label": "in"}, {"uri": "http://dbpedia.org/ontology/firstAscentPerson", "label": "first"}], "id": "47d731bad7474102bd95407a15b6f410"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Richmond_Park> . ?x <http://dbpedia.org/property/mouthLocation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stream>}", "SerialNumber": "2943", "question": "Where does the river end which starts in Richmond Park?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Richmond_Park", "label": "Richmond Park"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourcePlace", "label": "starts"}, {"uri": "http://dbpedia.org/property/mouthLocation", "label": "starts"}, {"uri": "http://dbpedia.org/ontology/Stream", "label": "starts"}], "id": "6611d96f0da74bd29467f037c7bc8e9c"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/ontology/relatedMeanOfTransportation> <http://dbpedia.org/resource/Kia_Sportage> }", "SerialNumber": "2945", "question": "Is the Kia Sportage similar to the Hyundai Lavita?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Hyundai_Lavita", "label": "Hyundai Lavita"}, {"uri": "http://dbpedia.org/resource/Kia_Sportage", "label": "Kia Sportage"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relatedMeanOfTransportation"}], "id": "fc606b3fc3404643a264ed538a54c5c2"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Russia_women's_national_volleyball_team> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "SerialNumber": "2947", "question": "How many nations' volleyball players have played for the Russian women volleyball team?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Russia_women's_national_volleyball_team", "label": "Russian"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/nationalteam", "label": "nations'"}, {"uri": "http://dbpedia.org/property/placeOfBirth"}, {"uri": "http://dbpedia.org/ontology/Country", "label": "nation"}], "id": "3778cf6328e9432b8c36e0c47ae65f85"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mumbai_Vadodara_Expressway> <http://dbpedia.org/ontology/routeEnd> ?uri. <http://dbpedia.org/resource/East_Indies_Station> <http://dbpedia.org/ontology/garrison> ?uri} ", "SerialNumber": "2948", "question": "Which garrison of East Indies Station is also the route end of Mumbai Vadodara Express ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mumbai_Vadodara_Expressway", "label": "vadodara express mumbai"}, {"uri": "http://dbpedia.org/resource/East_Indies_Station", "label": "East Indies Station"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/routeEnd", "label": "route end"}, {"uri": "http://dbpedia.org/ontology/garrison", "label": "garrison"}], "id": "1db09b3583d54788bc6313956b79499f"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Banlung> <http://dbpedia.org/ontology/timeZone> ?uri } ", "SerialNumber": "2949", "question": "Name the tiemzone of Banlung ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Banlung", "label": "Banlung"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/timeZone"}], "id": "ae2e45495c164835a9538dec49cb3cd3"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Ford_SHO_V6_engine> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engine>}", "SerialNumber": "2950", "question": "Who made the engine whose predecessor is the SHO V6?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_SHO_V6_engine", "label": "engine sho"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/predecessor", "label": "predecessor"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "made"}, {"uri": "http://dbpedia.org/ontology/Engine", "label": "engine"}], "id": "fccee4f131814d4c999faf99f9c8a641"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mauritius> <http://dbpedia.org/property/governmentType> <http://dbpedia.org/resource/Parliamentary_republic> }", "SerialNumber": "2951", "question": "Does Mauritius follow a parliamentary republic?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mauritius", "label": "Mauritius"}, {"uri": "http://dbpedia.org/resource/Parliamentary_republic", "label": "parliamentary republic"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/governmentType", "label": "follow"}], "id": "1d52560a0c664dd69770aed6f1cd971b"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/King_Crimson> . ?x <http://dbpedia.org/ontology/recordedIn> ?uri  . }", "SerialNumber": "2952", "question": "In how many places was the album of King Crimson recorded?", "entity mapping": [{"uri": "http://dbpedia.org/resource/King_Crimson", "label": "King Crimson"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/artist", "label": "album"}, {"uri": "http://dbpedia.org/ontology/recordedIn", "label": "recorded"}], "id": "a44318040305431cb237c6809f2a8e7c"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "SerialNumber": "2954", "question": "In how many teams have people previously played who play as defencemen?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Defenceman", "label": "previously"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/position", "label": "play"}, {"uri": "http://dbpedia.org/ontology/formerTeam", "label": "teams"}, {"uri": "http://dbpedia.org/ontology/SportsTeam", "label": "team"}], "id": "907d667fb8614bfdbc8a5ce883fa99bd"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_(mother_of_Jesus)>  . }", "SerialNumber": "2961", "question": "What is the name of Mary's divine child?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mary_(mother_of_Jesus)", "label": "Mary"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/parent"}], "id": "3609e1969825458f81798bea8a86a387"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Gary_Portnoy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "2964", "question": "Among which sitcoms in which theme music is composed by Gary Portnoy is located in Massachusetts ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Massachusetts", "label": "Massachusetts"}, {"uri": "http://dbpedia.org/resource/Gary_Portnoy", "label": "Gary Portnoy"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/location", "label": "located"}, {"uri": "http://dbpedia.org/property/themeMusicComposer", "label": "composed"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "located"}], "id": "44e437e237a94b7abe806fcc1f7ae2e4"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Cable-stayed_bridge> . ?x <http://dbpedia.org/property/crosses> ?uri  . }", "SerialNumber": "2965", "question": "Over which rivers, does a cable stayed bridge exists?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cable-stayed_bridge", "label": "cable stayed bridge"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/design", "label": "exists"}, {"uri": "http://dbpedia.org/property/crosses", "label": "Over"}], "id": "3dd19cd66683497889c840e33ab0e00d"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Steve_Burke_(businessman)> . ?uri <http://dbpedia.org/ontology/network> ?x  . }", "SerialNumber": "2966", "question": "Give me everything owned by networks which is lead by Steve Burke?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Steve_Burke_(businessman)", "label": "Steve Burke"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/keyPerson", "label": "lead"}, {"uri": "http://dbpedia.org/ontology/network", "label": "network"}], "id": "3dbc2bb2e2064e068bbd736158623ba3"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Ontario> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>}", "SerialNumber": "2967", "question": "Ontario's ice hockey players have been a part of which teams?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ontario", "label": "Ontario"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBirth"}, {"uri": "http://dbpedia.org/ontology/team", "label": "team"}, {"uri": "http://dbpedia.org/ontology/IceHockeyPlayer", "label": "ice hockey player"}], "id": "471a1edfae9f4e0b86d10cce7f064dd3"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/United_States_Army_Command_and_General_Staff_College> . ?x <http://dbpedia.org/property/battles> ?uri  . }", "SerialNumber": "2969", "question": "List the battles in which alumni of US Army Command and General Staff College fought?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Army_Command_and_General_Staff_College", "label": "general command college staff"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/almaMater", "label": "alumni of"}, {"uri": "http://dbpedia.org/property/battles", "label": "battles"}], "id": "39b773349eeb4776848bd72b621b281a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Esther_Alder> . ?uri <http://dbpedia.org/ontology/neighboringMunicipality> <http://dbpedia.org/resource/Pregny-Chamb\u00e9sy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}", "SerialNumber": "2971", "question": "Name the city with leader as Esther Alder and neighboring municipality as Pregny-Chambsy?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Esther_Alder", "label": "Esther Alder"}, {"uri": "http://dbpedia.org/resource/Pregny-Chamb\u00e9sy", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/mayor", "label": "leader"}, {"uri": "http://dbpedia.org/ontology/neighboringMunicipality", "label": "neighboring municipality"}, {"uri": "http://dbpedia.org/ontology/Location", "label": ""}], "id": "928515f8deaa4a1b9982acd9bd90e877"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mekong_River_Commission> <http://dbpedia.org/property/membership> ?uri } ", "SerialNumber": "2973", "question": "List all the mmebers of  Mekong River Commission?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mekong_River_Commission", "label": "Mekong River Commission"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/membership"}], "id": "3720fc28f3f94a57bdf95083816cdf8a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Paul_Demi\u00e9ville> <http://dbpedia.org/ontology/academicAdvisor> ?x . ?x <http://dbpedia.org/property/fields> ?uri  . }", "SerialNumber": "2974", "question": "What are the academic interests of the advisor of Paul Demiville ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Demi\u00e9ville", "label": "Paul Demiville"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/academicAdvisor", "label": "academic advisor"}, {"uri": "http://dbpedia.org/property/fields", "label": "advisor"}], "id": "588f69a6c10c4bfca7c6ecf3d36b73f0"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Amalgamated_Association_of_Iron_and_Steel_Workers> <http://dbpedia.org/ontology/affiliation> ?x . ?x <http://dbpedia.org/property/founded> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TradeUnion>}", "SerialNumber": "2976", "question": "Who is the founder of the trade union which affiliates Amalgamated Association of Iron and Steel Workers?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Amalgamated_Association_of_Iron_and_Steel_Workers", "label": "Amalgamated Association of Iron and Steel Workers"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/affiliation", "label": "affiliates"}, {"uri": "http://dbpedia.org/property/founded", "label": "founder of"}, {"uri": "http://dbpedia.org/ontology/TradeUnion", "label": "trade union"}], "id": "2fe30687c5644f9096c50927e10ec2fe"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Mausoleum_of_Augustus> } ", "SerialNumber": "2977", "question": "What royalties's sepulchre is Mausoleum of Augustus?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mausoleum_of_Augustus", "label": "Mausoleum of Augustus"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBurial"}], "id": "c8578e413e244216a605fd070fa1096b"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Jefferson_North_Assembly> . ?x <http://dbpedia.org/property/related> ?uri  . }", "SerialNumber": "2983", "question": "How many cars are similar to the ones assembled in the Jefferson North Assembly?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jefferson_North_Assembly", "label": "Jefferson North Assembly"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/assembly", "label": "Assembly"}, {"uri": "http://dbpedia.org/property/related", "label": "assembled"}], "id": "e2d4df3f532942f8947a0ead70798b87"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Bukovica_(river)> . ?x <http://dbpedia.org/ontology/mouthCountry> ?uri  . }", "SerialNumber": "2984", "question": "What does the river flow into, whose left tributary is Bukovica?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bukovica_(river)", "label": "Bukovica"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/leftTributary", "label": "left tributary"}, {"uri": "http://dbpedia.org/ontology/mouthCountry", "label": "flow"}], "id": "583ab0d388bd4c158b0862155dc190de"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> } ", "SerialNumber": "2987", "question": "which astronaut's mission was Apollo 11?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Apollo_11", "label": "Apollo 11"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mission", "label": "mission"}], "id": "a4aaefe71b4c47fb82c079c3ec2cf474"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/PlayStation_4> . ?uri <http://dbpedia.org/property/os> <http://dbpedia.org/resource/PlayStation_3_system_software>  . }", "SerialNumber": "2988", "question": "What came before  PlayStation 4 and uses PlayStation 3 system software as OS?", "entity mapping": [{"uri": "http://dbpedia.org/resource/PlayStation_4", "label": "PlayStation 4"}, {"uri": "http://dbpedia.org/resource/PlayStation_3_system_software", "label": "PlayStation 3 system software"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/successor"}, {"uri": "http://dbpedia.org/property/os", "label": "OS"}], "id": "76af8656dedf4ec2bf0348b2eddf906b"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_\u2013_Bataan> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/ontology/athletics> ?uri} ", "SerialNumber": "2995", "question": "List the common sports played by Polytechnic University of the Philippines Bataan and Jamiatu Muslim Mindanao ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_\u2013_Bataan", "label": "polytechnic philippines university bataan"}, {"uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao", "label": "Jamiatu Muslim Mindanao"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}, {"uri": "http://dbpedia.org/ontology/athletics", "label": "Bataan"}], "id": "0f029e1473eb473db6af6662d3cb6fa4"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tony_n'_Tina's_Wedding> <http://dbpedia.org/property/starring> ?uri } ", "SerialNumber": "2996", "question": "List down all the cast members of Tony n' Tina's Wedding ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tony_n'_Tina's_Wedding", "label": "Tony n' Tina's Wedding"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/starring", "label": "members"}], "id": "6dabffad323d44009367b7eaaf220c21"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Europe>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "SerialNumber": "3002", "question": "What are some seas inside europe ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Europe", "label": "europe"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/location", "label": "inside"}, {"uri": "http://dbpedia.org/ontology/Sea", "label": "sea"}], "id": "f8412d27be264040b18097376e40aa6f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blanche_Bruce> <http://dbpedia.org/property/office> ?uri. <http://dbpedia.org/resource/John_Franklin_Miller_(senator)> <http://dbpedia.org/property/office> ?uri . }", "SerialNumber": "3006", "question": "Where do the politicians, Blanche Bruce and John Franklin Miller work?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Blanche_Bruce", "label": "Blanche Bruce"}, {"uri": "http://dbpedia.org/resource/John_Franklin_Miller_(senator)", "label": "John Franklin Miller"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/office", "label": "work"}, {"uri": "http://dbpedia.org/property/office", "label": "work"}], "id": "6c76c96b0fa54b84a967935d0fa16694"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gloria_Schaffer> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/Newington,_Connecticut> <http://dbpedia.org/ontology/isPartOf> ?uri . }", "SerialNumber": "3010", "question": "What region was Gloria Schaffer born in, which also contains Newington?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gloria_Schaffer", "label": "Gloria Schaffer"}, {"uri": "http://dbpedia.org/resource/Newington,_Connecticut", "label": "newington"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/birthPlace", "label": "born in"}, {"uri": "http://dbpedia.org/ontology/isPartOf", "label": "in"}], "id": "f49d08f78f3a4c64a3963126cb43d7e9"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Claudia_Moro> <http://dbpedia.org/property/title> ?uri } ", "SerialNumber": "3011", "question": "which award has been won by Claudia Moro?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Claudia_Moro", "label": "Claudia Moro"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/title", "label": "won"}], "id": "169a1ce1f8ac4c5ba9a92103237113c6"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henri,_Duke_of_Rohan> <http://dbpedia.org/ontology/placeOfBurial> ?uri } ", "SerialNumber": "3013", "question": "Where was Henri, Duke of Rohan laid to rest?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Henri,_Duke_of_Rohan", "label": "Henri, Duke of Rohan"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/placeOfBurial"}], "id": "311bb63ae12d4dd999e195d827cf60d2"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lena_River> <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Laptev_Sea> }", "SerialNumber": "3016", "question": "Does the lena river flow into the Laptev Sea?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lena_River", "label": "lena river"}, {"uri": "http://dbpedia.org/resource/Laptev_Sea", "label": "Laptev Sea"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/mouthMountain", "label": "flow"}], "id": "363f13c9bc2242038c131f095d4c866d"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/New_Orleans> . ?x <http://dbpedia.org/property/knownFor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "3022", "question": "List the things for which people of New Orleans are famous for?", "entity mapping": [{"uri": "http://dbpedia.org/resource/New_Orleans", "label": "New Orleans"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBirth"}, {"uri": "http://dbpedia.org/property/knownFor", "label": "famous"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "famous"}], "id": "5aa02b6827bf4e9590a49a469b64904a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/training> <http://dbpedia.org/resource/Jos\u00e9_Ruiz_y_Blasco>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "SerialNumber": "3027", "question": "Which artist was taught by Jos Ruiz y Blasco?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jos\u00e9_Ruiz_y_Blasco", "label": "Jos Ruiz y Blasco"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/training", "label": "taught"}, {"uri": "http://dbpedia.org/ontology/Artist", "label": "artist"}], "id": "64641fa005c74f08b24a64c47b15f3be"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Zachary_Taylor> <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Major_general_(United_States)> }", "SerialNumber": "3029", "question": "Was Zachary taylor a major general?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Zachary_Taylor", "label": "Zachary taylor"}, {"uri": "http://dbpedia.org/resource/Major_general_(United_States)", "label": "major general"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/rank"}], "id": "7e2d4902f5374b70b03c59179b9e2ac1"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Ghana_School_of_Law> . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "3034", "question": "Which country's people have graduated from Ghana School of Law?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ghana_School_of_Law", "label": "Ghana School of Law"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/almaMater", "label": "graduated from"}, {"uri": "http://dbpedia.org/ontology/nationality", "label": "country's"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "8b827358accc43048f434244318b58c5"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Shaun_the_Sheep> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "3035", "question": "What awards have been given to the dude who made Shaun the Sheep?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Shaun_the_Sheep", "label": "Shaun the Sheep"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/notableworks"}, {"uri": "http://dbpedia.org/ontology/award", "label": "awards"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "made"}], "id": "37f1ac3a34a64c90ab93ffe69af727ca"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dofinivka_Estuary> <http://dbpedia.org/property/location> ?uri } ", "SerialNumber": "3036", "question": "Where is  Dofinivka Estuary  located ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dofinivka_Estuary", "label": "Dofinivka Estuary"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/location", "label": "located"}], "id": "aab7be38505a4ecdb2689be99d9d9de4"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Shaun_Thong> <http://dbpedia.org/property/currentTeam> <http://dbpedia.org/resource/Audi> }", "SerialNumber": "3042", "question": "Does Shaun Thong a member of Audi?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Shaun_Thong", "label": "Shaun Thong"}, {"uri": "http://dbpedia.org/resource/Audi", "label": "Audi"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentTeam", "label": "member"}], "id": "ef36454fc013444f981fe8a7069ceee8"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCity> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/ontology/cpu> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "SerialNumber": "3043", "question": "Give me a list of computers whose CPU is in the US.", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/locationCity", "label": "US."}, {"uri": "http://dbpedia.org/ontology/cpu", "label": "CPU"}, {"uri": "http://dbpedia.org/ontology/InformationAppliance", "label": "me"}], "id": "c6d4e596834546d09a59e92ba09dc966"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Rakitnica> . ?x <http://dbpedia.org/ontology/mouthCountry> ?uri  . }", "SerialNumber": "3046", "question": "Where does the river end, into which the Rakitnica flows?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Rakitnica", "label": "Rakitnica"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/rightTributary", "label": "flows"}, {"uri": "http://dbpedia.org/ontology/mouthCountry", "label": "flows"}], "id": "e65463440f1f4b59b6d0163ad10c490e"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/West_Coast_Airlines> <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Seattle> }", "SerialNumber": "3048", "question": "Do the west coast airlines fly to seattle?", "entity mapping": [{"uri": "http://dbpedia.org/resource/West_Coast_Airlines", "label": "west coast airlines"}, {"uri": "http://dbpedia.org/resource/Seattle", "label": "seattle"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/targetAirport", "label": "fly"}], "id": "b4b6b1d0dcab4cbb934923e070092d67"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gymnastics_at_the_2008_Summer_Olympics_\u2013_Women's_artistic_individual_all-around> <http://dbpedia.org/ontology/silverMedalist> ?uri } ", "SerialNumber": "3050", "question": "Who was the silver medalist of Gymnastics at the 2008 Summer Olympics  Women's artistic individual all-around ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gymnastics_at_the_2008_Summer_Olympics_\u2013_Women's_artistic_individual_all-around", "label": "individual gymnastics all-around olympics artistic"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/silverMedalist", "label": "medalist silver"}], "id": "ec0ca62208e240c396994de301d25f2b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/The_American_Magazine> . ?uri <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/New_York_Post> . }", "SerialNumber": "3051", "question": "Who  works  at the American Magazine and New York Post?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_American_Magazine", "label": "the American Magazine"}, {"uri": "http://dbpedia.org/resource/New_York_Post", "label": "New York Post"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/employer", "label": "works"}, {"uri": "http://dbpedia.org/ontology/employer", "label": "works"}], "id": "5c3207ee849d4e9cb44f0ee1d698b602"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Conglomerate_(American_group)> <http://dbpedia.org/property/pastMembers> ?uri. <http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)> <http://dbpedia.org/ontology/musicalBand> ?uri} ", "SerialNumber": "3052", "question": "Which past members of the The Conglomerate (American group) also sang Take Me There (Blackstreet & Ma song)?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Conglomerate_(American_group)", "label": "The Conglomerate (American group)"}, {"uri": "http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)", "label": "Take Me There"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/pastMembers", "label": "past members"}, {"uri": "http://dbpedia.org/ontology/musicalBand", "label": "Ma"}], "id": "5f0af10a644a420ebcd9811b94687f7d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Demis_Roussos> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "3054", "question": "Collaborators of Demis Roussos have composed music for which movies?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Demis_Roussos", "label": "Demis Roussos"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/associatedActs", "label": "music"}, {"uri": "http://dbpedia.org/ontology/musicComposer", "label": "composed"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "7f55bf607c9e490aae4ff2f9f40a27e2"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Focke-Wulf_Fw_260> <http://dbpedia.org/property/nationalOrigin> ?uri. <http://dbpedia.org/resource/Start_+_Flug_H-101> <http://dbpedia.org/property/nationalOrigin> ?uri . }", "SerialNumber": "3058", "question": "Where did these popular aeroplanes - Focke Wulf 260 and Start+Flug H 101 originate?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Focke-Wulf_Fw_260", "label": "focke wulf 260"}, {"uri": "http://dbpedia.org/resource/Start_+_Flug_H-101", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/nationalOrigin", "label": "originate"}, {"uri": "http://dbpedia.org/property/nationalOrigin", "label": "originate"}], "id": "2130571cb0394b1b82ad2a8c6f4f159f"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ra\u0161a_(river)> <http://dbpedia.org/ontology/source> ?uri. <http://dbpedia.org/resource/Adriatic_Sea> <http://dbpedia.org/ontology/country> ?uri} ", "SerialNumber": "3059", "question": "Which source of river Raa is the sovereign state of Adriatic sea ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ra\u0161a_(river)", "label": "river"}, {"uri": "http://dbpedia.org/resource/Adriatic_Sea", "label": "Adriatic sea"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/source", "label": "source"}, {"uri": "http://dbpedia.org/ontology/country", "label": "sovereign state"}], "id": "da0c3ca5edfb4bad9ef869c38119a10e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kala_Pani_(1958_film)> <http://dbpedia.org/ontology/director> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }", "SerialNumber": "3067", "question": "Where did the film director of Kala Pani die?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kala_Pani_(1958_film)", "label": "Kala Pani"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/director", "label": "film director"}, {"uri": "http://dbpedia.org/ontology/deathPlace", "label": "die"}], "id": "0cd31fba24c240f588c0916b021f4d63"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Timothy_Morton> <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Buddhism> }", "SerialNumber": "3068", "question": "Does Timothy Morton study Buddhism?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Timothy_Morton", "label": "Timothy Morton"}, {"uri": "http://dbpedia.org/resource/Buddhism", "label": "Buddhism"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mainInterests", "label": "study"}], "id": "18e1b907a21644199bcf31fb9629f79c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ptolemy_XII_Auletes> . ?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "SerialNumber": "3069", "question": "Name a queen whose parent is Ptolemy XII Auletes and consort is Ptolemy XIII Theos Philopator?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ptolemy_XII_Auletes", "label": "Ptolemy XII Auletes"}, {"uri": "http://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator", "label": "Ptolemy XIII Theos Philopator"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/parent", "label": "parent"}, {"uri": "http://dbpedia.org/property/spouse", "label": "consort"}, {"uri": "http://dbpedia.org/ontology/Royalty", "label": "queen"}], "id": "81ced9f9e10b4380a691a73a17095c6e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Kaplan,_Inc.> . ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Iowa>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "SerialNumber": "3070", "question": "Which universit's affiliation is with Kalpan, Inc. and has campus at Iowa ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kaplan,_Inc.", "label": ""}, {"uri": "http://dbpedia.org/resource/Iowa", "label": "Iowa"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/affiliations", "label": "affiliation"}, {"uri": "http://dbpedia.org/ontology/campus", "label": "campus"}, {"uri": "http://dbpedia.org/ontology/University", "label": "universit's"}], "id": "c3fb5965d89548719ebf83511d9e262a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Shelby_County,_Tennessee> . ?uri <http://dbpedia.org/property/starring> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "3072", "question": "Which movies have someone on their cast from Shelby County in Tennessee?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Shelby_County,_Tennessee", "label": "tennessee shelby county"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/hometown", "label": "Tennessee"}, {"uri": "http://dbpedia.org/property/starring", "label": "in"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "b4a89e8c9b55499eaa9963fe4b9d6152"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/John_Roberts> . ?uri <http://dbpedia.org/property/address> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>}", "SerialNumber": "3074", "question": "Which venues are located at places governed by John Roberts?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Roberts", "label": "John Roberts"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/leader", "label": "governed"}, {"uri": "http://dbpedia.org/property/address", "label": "governed"}, {"uri": "http://dbpedia.org/ontology/Venue", "label": "venue"}], "id": "1a7b4ab5c3674875a82e577a3fcb3a55"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Continental_Army>  . }", "SerialNumber": "3075", "question": "How many people are in the continental army?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Continental_Army", "label": "continental army"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/militaryBranch", "label": "people"}], "id": "7abaec31e6094f6eac72313b8dd8dc32"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Connecticut_Lakes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "3077", "question": "What river originates in the Connecticut Lakes?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Connecticut_Lakes", "label": "Connecticut Lakes"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/source", "label": "originates"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "98ad740059cf4598828aa46f80707524"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD>  . }", "SerialNumber": "3079", "question": "How many things are aired on BBC HD?", "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC_HD", "label": "BBC HD"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/network", "label": "aired"}], "id": "602d5f8103c345b1bf3b59a8f4fbcb01"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/National_Commercial_Bank_Mauritius> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/property/locationCountry> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}", "SerialNumber": "3081", "question": "In which countries are there banks which came after the National Commercial Bank of Mauritius?", "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Commercial_Bank_Mauritius", "label": "National Commercial Bank of Mauritius"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/successor"}, {"uri": "http://dbpedia.org/property/locationCountry", "label": "countries"}, {"uri": "http://dbpedia.org/ontology/Bank", "label": "bank"}], "id": "010e9f9ec10d4cf5bd9455353215d507"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Glen_and_Les_Charles> . ?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3088", "question": "Which Paramount TV show was produced by Glen and Les Charles ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Glen_and_Les_Charles", "label": "Glen and Les Charles"}, {"uri": "http://dbpedia.org/resource/Paramount_Television", "label": "paramount"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/executiveProducer", "label": "produced"}, {"uri": "http://dbpedia.org/property/company", "label": "TV"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "5a15996c69764d78950ee50018ff8de5"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Zora_Singh_Maan> <http://dbpedia.org/property/constituency> ?x . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . }", "SerialNumber": "3096", "question": "Who is the mayor of the city under which is the constituency of Zora Singh Maan?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Zora_Singh_Maan", "label": "Zora Singh Maan"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/constituency", "label": "constituency"}, {"uri": "http://dbpedia.org/ontology/leaderName", "label": "city"}], "id": "9a5eae5ceec54a8e97a3c8d7ecdb1149"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000> <http://dbpedia.org/ontology/incumbent> ?uri } ", "SerialNumber": "3099", "question": "Who is the incumbent of Al Gore presidential campaign of 2000 ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000", "label": "presidential campaign gore 2000"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/incumbent", "label": "incumbent"}], "id": "240ab1b4acb848ce816bdc5a4660b11b"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Albert_P._Clark> <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Colorado> }", "SerialNumber": "3105", "question": "Is Albert P Clark buried in Colorado?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Albert_P._Clark", "label": "albert clark"}, {"uri": "http://dbpedia.org/resource/Colorado", "label": "Colorado"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeofburial"}], "id": "1604b4deca8f4b089da3546474871043"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco> . ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Noe_Valley,_San_Francisco> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "3106", "question": "Who is  office holder of constituencies Duboce Triangle and Noe Valley ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco", "label": "triangle duboce"}, {"uri": "http://dbpedia.org/resource/Noe_Valley,_San_Francisco", "label": "valley"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/constituency", "label": "constituencies"}, {"uri": "http://dbpedia.org/property/constituency", "label": "constituencies"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "office holder"}], "id": "c373b33ce50b4f15976673862387f06d"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }", "SerialNumber": "3107", "question": "For how many things are americans famous for?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBirth"}, {"uri": "http://dbpedia.org/ontology/knownFor", "label": "famous"}], "id": "a473965ed74b45298f4f8082bca57f56"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Instituts_d'\u00e9tudes_politiques> . ?uri <http://dbpedia.org/property/successor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "3108", "question": "Which politician was succeeded by someone who graduated from the Instituts d'tudes politiques?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Instituts_d'\u00e9tudes_politiques", "label": "politiques instituts"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/almaMater", "label": "graduated from"}, {"uri": "http://dbpedia.org/property/successor", "label": "politiques"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "politiques"}], "id": "ac238bf4d1e14571a3b37e506efd4240"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/World_Series_of_Poker> <http://dbpedia.org/property/founded> ?uri } ", "SerialNumber": "3110", "question": "Who created the world series of Poker?", "entity mapping": [{"uri": "http://dbpedia.org/resource/World_Series_of_Poker", "label": "world series of Poker"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/founded", "label": "created"}], "id": "ebfe588dc9854e4db5a96b4bb467c612"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Ulsan> }", "SerialNumber": "3111", "question": "Is the Hyundai Lavita assembled in Ulsan?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Hyundai_Lavita", "label": "Hyundai Lavita"}, {"uri": "http://dbpedia.org/resource/Ulsan", "label": "Ulsan"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/assembly", "label": "assembled"}], "id": "ffc8b63b6f384ab18b8f65a4d3dd31d4"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation> <http://dbpedia.org/property/membership> ?uri } ", "SerialNumber": "3112", "question": "Which countries came together to serve a greater purpose and founded South Asia Subregional Economic Cooperation?", "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation", "label": "South Asia Subregional Economic Cooperation"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/membership", "label": "founded"}], "id": "e15981cdcc5a4f23935cf46e161ee0c0"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Drop.io> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/Sean_Parker> <http://dbpedia.org/ontology/knownFor> ?uri . }", "SerialNumber": "3115", "question": "Which owner of Drop.io made Sean Parker famous?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Drop.io", "label": "Drop.io"}, {"uri": "http://dbpedia.org/resource/Sean_Parker", "label": "Sean Parker"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/owner", "label": "owner"}, {"uri": "http://dbpedia.org/ontology/knownFor", "label": "famous"}], "id": "2a705d023eea446eb1e7b31a390a4146"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Fox_and_the_Cat> <http://dbpedia.org/property/species> ?uri. <http://dbpedia.org/resource/Seneca_Academy_and_Circle_School> <http://dbpedia.org/property/mascot> ?uri} ", "SerialNumber": "3117", "question": "Which kmascot od seneca Academy is also the species of The Fox and the Cat ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Fox_and_the_Cat", "label": "The Fox and the Cat"}, {"uri": "http://dbpedia.org/resource/Seneca_Academy_and_Circle_School", "label": "academy seneca"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/species", "label": "species"}, {"uri": "http://dbpedia.org/property/mascot", "label": "mascot"}], "id": "813f18d7591b4b3f89070f3f5831e627"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/The_Spirit_of_Christmas_(short_film)> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Mona_Marshall>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3119", "question": "Which tv show was preceded by The spirit of Christmas and voice to the character was given by Mona Marshall ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Spirit_of_Christmas_(short_film)", "label": "The spirit of Christmas"}, {"uri": "http://dbpedia.org/resource/Mona_Marshall", "label": "Mona Marshall"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/previousWork", "label": "character"}, {"uri": "http://dbpedia.org/property/voices", "label": "voice"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "dd1b888f16a14a13b8be3e662804a5d9"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jimmie_Lou_Fisher> <http://dbpedia.org/property/governor> ?uri. <http://dbpedia.org/resource/Winston_Bryant> <http://dbpedia.org/property/governor> ?uri . }", "SerialNumber": "3126", "question": "Jimmie Fisher and Winston Bryant were governors under which president?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jimmie_Lou_Fisher", "label": "jimmie fisher"}, {"uri": "http://dbpedia.org/resource/Winston_Bryant", "label": "Winston Bryant"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/governor", "label": "governor"}, {"uri": "http://dbpedia.org/property/governor", "label": "governor"}], "id": "7320bf155b9b4a90b729bd36263698da"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Phil_Collinson> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3127", "question": "Which shows are similar to the ones produced by Phil Collinson?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Phil_Collinson", "label": "Phil Collinson"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/executiveProducer", "label": "produced"}, {"uri": "http://dbpedia.org/ontology/related", "label": "similar"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "65de0b27d7cf414daa73bab1546dfaab"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/voice> <http://dbpedia.org/resource/The_Dognapper>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "SerialNumber": "3131", "question": "Who is the fictional character who starred in The Dognapper?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Dognapper", "label": "The Dognapper"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/voice", "label": "starred"}, {"uri": "http://dbpedia.org/ontology/FictionalCharacter", "label": "fictional character"}], "id": "65a7bbb407e44d46825ede7581db9462"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Watkins_Glen,_New_York> . ?x <http://dbpedia.org/property/firstTeam> ?uri  . }", "SerialNumber": "3133", "question": "Enumerate all the first teams of the GPs which were held in Watkins Glen, NY?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Watkins_Glen,_New_York", "label": "watkins glen,"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/location", "label": "NY"}, {"uri": "http://dbpedia.org/property/firstTeam", "label": "first team"}], "id": "613c74a4ec09400a94fd8ede2e063e5c"}, {"sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/RKO_Pictures> . ?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gregg_Toland> } ", "SerialNumber": "3139", "question": "Count the number of movies whose distributor is RKO Pictures and director of photography is Gregg Toland?", "entity mapping": [{"uri": "http://dbpedia.org/resource/RKO_Pictures", "label": "RKO Pictures"}, {"uri": "http://dbpedia.org/resource/Gregg_Toland", "label": "Gregg Toland"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/distributor", "label": "distributor"}, {"uri": "http://dbpedia.org/ontology/cinematography", "label": "photography"}], "id": "9993c21e0dba4189a4d49112ea149a76"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Colony_of_Virginia> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)>  . }", "SerialNumber": "3141", "question": "Who has allegiance is Colony of Virginia and buried in Montpelier?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Colony_of_Virginia", "label": "Colony of Virginia"}, {"uri": "http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)", "label": "Montpelier"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/allegiance", "label": "allegiance"}, {"uri": "http://dbpedia.org/property/restingplace"}], "id": "5bf4a1c66058437cb656e5b1c6588eac"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/class> <http://dbpedia.org/resource/Full-size_car> . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "SerialNumber": "3142", "question": "Give me the list of cars which are the predecessor of Full Sized Cars?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Full-size_car", "label": "full"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/class", "label": "Cars"}, {"uri": "http://dbpedia.org/ontology/predecessor", "label": "predecessor"}, {"uri": "http://dbpedia.org/ontology/Automobile", "label": "me"}], "id": "6b40bf5e283244129850be2446ce0074"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/United_First_Parish_Church> . ?uri <http://dbpedia.org/ontology/vicePresident> ?x  . }", "SerialNumber": "3143", "question": "Who served a vice president buried in United First Parish Church?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_First_Parish_Church", "label": "United First Parish Church"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/restingplace"}, {"uri": "http://dbpedia.org/ontology/vicePresident", "label": "vice president"}], "id": "22086cbb41ac4acc823ba66b6334f11d"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/New_York_State_Route_470> <http://dbpedia.org/ontology/routeJunction> <http://dbpedia.org/resource/Cohoes,_New_York> }", "SerialNumber": "3144", "question": "Does Cohoes a junction on the NY State Route 470?", "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_State_Route_470", "label": "state route 470"}, {"uri": "http://dbpedia.org/resource/Cohoes,_New_York", "label": "cohoes"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/routeJunction", "label": "junction route"}], "id": "9d6b44c745cc4b13a87b0664f5ba8a0b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Clatsop_County,_Oregon> . ?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Columbia_Lake>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "3149", "question": "Name the river with source as Columbia Lake and river mouth is located in Clatsop Country ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Clatsop_County,_Oregon", "label": "clatsop"}, {"uri": "http://dbpedia.org/resource/Columbia_Lake", "label": "Columbia Lake"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/riverMouth", "label": "river mouth"}, {"uri": "http://dbpedia.org/ontology/source", "label": "source"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "232324046fea420f9ef510ab09298d99"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/My_Truly,_Truly_Fair> <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/Mitch_Miller> }", "SerialNumber": "3151", "question": "Is my truly truly fair the band of mitch miller?", "entity mapping": [{"uri": "http://dbpedia.org/resource/My_Truly,_Truly_Fair", "label": "truly fair"}, {"uri": "http://dbpedia.org/resource/Mitch_Miller", "label": "mitch miller"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/musicalBand", "label": "band"}], "id": "1dabbe38304b45038e9853ea185a6280"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)>  . }", "SerialNumber": "3156", "question": "Count all the Colonels?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Colonel_(United_States)", "label": "Colonel"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/rank", "label": "Count"}], "id": "44f1c8f9f2544b208b2f41cb608b27ab"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Watkins_Glen,_New_York> . ?x <http://dbpedia.org/property/firstTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}", "SerialNumber": "3158", "question": "Who was on the first team in the GPs that were held at Watkins Glen, NY?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Watkins_Glen,_New_York", "label": "watkins glen,"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/location", "label": "NY"}, {"uri": "http://dbpedia.org/property/firstTeam", "label": "first team"}, {"uri": "http://dbpedia.org/ontology/GrandPrix", "label": "NY"}], "id": "95d1d72d4de845859f814f734b971bd0"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/MTR> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Train>}", "SerialNumber": "3162", "question": "Who produces the trains operated by the MTR?", "entity mapping": [{"uri": "http://dbpedia.org/resource/MTR", "label": "MTR"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/operator", "label": "operated"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "operated"}, {"uri": "http://dbpedia.org/ontology/Train", "label": "train"}], "id": "7ee73bf122af4474ab57198183ee3f32"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Election_Commission_of_Thailand> <http://dbpedia.org/property/agencyName> ?uri } ", "SerialNumber": "3164", "question": "Name the agency of Election Commission of Thailand ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Election_Commission_of_Thailand", "label": "Election Commission of Thailand"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/agencyName", "label": "agency name"}], "id": "8a4ee894762240cbaa743c2639734575"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dschinghis_Khan_(song)> <http://dbpedia.org/ontology/subsequentWork> ?uri } ", "SerialNumber": "3165", "question": "What is the second track list of Dschinghis Khan (song) ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dschinghis_Khan_(song)", "label": "Dschinghis Khan (song)"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/subsequentWork", "label": "Khan"}], "id": "f8fbc5bc7c8a4272bcfeae43342ee9b0"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tales_of_Suspense> <http://dbpedia.org/property/writers> ?uri. <http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo> <http://dbpedia.org/property/author> ?uri} ", "SerialNumber": "3166", "question": "Which writer of Tales of Suspense is also the writer of karakuri Dji Ultimo ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tales_of_Suspense", "label": "Tales of Suspense"}, {"uri": "http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo", "label": "karakuri ultimo"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/writers", "label": "writer"}, {"uri": "http://dbpedia.org/property/author", "label": "writer"}], "id": "afccda799b6b41138bb5203359ad1618"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dave_Attell> <http://dbpedia.org/ontology/influencedBy> ?uri. <http://dbpedia.org/resource/Adi\u00f3s_Amigo> <http://dbpedia.org/ontology/starring> ?uri . }", "SerialNumber": "3167", "question": "Who was the influencer of Dave Attel who also starred in Adios Amigo?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dave_Attell", "label": "Dave Attel"}, {"uri": "http://dbpedia.org/resource/Adi\u00f3s_Amigo", "label": "Adios Amigo"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/influencedBy", "label": "influencer"}, {"uri": "http://dbpedia.org/ontology/starring", "label": "starred"}], "id": "a759221f4e9b4ea3a2b9d8654e1bc7cd"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/A_Nice_Pair> <http://dbpedia.org/ontology/previousWork> ?x . ?x <http://dbpedia.org/property/producer> ?uri  . }", "SerialNumber": "3168", "question": "Who is the producer of the album, after which A Nice pair was released ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/A_Nice_Pair", "label": "A Nice pair"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/previousWork", "label": "released"}, {"uri": "http://dbpedia.org/property/producer", "label": "producer"}], "id": "b270a1df7e304d6bbec623691016b511"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/T._S._Thakur> . ?uri <http://dbpedia.org/ontology/residence> ?x  . }", "SerialNumber": "3170", "question": "Which politicians live in a city led by T.S. Thakur?", "entity mapping": [{"uri": "http://dbpedia.org/resource/T._S._Thakur", "label": "Thakur"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/leader", "label": "led"}, {"uri": "http://dbpedia.org/ontology/residence", "label": "city"}], "id": "6b036672b009486aba8ca22f384a054b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/St_Mary's_Church,_Battersea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}", "SerialNumber": "3171", "question": "Who is the military general buried in St Mary's Church, Battersea?", "entity mapping": [{"uri": "http://dbpedia.org/resource/St_Mary's_Church,_Battersea", "label": "St Mary's Church, Battersea"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeofburial"}, {"uri": "http://dbpedia.org/ontology/MilitaryPerson", "label": "military"}], "id": "c453adcc2e0940139832c62258fcdaa2"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Choi_Tu-son> . ?uri <http://dbpedia.org/ontology/commander> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "3172", "question": "Which wars were fought when the commanders involved served under PM Choi Tu Son?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Choi_Tu-son", "label": "Choi Tu Son"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/primeminister", "label": "PM"}, {"uri": "http://dbpedia.org/ontology/commander", "label": "commander"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "PM"}], "id": "4bd7ce92e5834b2b9f27c18942dd990c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/architecture> <http://dbpedia.org/resource/Rock_art> . ?x <http://dbpedia.org/ontology/governingBody> ?uri  . }", "SerialNumber": "3175", "question": "Give me a list of everyone who manages the famous rock art sites?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Rock_art", "label": "rock art"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/architecture", "label": "sites"}, {"uri": "http://dbpedia.org/ontology/governingBody", "label": "sites"}], "id": "6aa8a3b5ed004373b608912919fe9db9"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jerry_Rice> <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/Oktoc,_Mississippi> }", "SerialNumber": "3176", "question": "Did Jerry Rice study in Oktoc Mississippi?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jerry_Rice", "label": "Jerry Rice"}, {"uri": "http://dbpedia.org/resource/Oktoc,_Mississippi", "label": "mississippi oktoc"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/highSchool", "label": "Mississippi"}], "id": "9c1ea109b00f4f5aba49d87f8fac3deb"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Shallot> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}", "SerialNumber": "3178", "question": "Food in which countries has shallot in it?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Shallot", "label": "shallot"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/ingredient", "label": "countries"}, {"uri": "http://dbpedia.org/ontology/country", "label": "in"}, {"uri": "http://dbpedia.org/ontology/Food", "label": "Food"}], "id": "77e5540b4af34b73b9c43dd62c69c556"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_route_E8> <http://dbpedia.org/ontology/county> ?uri. <http://dbpedia.org/resource/Ragnhild_J\u00f8lsen> <http://dbpedia.org/property/birthplace> ?uri} ", "SerialNumber": "3181", "question": "What is the country which lies on the European route E8, and where Ragnhild Jolson was born?", "entity mapping": [{"uri": "http://dbpedia.org/resource/European_route_E8", "label": "European route E8"}, {"uri": "http://dbpedia.org/resource/Ragnhild_J\u00f8lsen", "label": "ragnhild"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/county", "label": "country"}, {"uri": "http://dbpedia.org/property/birthplace", "label": "born"}], "id": "351b32db9d724cfd823b5948b2ced6dd"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/HBO>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3182", "question": "What are the television shows whose distributer is HBO?", "entity mapping": [{"uri": "http://dbpedia.org/resource/HBO", "label": "HBO"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/distributor", "label": "distributer"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "television show"}], "id": "f5e9009261864d4a998a4815dabb3404"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Carolyn_Heinrich> <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Vanderbilt_University> }", "SerialNumber": "3183", "question": "Did Carolyn Heinrich study at the Vanderbilt?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Carolyn_Heinrich", "label": "Carolyn Heinrich"}, {"uri": "http://dbpedia.org/resource/Vanderbilt_University", "label": "Vanderbilt"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/institution", "label": "study"}], "id": "b95b28576f18419c894ce4f86851e7c4"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Cadillac_Fleetwood> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "SerialNumber": "3186", "question": "How many cars succeeded the cars which were similar to Cadillac Fleetwood?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cadillac_Fleetwood", "label": "Cadillac Fleetwood"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/related", "label": "similar"}, {"uri": "http://dbpedia.org/ontology/predecessor", "label": "similar"}, {"uri": "http://dbpedia.org/ontology/Automobile", "label": "similar"}], "id": "1dc65e5b1efd45e997dab9d523cfc041"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Palo_Alto,_California> . ?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "3188", "question": "Which person won Screen actors Guild Life Time Achievement award and has resting palce in Palo Alto, California ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Palo_Alto,_California", "label": "Palo Alto, California"}, {"uri": "http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award", "label": "achievement screen actors"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/restingPlace", "label": "resting"}, {"uri": "http://dbpedia.org/ontology/award", "label": "award"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "person"}], "id": "f41a1ab1a8a64e70891750e378d66e93"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/firstTeam> <http://dbpedia.org/resource/Renault_in_Formula_One> . ?x <http://dbpedia.org/ontology/poleDriver> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}", "SerialNumber": "3189", "question": "Give me a list of all the people driving at pole positions in the Grand Prixes where Renault was a first team?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Renault_in_Formula_One", "label": "renault"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/firstTeam", "label": "first team"}, {"uri": "http://dbpedia.org/ontology/poleDriver", "label": "pole"}, {"uri": "http://dbpedia.org/ontology/GrandPrix", "label": "Grand Prix"}], "id": "900ed9da86ce4991a9cef44d4e61b24f"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cheasty_Boulevard_South> <http://dbpedia.org/ontology/maintainedBy> ?uri. <http://dbpedia.org/resource/King_County,_Washington> <http://dbpedia.org/ontology/countySeat> ?uri} ", "SerialNumber": "3190", "question": "Which mainter of  Cheasty Boulevard South is also the county seat of the King County, Washingtonsu ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cheasty_Boulevard_South", "label": "Cheasty Boulevard South"}, {"uri": "http://dbpedia.org/resource/King_County,_Washington", "label": "King County, Washington"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/maintainedBy", "label": "su"}, {"uri": "http://dbpedia.org/ontology/countySeat", "label": "county seat"}], "id": "0518e52148a646b18bab0d50998ab176"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Rostock> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Europe>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "SerialNumber": "3193", "question": "Name the sea located near Europe and has a nearby city as Rostock ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Rostock", "label": "Rostock"}, {"uri": "http://dbpedia.org/resource/Europe", "label": "Europe"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/cities", "label": "city"}, {"uri": "http://dbpedia.org/ontology/location", "label": "nearby"}, {"uri": "http://dbpedia.org/ontology/Sea", "label": "sea"}], "id": "fbd5f953b14447ef811cb0338ee88e8e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/National_Hockey_League> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "SerialNumber": "3196", "question": "Which team's players have played in the national hockey league?", "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Hockey_League", "label": "national hockey league"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/league", "label": "league"}, {"uri": "http://dbpedia.org/ontology/team", "label": "team"}, {"uri": "http://dbpedia.org/ontology/Athlete", "label": "played"}], "id": "6310baf4b9d740f5a47f9ae2e0b34b5d"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_Border_and_Coast_Guard> <http://dbpedia.org/property/jurisdiction> ?uri. <http://dbpedia.org/resource/European_School,_Karlsruhe> <http://dbpedia.org/property/founder> ?uri} ", "SerialNumber": "3197", "question": "Which founder of European School, karlsruhe is also the jursdiction of Eurpoean Border of Coast guard ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/European_Border_and_Coast_Guard", "label": "european"}, {"uri": "http://dbpedia.org/resource/European_School,_Karlsruhe", "label": "European School, karlsruhe"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/jurisdiction", "label": "guard"}, {"uri": "http://dbpedia.org/property/founder", "label": "founder of"}], "id": "814c2cbb08a04c3ebd6aff1b47275883"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/narrator> <http://dbpedia.org/resource/Trevor_Peacock>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "3200", "question": "Trevor Peacock has narrated in which movie?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Trevor_Peacock", "label": "Trevor Peacock"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/narrator", "label": "narrated"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "6e5cd8ecf19a490b8da0b62c0e2a9a30"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sam_Keller> <http://dbpedia.org/ontology/formerTeam> ?uri. <http://dbpedia.org/resource/Jim_McMillin> <http://dbpedia.org/ontology/team> ?uri . }", "SerialNumber": "3202", "question": "What team has Sam Keller and Jim McMilin played for?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sam_Keller", "label": "Sam Keller"}, {"uri": "http://dbpedia.org/resource/Jim_McMillin", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/formerTeam", "label": "team for"}, {"uri": "http://dbpedia.org/ontology/team", "label": "played for"}], "id": "862ee1ccae36438fa2850a2dad3471f7"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Andrew_Schally> <http://dbpedia.org/property/workInstitutions> ?uri. <http://dbpedia.org/resource/Mar\u00eda_Eugenia_Rojas_Correa> <http://dbpedia.org/property/almaMater> ?uri} ", "SerialNumber": "3205", "question": "Which work institutions of the Andrew Schally is the  alma mater of the Mara Eugenia Rojas Correa ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Andrew_Schally", "label": "Andrew Schally"}, {"uri": "http://dbpedia.org/resource/Mar\u00eda_Eugenia_Rojas_Correa", "label": "eugenia correa rojas"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/workInstitutions", "label": "work institutions"}, {"uri": "http://dbpedia.org/property/almaMater", "label": "alma mater"}], "id": "a24560d63e05412bb56c5fac0df13755"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Diplomacy> . ?x <http://dbpedia.org/property/religion> ?uri  . }", "SerialNumber": "3206", "question": "What religions do diplomats typically follow?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Diplomacy", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/profession", "label": "follow"}, {"uri": "http://dbpedia.org/property/religion", "label": "religion"}], "id": "ee3ee4db6ae94b3d9abdf399e280c592"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Motor_Credit_Company> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/Ford_SHO_V8_engine> <http://dbpedia.org/ontology/manufacturer> ?uri} ", "SerialNumber": "3208", "question": "Who is the owner of Ford Motor Credit comapny which is also the builder of FORD SHO V8 engine ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ford_Motor_Credit_Company", "label": "credit"}, {"uri": "http://dbpedia.org/resource/Ford_SHO_V8_engine", "label": "FORD SHO V8 engine"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/owner", "label": "owner"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "builder"}], "id": "fe9e7f00884542aebb30f18c996e0f9b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Miss_Michigan_USA>  . }", "SerialNumber": "3211", "question": "who are some miss michigan usa?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Miss_Michigan_USA", "label": "miss michigan usa"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/title"}], "id": "e72c8d6ef90a427baa7e385ccb063824"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Colorectal_cancer> . ?uri <http://dbpedia.org/property/starring> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "3212", "question": "What are the films whose atleast one cast member died due to Colorectal cancer?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Colorectal_cancer", "label": "Colorectal cancer"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/deathCause", "label": "due"}, {"uri": "http://dbpedia.org/property/starring", "label": "due"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "films"}], "id": "14beb01d38c546a58565e06c61c1f773"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_Chess> <http://dbpedia.org/property/genre> ?uri. <http://dbpedia.org/resource/Vishwajyot_High_School> <http://dbpedia.org/ontology/sport> ?uri} ", "SerialNumber": "3216", "question": "Which cport of Vishwajyot High School is also the genere of Battle chess ", "entity mapping": [{"uri": "http://dbpedia.org/resource/Battle_Chess", "label": "Battle chess"}, {"uri": "http://dbpedia.org/resource/Vishwajyot_High_School", "label": "Vishwajyot High School"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/genre"}, {"uri": "http://dbpedia.org/ontology/sport"}], "id": "6e739eefd2bb47bb96e6386e4f9cb125"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Henry_Knox> <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Major_general_(United_States)> }", "SerialNumber": "3221", "question": "Was Henry Knox a major general?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Henry_Knox", "label": "Henry Knox"}, {"uri": "http://dbpedia.org/resource/Major_general_(United_States)", "label": "major general"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/militaryRank"}], "id": "3c01ec18928a47818e34bd8753ddd084"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Khadra_Haji_Ismail_Geid> <http://dbpedia.org/property/religion> ?uri. <http://dbpedia.org/resource/Yasmin_Khatun> <http://dbpedia.org/ontology/religion> ?uri} ", "SerialNumber": "3224", "question": "List the common relegion affiliation of khadra Haji Ismail and Yasmin khatun ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Khadra_Haji_Ismail_Geid", "label": "khadra ismail haji"}, {"uri": "http://dbpedia.org/resource/Yasmin_Khatun", "label": "Yasmin khatun"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/religion", "label": "Ismail"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "Ismail"}], "id": "2b275605f1424ad1853d8f7367592875"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Cleopatra_V_of_Egypt> } ", "SerialNumber": "3227", "question": "Cleopatra V of Egypt is father to which royalty?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cleopatra_V_of_Egypt", "label": "Cleopatra V"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mother", "label": "royalty"}], "id": "7ad74ad36f964369a61126ec8c40b05c"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Burbank,_California> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3231", "question": "How many TV show has distributor located in Burbank California ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Burbank,_California", "label": "Burbank California"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locationCity", "label": "located"}, {"uri": "http://dbpedia.org/property/distributor", "label": "distributor"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "700a76b55b6d42619332fe4a076f5180"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Manu_Cornet> <http://dbpedia.org/property/employer> ?uri. <http://dbpedia.org/resource/Google_Web_Toolkit> <http://dbpedia.org/ontology/author> ?uri} ", "SerialNumber": "3232", "question": "NAme the emplyer for whihc Manu cornet has worked and also written in Google Web Toolkit ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Manu_Cornet", "label": "Manu cornet"}, {"uri": "http://dbpedia.org/resource/Google_Web_Toolkit", "label": "Google Web Toolkit"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/employer", "label": "written"}, {"uri": "http://dbpedia.org/ontology/author", "label": "written"}], "id": "b1ffee719580428fa70efc72d7f54ba5"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Khiladi_786> <http://dbpedia.org/property/nextAlbum> ?x . ?x <http://dbpedia.org/property/recorded> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "3236", "question": "Where was the movie after Khiladi 786 recorded?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Khiladi_786", "label": "Khiladi 786"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/nextAlbum"}, {"uri": "http://dbpedia.org/property/recorded", "label": "recorded"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "463580ab42f54356945d1ed8c2f9b38a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/superintendent> <http://dbpedia.org/resource/Lieutenant_general_(United_States)> . ?uri <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Gyrfalcon>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "SerialNumber": "3239", "question": "Name the university which has Lieutenaunt general as superintendent and mascot as Gyrfalcon ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lieutenant_general_(United_States)", "label": ""}, {"uri": "http://dbpedia.org/resource/Gyrfalcon", "label": "Gyrfalcon"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/superintendent", "label": "superintendent"}, {"uri": "http://dbpedia.org/property/mascot", "label": "mascot"}, {"uri": "http://dbpedia.org/ontology/University", "label": "university"}], "id": "fa6f1a62c4da4b2cb2ed09d19e30faa9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/DisneyToon_Studios> <http://dbpedia.org/ontology/keyPerson> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "SerialNumber": "3240", "question": "What are the prizes awarded to the main members of DisneyToon Studios?", "entity mapping": [{"uri": "http://dbpedia.org/resource/DisneyToon_Studios", "label": "DisneyToon Studios"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/keyPerson", "label": "members"}, {"uri": "http://dbpedia.org/ontology/award", "label": "awarded"}], "id": "799124b8d9d1448e8410fcc70d945f3a"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Greasy_Pop_Records> <http://dbpedia.org/ontology/distributingLabel> <http://dbpedia.org/resource/Festival_Records> }", "SerialNumber": "3243", "question": "Is greasy pop recording the distributor of festival records?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Greasy_Pop_Records", "label": "greasy pop recordi"}, {"uri": "http://dbpedia.org/resource/Festival_Records", "label": "festival records"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/distributingLabel", "label": "distributor"}], "id": "95af8dab7a8b41babdeee3232cb6c644"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company> . ?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Brian_Dunkleman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3245", "question": "Which sitcom is broadcasted by FOX and presented by Brian Dunkleman?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company", "label": ""}, {"uri": "http://dbpedia.org/resource/Brian_Dunkleman", "label": "Brian Dunkleman"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/channel", "label": "FOX"}, {"uri": "http://dbpedia.org/property/presenter", "label": "presented"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "FOX"}], "id": "723c2b0c71d445fd9d6cf4d87006383a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/UEM_Group> . ?x <http://dbpedia.org/property/crosses> ?uri  . }", "SerialNumber": "3249", "question": "UEM group have made bridges crossing over what?", "entity mapping": [{"uri": "http://dbpedia.org/resource/UEM_Group", "label": "UEM group"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/designer", "label": "crossing"}, {"uri": "http://dbpedia.org/property/crosses", "label": "over"}], "id": "024337cb227f4a1395be10e9cb63c5fa"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Glover_(video_game)> <http://dbpedia.org/ontology/distributor> ?uri. <http://dbpedia.org/resource/Super_Mario_Adventures> <http://dbpedia.org/property/publisher> ?uri} ", "SerialNumber": "3250", "question": "Which distributer of Glover (video game) is also the  publisher of the Super Mario Adventures ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Glover_(video_game)", "label": "Glover (video game)"}, {"uri": "http://dbpedia.org/resource/Super_Mario_Adventures", "label": "Super Mario Adventures"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/distributor", "label": "Glover"}, {"uri": "http://dbpedia.org/property/publisher", "label": "publisher"}], "id": "b25e6105c24d44dc8ef492e2edf0b163"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/ABC_Records> . ?uri <http://dbpedia.org/property/voices> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3254", "question": "Which shows have voices from people signed up with ABC Records?", "entity mapping": [{"uri": "http://dbpedia.org/resource/ABC_Records", "label": "ABC Records"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/label", "label": "signed"}, {"uri": "http://dbpedia.org/property/voices", "label": "voices"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "6a18707a2ce342118ea82c357c85d158"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Claris> <http://dbpedia.org/property/products> ?x . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "SerialNumber": "3256", "question": "Who is the developer of the software which is produced by Claris ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Claris", "label": "Claris"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/products", "label": "produced"}, {"uri": "http://dbpedia.org/ontology/developer", "label": "developer"}, {"uri": "http://dbpedia.org/ontology/Software", "label": "software"}], "id": "9bf4af0a69b54d8d8e335078f111f30e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/carries> <http://dbpedia.org/resource/Motor_vehicle> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "SerialNumber": "3258", "question": "Give me some administrators of bridges over which cars can go?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Motor_vehicle", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/carries", "label": "cars"}, {"uri": "http://dbpedia.org/ontology/maintainedBy", "label": "administrator"}, {"uri": "http://dbpedia.org/ontology/Bridge", "label": "bridge"}], "id": "c58280258efb409faf6ecfb3f56cc513"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Coalition_Provisional_Authority>  . }", "SerialNumber": "3261", "question": "After the death of which political figure, did the Coalition Provisional Authority came into power?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Coalition_Provisional_Authority", "label": "Coalition Provisional Authority"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/successor", "label": "power"}], "id": "933bc214a7024ecaac142fef92c9edaf"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Anthrax> . ?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Royal_Society>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "SerialNumber": "3263", "question": "Name the scientist who is known for inventing Anthrax and was a member of Royal Society?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Anthrax", "label": "Anthrax"}, {"uri": "http://dbpedia.org/resource/Royal_Society", "label": "Royal Society"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/knownFor", "label": "known for"}, {"uri": "http://dbpedia.org/property/prizes", "label": "member"}, {"uri": "http://dbpedia.org/ontology/Scientist", "label": "scientist"}], "id": "f4b7def86f6e444b8521908b40cef72c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Tower_of_London> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "3264", "question": "Who were the opponents of the people buried in the tower of London?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tower_of_London", "label": "tower of London"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/restingPlace", "label": "buried in"}, {"uri": "http://dbpedia.org/ontology/opponent", "label": "opponent"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "e08cb98a10794ab59d7f5d076fadd9ac"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Egushawa> . ?x <http://dbpedia.org/property/combatant> ?uri  . }", "SerialNumber": "3265", "question": "How many factions have fought when Egushawa was a commander?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Egushawa", "label": "Egushawa"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/commander", "label": "commander"}, {"uri": "http://dbpedia.org/property/combatant", "label": "fought"}], "id": "c2d46fb94f5b46d5a4324c9cf5941feb"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tonkin_Campaign> <http://dbpedia.org/ontology/territory> ?uri. <http://dbpedia.org/resource/Th\u00e9ophane_V\u00e9nard> <http://dbpedia.org/ontology/deathPlace> ?uri} ", "SerialNumber": "3266", "question": "Which terrotory of Tonkin campaign also the death bed of Thophane Vnard ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tonkin_Campaign", "label": "Tonkin campaign"}, {"uri": "http://dbpedia.org/resource/Th\u00e9ophane_V\u00e9nard", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/territory", "label": "bed"}, {"uri": "http://dbpedia.org/ontology/deathPlace", "label": "death"}], "id": "922f99ad92c9458981c4e1027b28aa47"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Mary_Ainsworth> . ?uri <http://dbpedia.org/property/doctoralAdvisor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "SerialNumber": "3267", "question": "Name the scientist whose supervisor also supervised Mary Ainsworth?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mary_Ainsworth", "label": "Mary Ainsworth"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/doctoralStudents", "label": "supervised"}, {"uri": "http://dbpedia.org/property/doctoralAdvisor", "label": "supervisor"}, {"uri": "http://dbpedia.org/ontology/Scientist", "label": "scientist"}], "id": "7f9100dd95784db5aa76614d9d7d3c8b"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Operation_Dragoon> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "SerialNumber": "3269", "question": "How many titles were given to people who engaged in the Operation Dragoon?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Operation_Dragoon", "label": "Operation Dragoon"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/battles", "label": "engaged"}, {"uri": "http://dbpedia.org/ontology/award", "label": "engaged"}], "id": "cb3a9f4a1e8d44a1adacbd1db7b0bab9"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/The_Sarah_Jane_Adventures> <http://dbpedia.org/property/creator> ?x . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }", "SerialNumber": "3271", "question": "How many other important things has the painter of Sarah Jane Adventures done?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures", "label": "Sarah Jane Adventures"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/creator", "label": "painter"}, {"uri": "http://dbpedia.org/ontology/notableWork", "label": "painter"}], "id": "0aef9a11ec194002b66c6ff62f383798"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/champion> <http://dbpedia.org/resource/2015_Alabama_Crimson_Tide_football_team> . ?uri <http://dbpedia.org/property/athletics> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "SerialNumber": "3272", "question": "Count all the universities who participated in the tournament won by Alabama Crimson Tides in 2015 ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2015_Alabama_Crimson_Tide_football_team", "label": "crimson alabama"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/champion", "label": "Tides"}, {"uri": "http://dbpedia.org/property/athletics", "label": "Tides"}, {"uri": "http://dbpedia.org/ontology/University", "label": "universities"}], "id": "5c55ff44c6ac449d923b0a43437ec726"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kerguelen_Islands> <http://dbpedia.org/ontology/governmentType> ?x . ?x <http://dbpedia.org/ontology/currency> ?uri  . }", "SerialNumber": "3274", "question": "What is the currency of the country of Kerguelen Islands?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kerguelen_Islands", "label": "Kerguelen Islands"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/governmentType", "label": "country"}, {"uri": "http://dbpedia.org/ontology/currency", "label": "currency"}], "id": "951988a7d1c344dfbb421152061e3778"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Alexander_Lippisch> . ?x <http://dbpedia.org/property/nationalOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Aircraft>}", "SerialNumber": "3276", "question": "For which country did Alexander Lippisch design airplanes?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Alexander_Lippisch", "label": "Alexander Lippisch"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/designer", "label": "design"}, {"uri": "http://dbpedia.org/property/nationalOrigin", "label": "airplanes"}, {"uri": "http://dbpedia.org/ontology/Aircraft", "label": "airplanes"}], "id": "d5bf2f11fdfd47958b21a0ad3a2fdb90"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Frisbie_Hoar> <http://dbpedia.org/property/order> ?uri. <http://dbpedia.org/resource/William_Langer> <http://dbpedia.org/property/order> ?uri . }", "SerialNumber": "3277", "question": "Where did george f hoar and willian langer spend the most important time of their political career?", "entity mapping": [{"uri": "http://dbpedia.org/resource/George_Frisbie_Hoar", "label": "george hoar"}, {"uri": "http://dbpedia.org/resource/William_Langer", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/order", "label": "career"}, {"uri": "http://dbpedia.org/property/order", "label": "career"}], "id": "30d267130c65402ba2c0efdc2ea5691f"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Union_State> <http://dbpedia.org/property/largestCity> ?uri. <http://dbpedia.org/resource/Svetlana_Gounkina> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "SerialNumber": "3279", "question": "Whihc birthpalce of Svetlana Gounkina is also the largest city of Union State ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Union_State", "label": "Union State"}, {"uri": "http://dbpedia.org/resource/Svetlana_Gounkina", "label": "Svetlana Gounkina"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/largestCity", "label": "largest city"}, {"uri": "http://dbpedia.org/ontology/birthPlace"}], "id": "4afdea93d75746e79aa9c8da00070b4d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Pandikar_Amin_Mulia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "SerialNumber": "3280", "question": "What is the country whose speaker of the Dewan Rakyat is Pandikar Amin Mulia?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pandikar_Amin_Mulia", "label": "Pandikar Amin Mulia"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/leaderName", "label": "Rakyat"}, {"uri": "http://dbpedia.org/ontology/Country", "label": "country"}], "id": "d6837e9445dd4d89ba1491d92ec402cf"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Blade_Runner_2:_The_Edge_of_Human> . ?x <http://dbpedia.org/ontology/series> ?uri  . }", "SerialNumber": "3282", "question": "To which series does the book belong which came after the Blade Runner 2?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Blade_Runner_2:_The_Edge_of_Human", "label": "2"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/previousWork", "label": "Runner"}, {"uri": "http://dbpedia.org/ontology/series", "label": "series"}], "id": "012275fbe2924170a2dc92fcdfb02849"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Colombia> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "SerialNumber": "3284", "question": "Which company's cars are assembled in Colombia?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Colombia", "label": "Colombia"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/assembly", "label": "assembled"}, {"uri": "http://dbpedia.org/property/parentCompany", "label": "company's"}, {"uri": "http://dbpedia.org/ontology/Automobile", "label": "assembled"}], "id": "afaccc78ee0944f59fe4462b00ec4324"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/City_of_Newcastle> . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "3285", "question": "In which places do companies founded in Newcastle operate?", "entity mapping": [{"uri": "http://dbpedia.org/resource/City_of_Newcastle", "label": "Newcastle"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/foundationPlace", "label": "founded"}, {"uri": "http://dbpedia.org/ontology/regionServed", "label": "operate"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "companies"}], "id": "4af9ff3c965e4f76b2e60a5a204d15e2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Ren\u00e9_&_Angela> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "SerialNumber": "3288", "question": "Musical artists who are associated with Ren & Angela were born where ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ren\u00e9_&_Angela", "label": "angela ren"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/associatedActs", "label": "associated"}, {"uri": "http://dbpedia.org/property/birthPlace", "label": "born"}, {"uri": "http://dbpedia.org/ontology/MusicalArtist", "label": "Musical artist"}], "id": "89020ed4a12841c4abf8744b5f6f84d3"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/cinematography> ?x  . }", "SerialNumber": "3290", "question": "What are the things whose director of photography died in United States?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": "United States"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/deathPlace", "label": "died in"}, {"uri": "http://dbpedia.org/property/cinematography", "label": "photography"}], "id": "f5133efadcbd4156acea7c0709acf981"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Paul_Leonard_(writer)> . ?x <http://dbpedia.org/ontology/series> ?uri  . }", "SerialNumber": "3291", "question": "Paul Leonard's work can be divided into how many series?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Leonard_(writer)", "label": "Paul Leonard"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/author", "label": "divided"}, {"uri": "http://dbpedia.org/ontology/series", "label": "series"}], "id": "3baa786d346248839da91be72db9ca83"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/international> <http://dbpedia.org/resource/Muslim_Brotherhood> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}", "SerialNumber": "3294", "question": "Which sects people are part of local political parties which fall under the International Muslim Brotherhood?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Muslim_Brotherhood", "label": "Muslim Brotherhood"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/international", "label": "International"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "fall"}, {"uri": "http://dbpedia.org/ontology/PoliticalParty", "label": "political part"}], "id": "c721ef1e42924f8e9f9e185cbc00b5ce"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Harry_Nilsson> . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}", "SerialNumber": "3297", "question": "Who narrated the albums in which Harry Nilsson performed?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Harry_Nilsson", "label": "Harry Nilsson"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/artist", "label": "performed"}, {"uri": "http://dbpedia.org/property/narrated", "label": "narrated"}, {"uri": "http://dbpedia.org/ontology/Album", "label": "album"}], "id": "a568918506ad48f08dc9ea2bcf4f9d47"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Karen_Grigorian> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri . }", "SerialNumber": "3299", "question": "What do craig Van tilbury and karen Grigorian do for a living?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Karen_Grigorian", "label": "karen Grigorian"}, {"uri": "http://dbpedia.org/resource/Craig_Van_Tilbury", "label": "craig Van tilbury"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/occupation", "label": "living"}, {"uri": "http://dbpedia.org/ontology/occupation", "label": "living"}], "id": "86a47aa322204efb92fe728b58696cf5"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Norwegian_language> . ?uri <http://dbpedia.org/ontology/country> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "SerialNumber": "3305", "question": "List the universities from a country where Norwegian language is officially accepted.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Norwegian_language", "label": "Norwegian language"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/officialLanguage", "label": "officially"}, {"uri": "http://dbpedia.org/ontology/country", "label": "country"}, {"uri": "http://dbpedia.org/ontology/University", "label": "universities"}], "id": "1d4631ca121d427a83c91e0ec29ad410"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/operatedBy> <http://dbpedia.org/resource/BNSF_Railway> . ?x <http://dbpedia.org/property/location> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayTunnel>}", "SerialNumber": "3307", "question": "Where is the tunnel, which is operated by BNSF railways?", "entity mapping": [{"uri": "http://dbpedia.org/resource/BNSF_Railway", "label": "BNSF railway"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/operatedBy", "label": ""}, {"uri": "http://dbpedia.org/property/location", "label": "operated"}, {"uri": "http://dbpedia.org/ontology/RailwayTunnel", "label": "railways"}], "id": "affd9d6f1cf44d159c675e5b8252c440"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ronald_Wilson> <http://dbpedia.org/property/branch> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }", "SerialNumber": "3308", "question": "What is the mascot of the military unit in which Ronald Wilson served?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ronald_Wilson", "label": "Ronald Wilson"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/branch", "label": "served"}, {"uri": "http://dbpedia.org/property/mascot", "label": "mascot"}], "id": "4a54d07f42fc46d0b4b5125be3c636b4"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Egushawa> . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "3310", "question": "Who battled under commander Egushawa in a conflict?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Egushawa", "label": "Egushawa"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/commander", "label": "commander"}, {"uri": "http://dbpedia.org/property/combatant", "label": "battled"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "conflict"}], "id": "b6d318523b79426193d35e5a97ecda5f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/capital> <http://dbpedia.org/resource/Bocas_Town,_Bocas_del_Toro> . ?x <http://dbpedia.org/property/country> ?uri  . }", "SerialNumber": "3311", "question": "In which country is Bocas del toro a capital of some region?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bocas_Town,_Bocas_del_Toro", "label": "bocas"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/capital", "label": "capital"}, {"uri": "http://dbpedia.org/property/country", "label": "country"}], "id": "aabec43f1b95480f9b3904dddc7e81e9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Tehran> . ?x <http://dbpedia.org/ontology/product> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "3313", "question": "What products are made by Tehran based companies?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tehran", "label": "Tehran"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/location", "label": "based"}, {"uri": "http://dbpedia.org/ontology/product", "label": "product"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "companies"}], "id": "0ad9954f309c496ab4dfbd8056a58187"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/ethnicity> <http://dbpedia.org/resource/European_Americans> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }", "SerialNumber": "3314", "question": "What are some causes of death of European Americans?", "entity mapping": [{"uri": "http://dbpedia.org/resource/European_Americans", "label": "European Americans"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/ethnicity"}, {"uri": "http://dbpedia.org/ontology/deathCause", "label": "death"}], "id": "f78a415ef99f429ea50169b5a64d9fa0"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> . ?uri <http://dbpedia.org/ontology/neighboringMunicipality> <http://dbpedia.org/resource/Pregny-Chamb\u00e9sy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}", "SerialNumber": "3317", "question": "Which settlement's neighboring municipalities are Cologny and Pregny-Chambsy?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cologny", "label": "Cologny"}, {"uri": "http://dbpedia.org/resource/Pregny-Chamb\u00e9sy", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/neighboringMunicipalities", "label": "neighboring municipalities"}, {"uri": "http://dbpedia.org/ontology/neighboringMunicipality", "label": "neighboring"}, {"uri": "http://dbpedia.org/ontology/Settlement", "label": "settlement"}], "id": "bf7af8752a1748b9ab92c8690ddf65f9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Baltimore_Ravens> . ?x <http://dbpedia.org/ontology/programmeFormat> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}", "SerialNumber": "3320", "question": "What kind of things are on the radio stations affiliated with the Baltimore Ravens?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Baltimore_Ravens", "label": "Baltimore Ravens"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/affiliations", "label": "affiliated"}, {"uri": "http://dbpedia.org/ontology/programmeFormat"}, {"uri": "http://dbpedia.org/ontology/RadioStation", "label": "radio station"}], "id": "2a1303ce259f4ddd8c63cb28a9edf458"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Insects_vs_Robots> <http://dbpedia.org/property/currentMembers> ?uri. <http://dbpedia.org/resource/Kenny_Dies> <http://dbpedia.org/ontology/musicComposer> ?uri} ", "SerialNumber": "3322", "question": "Which current member of Insect vs Robots is also the music composer of Kenny Dies ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Insects_vs_Robots", "label": "robots insect"}, {"uri": "http://dbpedia.org/resource/Kenny_Dies", "label": "Kenny Dies"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentMembers", "label": "current member"}, {"uri": "http://dbpedia.org/ontology/musicComposer", "label": "music composer"}], "id": "339fba01bf374193aaa038e896284b65"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Georges_Wolinski> <http://dbpedia.org/property/placeOfDeath> ?uri. <http://dbpedia.org/resource/Judson_Huss> <http://dbpedia.org/property/deathPlace> ?uri} ", "SerialNumber": "3325", "question": "Where did Georges Wolinski and Judson Huss die/", "entity mapping": [{"uri": "http://dbpedia.org/resource/Georges_Wolinski", "label": "Georges Wolinski"}, {"uri": "http://dbpedia.org/resource/Judson_Huss", "label": "Judson Huss"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfDeath"}, {"uri": "http://dbpedia.org/property/deathPlace", "label": "die/"}], "id": "5953c1ca741b4952bfa7231396751599"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/workInstitutions> <http://dbpedia.org/resource/Western_Pennsylvania_Hospital> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "3326", "question": "Which city is known for the people working in the western penn hospital?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Western_Pennsylvania_Hospital", "label": "hospital western"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/workInstitutions", "label": "working"}, {"uri": "http://dbpedia.org/ontology/knownFor", "label": "known for"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "hospital"}], "id": "c1cdd524499641ec80f02549a8991821"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/American_Football_League> <http://dbpedia.org/property/champion> ?uri } ", "SerialNumber": "3328", "question": "Which team won the American Football League?", "entity mapping": [{"uri": "http://dbpedia.org/resource/American_Football_League", "label": "American Football League"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/champion", "label": "won"}], "id": "205217dd61614f7b9dff96c1b2f7202c"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jordan_River> <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/Golan_Heights> }", "SerialNumber": "3329", "question": "Does the Jordan River start in the Golan Heights?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jordan_River", "label": "Jordan River"}, {"uri": "http://dbpedia.org/resource/Golan_Heights", "label": "Golan Heights"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourceRegion", "label": "start"}], "id": "216518a4ffe546ce91c5e430549b0037"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "3330", "question": "Give me all office holders who finally retired in Montpelier, Orange, Virgina?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)", "label": "Montpelier"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/restingplace"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "office holder"}], "id": "8e346529106147e896a3f2e56bf87969"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Raymond_Conner> } ", "SerialNumber": "3333", "question": "In which company is Raymond Conner at an important position?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Raymond_Conner", "label": "Raymond Conner"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/keyPerson", "label": "position"}], "id": "2f9e649669aa4782919424b5cf845cf3"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Five_(The_Vampire_Diaries)> <http://dbpedia.org/property/series> ?x . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3336", "question": "Name the actors of the TV show which has an episode named The Five ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Five_(The_Vampire_Diaries)", "label": "The Five"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/series", "label": "named"}, {"uri": "http://dbpedia.org/property/starring", "label": "actor"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "aa025dbe97974996bdee7ea712d6fcd2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/National_Academy_Museum_and_School> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }", "SerialNumber": "3337", "question": "Where are the National Academy Museum and School awardwinners buried?", "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Academy_Museum_and_School", "label": "National Academy Museum and School"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/award", "label": "award"}, {"uri": "http://dbpedia.org/ontology/restingPlace", "label": "buried"}], "id": "9814a502d6344b8684c3ef7c53257f8e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elizabeth_of_Rhuddlan> <http://dbpedia.org/property/placeOfBurial> ?uri. <http://dbpedia.org/resource/Isabel_of_Cambridge,_Countess_of_Essex> <http://dbpedia.org/property/placeOfBurial> ?uri . }", "SerialNumber": "3340", "question": "What is the common location of  tomb of the Elizabeth of Rhuddlan and Isabel of Cambridge?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Elizabeth_of_Rhuddlan", "label": "Elizabeth of Rhuddlan"}, {"uri": "http://dbpedia.org/resource/Isabel_of_Cambridge,_Countess_of_Essex", "label": "cambridge isabel"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBurial", "label": "tomb"}, {"uri": "http://dbpedia.org/property/placeOfBurial", "label": "tomb"}], "id": "7a39f5fc355c464eb024ab21d1b43e89"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Space_Launch_Complex_17> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }", "SerialNumber": "3342", "question": "Which company had built the rockets launched at the Cape Canaveral Air Force Station Space Launch Complex 17?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Space_Launch_Complex_17", "label": "Cape Canaveral Air Force Station Space Launch Complex 17"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/launchSite", "label": "launched"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "rockets"}], "id": "2c061f3427d347acaf1d538fba4ea75e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Tackle_(gridiron_football_position)> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "SerialNumber": "3345", "question": "What are the former team of the american football players who played at gridiron football position ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tackle_(gridiron_football_position)", "label": "position gridiron football"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/position", "label": "position"}, {"uri": "http://dbpedia.org/ontology/formerTeam", "label": "former team"}, {"uri": "http://dbpedia.org/ontology/AmericanFootballPlayer", "label": "american football player"}], "id": "04215c1446384126b9c2ac65d0431a1a"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Isa_(name)> <http://dbpedia.org/property/meaning> ?uri. <http://dbpedia.org/resource/Sacred_Heart_Convent_School_(Bangkok)> <http://dbpedia.org/ontology/type> ?uri} ", "SerialNumber": "3347", "question": "What  is the meaning of the Isa (name) which is also a relegion of Sacred Heart Convent School (Bangkok) ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Isa_(name)", "label": "Isa (name)"}, {"uri": "http://dbpedia.org/resource/Sacred_Heart_Convent_School_(Bangkok)", "label": "Sacred Heart Convent School (Bangkok)"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/meaning", "label": "meaning"}, {"uri": "http://dbpedia.org/ontology/type", "label": "School"}], "id": "225d5bcff9274ce3bbf7c2527939ee7b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/season> <http://dbpedia.org/resource/2014\u201315_Football_League_Championship> . ?uri <http://dbpedia.org/ontology/managerClub> ?x  . }", "SerialNumber": "3348", "question": "Who are the managers of clubs participating in the 2014-2015 Football League Championship?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2014\u201315_Football_League_Championship", "label": "championship football league"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/season", "label": "Championship"}, {"uri": "http://dbpedia.org/ontology/managerClub", "label": "managers"}], "id": "7717547eedc44d92a881117189824621"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014\u201315_Panionios_G.S.S._season> <http://dbpedia.org/property/stadium> ?uri. <http://dbpedia.org/resource/Nikos_Pateras> <http://dbpedia.org/ontology/residence> ?uri} ", "SerialNumber": "3350", "question": "Which official residence of Nikos Pateras is also the stadium of anionios G.S.S. season 2014-15 ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2014\u201315_Panionios_G.S.S._season", "label": "anionios season g.s.s."}, {"uri": "http://dbpedia.org/resource/Nikos_Pateras", "label": "Nikos Pateras"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/stadium", "label": "stadium"}, {"uri": "http://dbpedia.org/ontology/residence", "label": "residence"}], "id": "f4ff42e2419941e88bca179599c2ea22"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hirth_Acrostar> <http://dbpedia.org/ontology/origin> ?uri. <http://dbpedia.org/resource/Cobra_(missile)> <http://dbpedia.org/ontology/origin> ?uri . }", "SerialNumber": "3354", "question": "What is the country of the Hirth Acrostar and the Cobra missile?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Hirth_Acrostar", "label": "Hirth Acrostar"}, {"uri": "http://dbpedia.org/resource/Cobra_(missile)", "label": "Cobra"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/origin", "label": "missile"}, {"uri": "http://dbpedia.org/ontology/origin", "label": "missile"}], "id": "6772f2e11d834d0dabc10d05d6a4ab72"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Spanish_language> . ?uri <http://dbpedia.org/ontology/location> ?x  . }", "SerialNumber": "3356", "question": "Collect and return a list of things in the area where Spanish language is used?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Spanish_language", "label": "Spanish language"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/language", "label": "language"}, {"uri": "http://dbpedia.org/ontology/location", "label": "area"}], "id": "0ebb619e771642908242969b42bbf642"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jo_Garcia> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Merritt_Cabal> <http://dbpedia.org/ontology/knownFor> ?uri . }", "SerialNumber": "3357", "question": "What made jo garcia and merritt cabal both famous?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jo_Garcia", "label": "jo garcia"}, {"uri": "http://dbpedia.org/resource/Merritt_Cabal", "label": "merritt cabal"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/knownFor", "label": "famous"}, {"uri": "http://dbpedia.org/ontology/knownFor", "label": "famous"}], "id": "62e9fa82eea7498790e2d5ca5a664a60"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/GIMP> <http://dbpedia.org/ontology/programmingLanguage> <http://dbpedia.org/resource/C_(programming_language)> }", "SerialNumber": "3358", "question": "Is GIMP written in C?", "entity mapping": [{"uri": "http://dbpedia.org/resource/GIMP", "label": "GIMP"}, {"uri": "http://dbpedia.org/resource/C_(programming_language)", "label": "C"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/programmingLanguage", "label": "written"}], "id": "6db524c4b72a43a788d1622f07782c39"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Tuna_salad> . ?x <http://dbpedia.org/property/country> ?uri  . }", "SerialNumber": "3359", "question": "What are all the countires where food related to tuna salad is consumed ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tuna_salad", "label": "tuna salad"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/related", "label": "related"}, {"uri": "http://dbpedia.org/property/country", "label": "consumed"}], "id": "9465a9187c3f42a9b64cc0da135c6784"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/instruments> <http://dbpedia.org/resource/Drum_kit> . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}", "SerialNumber": "3361", "question": "How many different genres led to other genres where drums are important?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Drum_kit", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/instruments", "label": "important"}, {"uri": "http://dbpedia.org/ontology/stylisticOrigin", "label": "important"}, {"uri": "http://dbpedia.org/ontology/MusicGenre", "label": "genre"}], "id": "312c5bacb7c14ea1b41c0e219107c417"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/league> <http://dbpedia.org/resource/National_Basketball_Association>  . }", "SerialNumber": "3362", "question": "How many people have played for the NBA?", "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Basketball_Association", "label": "NBA"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/league", "label": "played"}], "id": "9b1fb4f02cfb4023bb3596310cad80bc"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Go-To_card> <http://dbpedia.org/property/operator> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PublicTransitSystem>}", "SerialNumber": "3364", "question": "Where is the headquarters of the public transit system which operators Go-to-card ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Go-To_card", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/operator", "label": "operator"}, {"uri": "http://dbpedia.org/property/headquarters", "label": "headquarters"}, {"uri": "http://dbpedia.org/ontology/PublicTransitSystem", "label": "public transit system"}], "id": "4dc32ad3dae4429d963b5b4282c18767"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/Newell's_Old_Boys>  . }", "SerialNumber": "3365", "question": "How many people played for Newell's Old Boys?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Newell's_Old_Boys", "label": "Newell's Old Boys"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/youthclubs"}], "id": "0e0a2a498e574ec6925f6cb31cd3c729"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Heinz_Field> <http://dbpedia.org/property/tenants> ?uri } ", "SerialNumber": "3369", "question": "To which american football teams does the Heinz Field serve as home stadium?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Heinz_Field", "label": "Heinz Field"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/tenants", "label": "stadium"}], "id": "ada05be944104948987543e9a09aa581"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Shirelles> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }", "SerialNumber": "3372", "question": "What is the occupation of the band members of The Shirelles?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Shirelles", "label": "The Shirelles"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/associatedMusicalArtist", "label": "members"}, {"uri": "http://dbpedia.org/ontology/occupation", "label": "occupation"}], "id": "6feb76adf49746a2a18f9d21a1d22306"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Judy_Hart_Angelo>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3373", "question": "Which tv series have a score composed by judy hard angelo?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Judy_Hart_Angelo", "label": "score"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/composer", "label": "composed by"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "angelo"}], "id": "cd190de039534a6d91abee2ac3dd411c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jason_Carter_(actor)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3375", "question": "Name the TV show with artist Christopher Franke and cast member Jason Carter ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Christopher_Franke", "label": "Christopher Franke"}, {"uri": "http://dbpedia.org/resource/Jason_Carter_(actor)", "label": "Jason Carter"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/artist", "label": "artist"}, {"uri": "http://dbpedia.org/ontology/starring", "label": "member"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "48ed9662c9d34e7bb7ff13ec8d02c81f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Lori_Black> . ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "3377", "question": "Name the office holder with successor as Adrian A Basora and child as Lori Black ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lori_Black", "label": "Lori Black"}, {"uri": "http://dbpedia.org/resource/Adrian_A._Basora", "label": "basora adrian"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/child", "label": "child"}, {"uri": "http://dbpedia.org/property/successor", "label": "successor"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "office holder"}], "id": "ca12347dfd3541a5a313ae988767ca9f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Joe_Hahn> . ?uri <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Chester_Bennington> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "SerialNumber": "3379", "question": "What band has Joe Hahn and Chester Bennington?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Joe_Hahn", "label": "Joe Hahn"}, {"uri": "http://dbpedia.org/resource/Chester_Bennington", "label": "Chester Bennington"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentMembers"}, {"uri": "http://dbpedia.org/property/currentMembers"}, {"uri": "http://dbpedia.org/ontology/Band", "label": "band"}], "id": "fb88bbd86d0d4401951bf15cad3dc0ad"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Matt_Snorton> <http://dbpedia.org/property/pastteams> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}", "SerialNumber": "3380", "question": "In which cities are there american football teams where Matt Snorton played?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Matt_Snorton", "label": "Matt Snorton"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/pastteams", "label": "teams"}, {"uri": "http://dbpedia.org/ontology/locationCity", "label": "played"}, {"uri": "http://dbpedia.org/ontology/AmericanFootballTeam", "label": "american football team"}], "id": "a7f115fe1444401b808019eec0ae4008"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/French_people> . ?x <http://dbpedia.org/property/awards> ?uri  . }", "SerialNumber": "3383", "question": "How many awards have the french people received?", "entity mapping": [{"uri": "http://dbpedia.org/resource/French_people", "label": "french people"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/stateOfOrigin"}, {"uri": "http://dbpedia.org/property/awards", "label": "awards"}], "id": "b96656337c6747a381cea7ab41528178"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Frederick_Cooke_(socialist)> <http://dbpedia.org/ontology/vicePresident> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }", "SerialNumber": "3384", "question": "Where is the VP buried, which was served by Frederick Cooke?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Frederick_Cooke_(socialist)", "label": "Frederick Cooke"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/vicePresident", "label": "served"}, {"uri": "http://dbpedia.org/ontology/restingPlace", "label": "buried,"}], "id": "06dc963aaf6f4541912707a69c9c48e9"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Oulu> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Turku> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "SerialNumber": "3385", "question": "What is the sea connected to Oulu and Turku?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Oulu", "label": "Oulu"}, {"uri": "http://dbpedia.org/resource/Turku", "label": "Turku"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/cities", "label": "connected"}, {"uri": "http://dbpedia.org/property/cities", "label": "connected"}, {"uri": "http://dbpedia.org/ontology/Sea", "label": "sea"}], "id": "501bbfe69c3a4fcd88d284639842d8dc"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/property/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_Defense> }", "SerialNumber": "3386", "question": "does the US navy have the structure of command of us department of defence?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Navy", "label": "navy"}, {"uri": "http://dbpedia.org/resource/United_States_Department_of_Defense", "label": "department"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/commandStructure", "label": "structure command"}], "id": "9d4afc6a5c164d81bbeb24a1bc568c3f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/William_Ofori_Atta> . ?x <http://dbpedia.org/property/allegiance> ?uri  . }", "SerialNumber": "3387", "question": "What country did the successor of William Ofori Atta swear his oath to?", "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Ofori_Atta", "label": "William Ofori Atta"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/predecessor", "label": "oath"}, {"uri": "http://dbpedia.org/property/allegiance", "label": "oath"}], "id": "f8dc5dd3cf8c4e4daf406be6479ac498"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Katy_B> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}", "SerialNumber": "3388", "question": "Through which label has Katy B released her singles?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Katy_B", "label": "Katy B"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/writer", "label": "released"}, {"uri": "http://dbpedia.org/ontology/recordLabel", "label": "label"}, {"uri": "http://dbpedia.org/ontology/Single", "label": "single"}], "id": "c9d5a274b50f454986740fdfafd327cc"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/French_people> . ?x <http://dbpedia.org/property/awards> ?uri  . }", "SerialNumber": "3389", "question": "What are some awards given to the french people?", "entity mapping": [{"uri": "http://dbpedia.org/resource/French_people", "label": "french people"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/stateOfOrigin"}, {"uri": "http://dbpedia.org/property/awards", "label": "awards"}], "id": "ab1274d78df1402ca6ccf7ba5642f936"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lao_Plaza_Hotel> <http://dbpedia.org/property/developer> ?uri } ", "SerialNumber": "3391", "question": "Where is Lao Plaza Hotel located?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lao_Plaza_Hotel", "label": "Lao Plaza Hotel"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/developer", "label": "located"}], "id": "57e96d0a037f4c088d5a09944c314b58"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Rhaetian_Railway> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "SerialNumber": "3393", "question": "In how many nations does Rhaetian Railways own train stations?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Rhaetian_Railway", "label": "Rhaetian Railways"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owningOrganisation"}, {"uri": "http://dbpedia.org/ontology/country", "label": "nation"}, {"uri": "http://dbpedia.org/ontology/Country", "label": "nation"}], "id": "1a67a8c314f94af3bbb0cac98461b913"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Willem_Cornelis_Janse_van_Rensburg> <http://dbpedia.org/property/restingplace> ?uri. <http://dbpedia.org/resource/Thomas_Fran\u00e7ois_Burgers> <http://dbpedia.org/property/restingplace> ?uri . }", "SerialNumber": "3394", "question": "Where are the burial grounds of Willem Cornelis Janse van Rensburg and Thomas Franois Burgers?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Willem_Cornelis_Janse_van_Rensburg", "label": "Willem Cornelis Janse van Rensburg"}, {"uri": "http://dbpedia.org/resource/Thomas_Fran\u00e7ois_Burgers", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/restingplace"}, {"uri": "http://dbpedia.org/property/restingplace"}], "id": "fe825b7ea80045f19a498f490eb78420"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Josh_Friedman> . ?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_3:_Rise_of_the_Machines>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "SerialNumber": "3395", "question": "Which fictional character sculpted by Josh Friedmann was portrayed in Terminator 3 ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Josh_Friedman", "label": "Josh Friedman"}, {"uri": "http://dbpedia.org/resource/Terminator_3:_Rise_of_the_Machines", "label": "terminator"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/creator", "label": "Terminator"}, {"uri": "http://dbpedia.org/ontology/portrayer", "label": "portrayed"}, {"uri": "http://dbpedia.org/ontology/FictionalCharacter", "label": "fictional character"}], "id": "7c11228a01e24c0b81378d51b50efe43"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Niederkirchnerstra\u00dfe> . ?x <http://dbpedia.org/ontology/leader> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}", "SerialNumber": "3396", "question": "Who had headed the governmental agencies whose admin HQ was in Niederkirchnerstrasse?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Niederkirchnerstra\u00dfe", "label": "Niederkirchnerstrasse"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/headquarter", "label": "admin HQ"}, {"uri": "http://dbpedia.org/ontology/leader", "label": "agencies"}, {"uri": "http://dbpedia.org/ontology/GovernmentAgency", "label": "agencies"}], "id": "6edbb617d6a3485c8a8a32e78e14cf0c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Grasim_Bhiwani_Textiles> <http://dbpedia.org/property/parent> ?x . ?x <http://dbpedia.org/property/foundation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "3397", "question": "In which city was the company founded , which owns Grasim Bhiwani Textiles?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Grasim_Bhiwani_Textiles", "label": "Grasim Bhiwani Textiles"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/parent", "label": "owns"}, {"uri": "http://dbpedia.org/property/foundation", "label": "founded"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "4ee990f7399a4511950f55ae69196980"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lake_Uniam\u00e9si> <http://dbpedia.org/property/outflow> ?uri. <http://dbpedia.org/resource/Cahora_Bassa> <http://dbpedia.org/property/inflow> ?uri} ", "SerialNumber": "3403", "question": "Which country has outflow of  Lake Uniamsi and  inflows of the Cahora Bassa?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lake_Uniam\u00e9si", "label": ""}, {"uri": "http://dbpedia.org/resource/Cahora_Bassa", "label": "Cahora Bassa"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/outflow", "label": "outflow"}, {"uri": "http://dbpedia.org/property/inflow", "label": "inflows"}], "id": "40d15e549b0f4899acb00cf469105b8d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Lancy> . ?uri <http://dbpedia.org/ontology/neighboringMunicipality> <http://dbpedia.org/resource/Pregny-Chamb\u00e9sy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}", "SerialNumber": "3405", "question": "Which city's neighboring municipalities are Lancy and  Pregny-Chambsy?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lancy", "label": "Lancy"}, {"uri": "http://dbpedia.org/resource/Pregny-Chamb\u00e9sy", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/neighboringMunicipalities", "label": "neighboring municipalities"}, {"uri": "http://dbpedia.org/ontology/neighboringMunicipality", "label": "neighboring"}, {"uri": "http://dbpedia.org/ontology/Location", "label": ""}], "id": "9a80906c6ddb4ce1ae6405210f073325"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Israel>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "3415", "question": "Which military battles are associated with Israel?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Israel", "label": "Israel"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/place"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "military"}], "id": "6f21a2501af44a8d9c2678f2e61a2207"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cheasty_Boulevard_South> <http://dbpedia.org/ontology/maintainedBy> ?uri } ", "SerialNumber": "3416", "question": "Which city has it's landmark as Cheasty Boulevard South?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cheasty_Boulevard_South", "label": "Cheasty Boulevard South"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/maintainedBy", "label": "landmark"}], "id": "724442cd9501404cbafe30105de16e01"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Short_story> } ", "SerialNumber": "3419", "question": "What are some short story kind of Books?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Short_story", "label": "short story"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/literaryGenre", "label": "Books"}], "id": "c593b3d2dd42455e9a67d0aa2e905027"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Eliza_Schneider> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Isaac_Hayes> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3420", "question": "Give me the sitcoms where Eliza Schneider and Isaac Hayes gave voice?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Eliza_Schneider", "label": "Eliza Schneider"}, {"uri": "http://dbpedia.org/resource/Isaac_Hayes", "label": "Isaac Hayes"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/voices", "label": "voice"}, {"uri": "http://dbpedia.org/property/voices", "label": "voice"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "sitcoms"}], "id": "da876b5724b64e209959a34efc201d5f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet> . ?x <http://dbpedia.org/property/employer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "3423", "question": "Who employed the person famous for the Boeing fa18ef Super Hornet?", "entity mapping": [], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/knownFor", "label": "Hornet"}, {"uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet", "label": "hornet super"}, {"uri": "http://dbpedia.org/property/employer", "label": "employed"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "person"}], "id": "d0db4cd9f5624de8a9bf3c8d4b104695"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/Norwalk_Trainband> . ?x <http://dbpedia.org/property/restingplace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "3425", "question": "List the resting place of the people who served in Norwalk Trainband.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Norwalk_Trainband", "label": "Norwalk Trainband"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/militaryUnit", "label": "served"}, {"uri": "http://dbpedia.org/property/restingplace", "label": "resting place"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "served"}], "id": "ad0c25ffff314adc8360b09d8bfeed66"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/narrated> <http://dbpedia.org/resource/Alan_Barzman> . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}", "SerialNumber": "3427", "question": "List all the narrator of the albums which had Alan Barzman as one of the narrator ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Alan_Barzman", "label": "Alan Barzman"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/narrated", "label": "narrator"}, {"uri": "http://dbpedia.org/property/narrated", "label": "narrator"}, {"uri": "http://dbpedia.org/ontology/Album", "label": "album"}], "id": "cad124dc6dd849f8aa03d47598e6abbb"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Boston> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3430", "question": "Give me all tv shows which are based in boston and massachusetts?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Boston", "label": "boston"}, {"uri": "http://dbpedia.org/resource/Massachusetts", "label": "massachusetts"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/location", "label": "based"}, {"uri": "http://dbpedia.org/ontology/location", "label": "based"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "f5389602a5104bc0b3691a6dc0b6aed4"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Miss_Louisiana_USA> . ?uri <http://dbpedia.org/property/spouse> ?x  . }", "SerialNumber": "3431", "question": "Who is married to a Miss Louisiana, USA?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Miss_Louisiana_USA", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/title", "label": "USA"}, {"uri": "http://dbpedia.org/property/spouse", "label": "married to"}], "id": "1f8f6352c2c54ce3b53aba360323d3ed"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/James_Horner> . ?x <http://dbpedia.org/property/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "3432", "question": "Who has produced movies that have a James Horner score?", "entity mapping": [{"uri": "http://dbpedia.org/resource/James_Horner", "label": "James Horner"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/music", "label": "score"}, {"uri": "http://dbpedia.org/property/producer", "label": "produced"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "26c1a1fbf2d44a43b2365a9bc2ac9c5c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Vostok_programme> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}", "SerialNumber": "3433", "question": "What is the birth place of the astronaut whose mission was the Vostok programmer?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Vostok_programme", "label": "Vostok programme"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mission", "label": "mission"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "birth place"}, {"uri": "http://dbpedia.org/ontology/Astronaut", "label": "astronaut"}], "id": "26745f9ea116424bb5a1ed1ac3faa8cf"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Fleisher_Yarn> . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "SerialNumber": "3434", "question": "What team did the players start their careers with, who right now play for Fleisher Yarn?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fleisher_Yarn", "label": "Fleisher Yarn"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/team", "label": "team"}, {"uri": "http://dbpedia.org/property/debutteam", "label": "team"}, {"uri": "http://dbpedia.org/ontology/Athlete", "label": "play"}], "id": "cd54a705b06443df8c1be672abe15815"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_CH-47_Chinook>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "3437", "question": "Name the company which produces both  Boeing F/A-18 E/F Hornet nad CH-46 Chinook ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Boeing_CH-47_Chinook", "label": "chinook boeing"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/product", "label": "Chinook"}, {"uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet", "label": "hornet"}, {"uri": "http://dbpedia.org/property/products", "label": "Chinook"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "2d4e39d0c0784adfb281198a892d3894"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/ontology/presenter> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}", "SerialNumber": "3438", "question": "Count all the awards which were presented by something located in California.", "entity mapping": [{"uri": "http://dbpedia.org/resource/California", "label": "California"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/headquarter", "label": "located"}, {"uri": "http://dbpedia.org/ontology/presenter", "label": "presented"}, {"uri": "http://dbpedia.org/ontology/Award", "label": "awards"}], "id": "83ca3f4edad24d93a575b23842e8e6e2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Maria_Ludwika_Krasi\u0144ska> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "SerialNumber": "3440", "question": "Where did the aristocrats die whose mother was Maria Ludwika Krasiska?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Maria_Ludwika_Krasi\u0144ska", "label": "Maria Ludwika Krasiska"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mother", "label": "mother"}, {"uri": "http://dbpedia.org/property/deathPlace", "label": "die"}, {"uri": "http://dbpedia.org/ontology/Royalty", "label": "die"}], "id": "5af32623f2d747d88f0b3fe7df64b489"}, {"sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Agaricus_bisporus> . ?x <http://dbpedia.org/ontology/ingredient> ?uri }", "SerialNumber": "3444", "question": "Find the total number of  ingredient of the recepies whose ingredient is common Mushroom ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Agaricus_bisporus", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/ingredient", "label": "ingredient"}, {"uri": "http://dbpedia.org/ontology/ingredient", "label": "ingredient"}], "id": "a8d7c64d096f49249d1bbdba54ea0dab"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Hockey_Canada> . ?x <http://dbpedia.org/property/tenants> ?uri  . }", "SerialNumber": "3448", "question": "How many teams have used the stadiums which have been rented by the Canadian Hockey team?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Hockey_Canada", "label": "Canadian"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/tenant", "label": "team"}, {"uri": "http://dbpedia.org/property/tenants", "label": "team"}], "id": "ea10d95104514ba8bca12c1165e2f397"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Fantasy_television> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3450", "question": "How many TV shows are similar to the ones belonging to fantasy genre?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fantasy_television", "label": "fantasy"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/genre", "label": "genre"}, {"uri": "http://dbpedia.org/ontology/related", "label": "fantasy"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "55b536c2b837474d8aa722a73037bd49"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Economist> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "3452", "question": "What religions are followed by economists?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Economist", "label": "economist"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/profession"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}], "id": "7410520bca4c45bbab391b31101a6df3"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Parliament_of_India> <http://dbpedia.org/property/houses> <http://dbpedia.org/resource/Rajya_Sabha> }", "SerialNumber": "3453", "question": "Is Rajya Sabha a house of parliament in India?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Parliament_of_India", "label": "parliament india"}, {"uri": "http://dbpedia.org/resource/Rajya_Sabha", "label": "Rajya Sabha"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/houses", "label": "house"}], "id": "e60d4439142244d0b14d8650ba3ccbcd"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/property/tenants> ?uri  . }", "SerialNumber": "3458", "question": "How many teams have rented stadiums in Canada?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Canada", "label": "Canada"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/location", "label": "stadiums"}, {"uri": "http://dbpedia.org/property/tenants", "label": "stadiums"}], "id": "159f695fd9f34609bd09d41a97aacb40"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Babita> <http://dbpedia.org/property/birthplace> ?uri } ", "SerialNumber": "3459", "question": "Where was Babita born ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Babita", "label": "Babita"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/birthplace", "label": "born"}], "id": "aca36b0993ba45edb0f0fc957c97ce23"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/nearestCity> <http://dbpedia.org/resource/Orange,_Virginia> . ?uri <http://dbpedia.org/property/restingplace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "3461", "question": "Name some politicians buried in a place near Orange Virginia?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Orange,_Virginia", "label": "Orange Virginia"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/nearestCity", "label": "near"}, {"uri": "http://dbpedia.org/property/restingplace", "label": "place"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "buried"}], "id": "b0dd4c5ad51349f1946188f22d7fa899"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Gda\u0144sk> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Oulu> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "SerialNumber": "3462", "question": "What is the sea whose cities are Gdask and Oulu?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gda\u0144sk", "label": ""}, {"uri": "http://dbpedia.org/resource/Oulu", "label": "Oulu"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/cities", "label": "cities"}, {"uri": "http://dbpedia.org/property/cities", "label": "cities"}, {"uri": "http://dbpedia.org/ontology/Sea", "label": "sea"}], "id": "514539c7a7854fb8a29b7c24dc730dbf"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/race> <http://dbpedia.org/resource/Lawrence_Realization_Stakes> . ?x <http://dbpedia.org/ontology/honours> ?uri  . }", "SerialNumber": "3465", "question": "How many awards have been given to the participants of the Lawrence Realization Stakes?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lawrence_Realization_Stakes", "label": "Lawrence Realization Stakes"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/race", "label": "participants"}, {"uri": "http://dbpedia.org/ontology/honours", "label": "awards"}], "id": "610e75c938944f818e964d8858da9836"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Invasion_of_Buwat> <http://dbpedia.org/property/commander> ?uri. <http://dbpedia.org/resource/Fatimah_bint_Sa'd> <http://dbpedia.org/ontology/knownFor> ?uri . }", "SerialNumber": "3475", "question": "Who commanded the invasion of Buwat and made Fatima bint Sa'd famous?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Invasion_of_Buwat", "label": "invasion of Buwat"}, {"uri": "http://dbpedia.org/resource/Fatimah_bint_Sa'd", "label": "fatima sa'd bint"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/commander", "label": "commanded"}, {"uri": "http://dbpedia.org/ontology/knownFor", "label": "famous"}], "id": "0134077a418246169b05e5390e035b00"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ted_Failon> <http://dbpedia.org/ontology/ethnicity> ?uri } ", "SerialNumber": "3476", "question": "What is the ethicity of Ted Falon?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ted_Failon", "label": "Ted Falon"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/ethnicity"}], "id": "f742b26c254f48ada294bbb8649d15c3"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/type> <http://dbpedia.org/resource/NASA>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}", "SerialNumber": "3477", "question": "Who are the astronauts associated with NASA?", "entity mapping": [{"uri": "http://dbpedia.org/resource/NASA", "label": "NASA"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/type"}, {"uri": "http://dbpedia.org/ontology/Astronaut", "label": "astronaut"}], "id": "c73fef8ef82040cdb4ef06b267d8b45d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Cedella_Booker> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Sharon_Marley>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "3478", "question": "Name the person whose mother name is Cedella Booker and has a son named Sharon Marley?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cedella_Booker", "label": "Cedella Booker"}, {"uri": "http://dbpedia.org/resource/Sharon_Marley", "label": "Sharon Marley"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/parent"}, {"uri": "http://dbpedia.org/property/children", "label": "son"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "person"}], "id": "fa685bca2d1949fd9aa9c98cb2200dfe"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/locationCountry> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/ontology/type> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "SerialNumber": "3479", "question": "Which kind of buildings are found in England?", "entity mapping": [{"uri": "http://dbpedia.org/resource/England", "label": "England"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/locationCountry", "label": "found"}, {"uri": "http://dbpedia.org/ontology/type", "label": "found"}, {"uri": "http://dbpedia.org/ontology/Building", "label": "building"}], "id": "aa855f60d8464cb291efa723306a8f74"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Cricket> . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . }", "SerialNumber": "3484", "question": "Cricket is played by which countries' citizens?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cricket", "label": "Cricket"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/occupation", "label": "citizens"}, {"uri": "http://dbpedia.org/ontology/stateOfOrigin"}], "id": "1cb5a6736cd044c798948ca8e81ad7fb"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/NBC> . ?x <http://dbpedia.org/property/presenter> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3487", "question": "Who all have been presenters on shows by the NBC?", "entity mapping": [{"uri": "http://dbpedia.org/resource/NBC", "label": "NBC"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/channel"}, {"uri": "http://dbpedia.org/property/presenter", "label": "presenter"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "2ac17e74901841a48f166336033061b1"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/Playtone> . ?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/DreamWorks_Television> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3488", "question": "What tv shows were born out of a collaboration of playtone and dreamworks?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Playtone", "label": "playtone"}, {"uri": "http://dbpedia.org/resource/DreamWorks_Television", "label": "dreamworks"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/company", "label": "collaboration"}, {"uri": "http://dbpedia.org/ontology/company", "label": "collaboration"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "768ceadf1cfc424f98c61ac9892e985a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Criteria_Studios> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>}", "SerialNumber": "3489", "question": "Who all have written songs that were then recorded in the Criteria Studios?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Criteria_Studios", "label": "Criteria Studios"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/recordedIn", "label": "recorded in"}, {"uri": "http://dbpedia.org/property/writer", "label": "written"}, {"uri": "http://dbpedia.org/ontology/MusicalWork", "label": "songs"}], "id": "ee96d704c0094e77b6002d5894aa2765"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Attorneys_in_Sri_Lanka> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "3490", "question": "What are all the religions that have been followed by the Sir Lankan attorneys?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Attorneys_in_Sri_Lanka", "label": "Sir Lankan"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/profession", "label": "attorneys"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}], "id": "9636268ee7834242905069b017dfdce7"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Katy_B> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . }", "SerialNumber": "3493", "question": "Through how many labels has Katy B released her singles?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Katy_B", "label": "Katy B"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/writer", "label": "singles"}, {"uri": "http://dbpedia.org/ontology/recordLabel", "label": "label"}], "id": "eebefa6c5abc4c53ac2067ca0bed237d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Oslo> . ?uri <http://dbpedia.org/property/owners> ?x  . }", "SerialNumber": "3494", "question": "Which newspaper is owned by people living in Oslo?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Oslo", "label": "Oslo"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/location", "label": "living"}, {"uri": "http://dbpedia.org/property/owners", "label": "is owned by"}], "id": "1511c21130fd42db8503ef152de463ad"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/magazine> <http://dbpedia.org/resource/Gangan_Comics> . ?x <http://dbpedia.org/property/author> ?uri  . }", "SerialNumber": "3495", "question": "How many people have written for Gangan Comics?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gangan_Comics", "label": "Gangan Comics"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/magazine", "label": "written"}, {"uri": "http://dbpedia.org/property/author", "label": "written"}], "id": "18c0cfe0eeb245e5be6ccbe05f916c12"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/William_H._Blanchard> <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Colorado> }", "SerialNumber": "3496", "question": "Is William H Blanchard buried in Colorado?", "entity mapping": [{"uri": "http://dbpedia.org/resource/William_H._Blanchard", "label": "blanchard william"}, {"uri": "http://dbpedia.org/resource/Colorado", "label": "Colorado"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeofburial"}], "id": "c279410514bf4a78804985526c37251c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Hall_(economist)> <http://dbpedia.org/ontology/institution> ?uri. <http://dbpedia.org/resource/Erica_Frank> <http://dbpedia.org/ontology/institution> ?uri . }", "SerialNumber": "3498", "question": "Name the common institute of Robert hall and Erica Frank ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Hall_(economist)", "label": "Robert hall"}, {"uri": "http://dbpedia.org/resource/Erica_Frank", "label": "Erica Frank"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/institution", "label": "institute"}, {"uri": "http://dbpedia.org/ontology/institution", "label": "institute"}], "id": "60deb84874954198b4c9b6cc5c85e747"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Angelina_Jolie> . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "SerialNumber": "3499", "question": "What award was won by the father of Angelina Jolie?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Angelina_Jolie", "label": "Angelina Jolie"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/children", "label": "father"}, {"uri": "http://dbpedia.org/ontology/award", "label": "award"}], "id": "6b9c942fcd1c48aba22c20b5693b249f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Sarvis> <http://dbpedia.org/ontology/nominee> ?uri. <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/nominee> ?uri . }", "SerialNumber": "3500", "question": "What were robert sarvis and JAck Ryan nominated for ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Sarvis", "label": "robert sarvis"}, {"uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)", "label": "JAck Ryan"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/nominee", "label": "nominated"}, {"uri": "http://dbpedia.org/ontology/nominee", "label": "nominated"}], "id": "42477bee3a644a5cbe1bbca800206582"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/GIMP> <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/GTK+> }", "SerialNumber": "3504", "question": "Is GIMP written in GTK+?", "entity mapping": [{"uri": "http://dbpedia.org/resource/GIMP", "label": "GIMP"}, {"uri": "http://dbpedia.org/resource/GTK+", "label": "GTK+"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/programmingLanguage", "label": "written"}], "id": "b60be328eefd4fc994895d7e2c04b7e6"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3509", "question": "How many shows are aired on Comedy Central?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Comedy_Central", "label": "Comedy Central"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/network", "label": "aired"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "e3fa455d918040598237f76a011b287b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Lebr\u0161nik> . ?x <http://dbpedia.org/ontology/riverMouth> ?uri  . }", "SerialNumber": "3511", "question": "Where does the river flow into which begins in Lebrsnik?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lebr\u0161nik", "label": "Lebrsnik"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourcePlace", "label": "begins"}, {"uri": "http://dbpedia.org/ontology/riverMouth", "label": "river"}], "id": "6fcdd77ecd8d48df85988971b5efa3ad"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Liu_Mingchuan> <http://dbpedia.org/property/battles> ?x . ?x <http://dbpedia.org/ontology/territory> ?uri  . }", "SerialNumber": "3512", "question": "Where did the conflict take place where Liu Mingchuan fought?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Liu_Mingchuan", "label": "Liu Mingchuan"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/battles", "label": "fought"}, {"uri": "http://dbpedia.org/ontology/territory", "label": "fought"}], "id": "51ba46fe1c4e481f899d93f44dfae6d9"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lekh_Castle> <http://dbpedia.org/ontology/location> ?uri. <http://dbpedia.org/resource/Samur\u2013Absheron_channel> <http://dbpedia.org/ontology/sourceCountry> ?uri} ", "SerialNumber": "3515", "question": "Name the loocation of Lekh Castle which is also the location of SamurAbsheron channel ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lekh_Castle", "label": "Lekh Castle"}, {"uri": "http://dbpedia.org/resource/Samur\u2013Absheron_channel", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/location", "label": "location"}, {"uri": "http://dbpedia.org/ontology/sourceCountry", "label": "channel"}], "id": "4f77489b44f4444fb99edd7e387255a6"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Chea_Sim> <http://dbpedia.org/property/primeminister> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "3521", "question": "Which religion is followed by the PM who was served by Chea Sim?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chea_Sim", "label": "Chea Sim"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/primeminister", "label": "served"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}], "id": "67978a98005d4f27897894daf8f8feeb"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/New_Braunfels,_Texas> . ?x <http://dbpedia.org/ontology/part> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}", "SerialNumber": "3524", "question": "Name the parts of the settlements which has New Braunfels as one of the parts ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/New_Braunfels,_Texas", "label": "braunfels new"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/part", "label": "part"}, {"uri": "http://dbpedia.org/ontology/part", "label": "part"}, {"uri": "http://dbpedia.org/ontology/Settlement", "label": "settlement"}], "id": "dbac6210102246678872e25416ced6dc"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014\u201315_Virginia_Tech_Hokies_men's_basketball_team> <http://dbpedia.org/property/headcoach> ?uri } ", "SerialNumber": "3526", "question": "Who is the headcoach of 2014-15 Virginia Tech Hokies men's basketball team ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2014\u201315_Virginia_Tech_Hokies_men's_basketball_team", "label": "basketball virginia hokies"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/headcoach", "label": "headcoach"}], "id": "8324de1b412b4b4a827a1a102c028585"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2011\u201312_FC_Spartak_Moscow_season> <http://dbpedia.org/ontology/homeStadium> ?uri } ", "SerialNumber": "3527", "question": "name the home stadium of FC Spartak Moscow season 2011-12", "entity mapping": [{"uri": "http://dbpedia.org/resource/2011\u201312_FC_Spartak_Moscow_season", "label": "spartak season moscow"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/homeStadium", "label": "home stadium"}], "id": "32830f79373c474abbf24909919f630e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Pablo_Records> . ?uri <http://dbpedia.org/ontology/spouse> ?x  . }", "SerialNumber": "3529", "question": "Give me a list of everyone who married the musicians signed up with Pablo Records?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pablo_Records", "label": "Pablo Records"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/label", "label": "signed"}, {"uri": "http://dbpedia.org/ontology/spouse", "label": "married"}], "id": "8d0baff96ff24540ad867eca41eeb113"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philip_Novak> <http://dbpedia.org/property/mainInterests> ?uri. <http://dbpedia.org/resource/Vesak> <http://dbpedia.org/ontology/type> ?uri} ", "SerialNumber": "3531", "question": "Which interest of Philip Novak is the relegion of Vesak ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Philip_Novak", "label": "Philip Novak"}, {"uri": "http://dbpedia.org/resource/Vesak", "label": "Vesak"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mainInterests", "label": "interest"}, {"uri": "http://dbpedia.org/ontology/type"}], "id": "91be6e04144043e78dc8164ea13e0aac"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/album> <http://dbpedia.org/resource/Elton_John_and_Tim_Rice's_Aida> . ?x <http://dbpedia.org/ontology/musicalArtist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}", "SerialNumber": "3535", "question": "Who made the singles on the famous album Aida?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Elton_John_and_Tim_Rice's_Aida", "label": "aida"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/album", "label": "album"}, {"uri": "http://dbpedia.org/ontology/musicalArtist", "label": "Aida"}, {"uri": "http://dbpedia.org/ontology/Single", "label": "single"}], "id": "e96e350f71e64985b52abd2ed25349a1"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Advocate_Nasiruddin> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_San_Juan> <http://dbpedia.org/ontology/sport> ?uri} ", "SerialNumber": "3537", "question": "What sport played in Polytechnic uni of San Juan has also made advocate nasiruddin famous?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Advocate_Nasiruddin", "label": "advocate nasiruddin"}, {"uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_San_Juan", "label": "polytechnic"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/knownFor", "label": "famous"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}], "id": "54adeba4e7da49f286068bdbf39d26d8"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/last> <http://dbpedia.org/resource/The_Avengers_(1998_film)> . ?x <http://dbpedia.org/property/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "SerialNumber": "3538", "question": "Where is the fictional character from, whose last appearance was in the Avengers, 1998?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Avengers_(1998_film)", "label": "the Avengers"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/last", "label": "last"}, {"uri": "http://dbpedia.org/property/nationality", "label": "appearance"}, {"uri": "http://dbpedia.org/ontology/FictionalCharacter", "label": "fictional character"}], "id": "7e43e5b0e86d44889fb270fb7665e52b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Daniel_Waters_(screenwriter)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "3543", "question": "What are the movies with Daniel Waters as screenwriter?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Daniel_Waters_(screenwriter)", "label": "Daniel Waters"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/screenplay", "label": "screenwriter"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "782f901d32c14d0bb32eb413e439eb02"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/training> <http://dbpedia.org/resource/National_Academy_Museum_and_School> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }", "SerialNumber": "3545", "question": "Where are the tombs of alumni of ational academy museum and school?", "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Academy_Museum_and_School", "label": "ational academy school museum"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/training", "label": "school"}, {"uri": "http://dbpedia.org/ontology/restingPlace", "label": "tomb"}], "id": "c1d9d01c89334b408616693a39652284"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Ferrero_SpA>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}", "SerialNumber": "3546", "question": "What beverage was launched by Ferrero SpA?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ferrero_SpA", "label": "Ferrero SpA"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/creator", "label": "launched"}, {"uri": "http://dbpedia.org/ontology/Food", "label": "launched"}], "id": "c462b0293c354f19b0a5dee22d388534"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller> . ?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3548", "question": "Name the TV show with Simon Fuller as artist and Fox as the channel ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Simon_Fuller", "label": "Simon Fuller"}, {"uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/creator", "label": "Fox"}, {"uri": "http://dbpedia.org/property/channel", "label": "channel"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "0f40e662368f43ac9aaa550638105eee"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Private_university> . ?x <http://dbpedia.org/property/athletics> ?uri  . }", "SerialNumber": "3550", "question": "How many athletic associations are there in all of the private universities?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Private_university", "label": "private universiti"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/type", "label": "es"}, {"uri": "http://dbpedia.org/property/athletics", "label": "athletic"}], "id": "c4dc2cdbdbc34b52a791cf49139f4a8f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "SerialNumber": "3554", "question": "Which set of researchers won the Gold Medal of the Royal Astronomical Society award?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society", "label": "Gold Medal of the Royal Astronomical Society"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/prizes", "label": "award"}, {"uri": "http://dbpedia.org/ontology/Scientist", "label": "award"}], "id": "598a034edc2b4ba7b7f9eacf0fad1fb2"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/broadcastArea> <http://dbpedia.org/resource/North_Carolina> . ?x <http://dbpedia.org/property/area> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "SerialNumber": "3555", "question": "In how many areas do the networks broadcast, which also broadcasts in North Carolina?", "entity mapping": [{"uri": "http://dbpedia.org/resource/North_Carolina", "label": "North Carolina"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/broadcastArea", "label": "broadcasts"}, {"uri": "http://dbpedia.org/property/area", "label": "area"}, {"uri": "http://dbpedia.org/ontology/Place", "label": "networks"}], "id": "26d0b20b5e3f4b3bb897f363daa6261f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gregg_Toland> . ?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Bernard_Herrmann>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "3556", "question": "Name the movie whose director of photography is Gregg Toland and Bernard Herrmann was the music composer?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gregg_Toland", "label": "Gregg Toland"}, {"uri": "http://dbpedia.org/resource/Bernard_Herrmann", "label": "Bernard Herrmann"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/cinematography", "label": "photography"}, {"uri": "http://dbpedia.org/ontology/musicComposer", "label": "music composer"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "8236caff2da947d6a6cf88099c134f23"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mishal_Raheja> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/New_India_Assurance> <http://dbpedia.org/property/location> ?uri . }", "SerialNumber": "3557", "question": "What city gave birth to Mishal Raheja and also houses New India Assurance?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mishal_Raheja", "label": "Mishal Raheja"}, {"uri": "http://dbpedia.org/resource/New_India_Assurance", "label": "New India Assurance"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/birthPlace", "label": "birth"}, {"uri": "http://dbpedia.org/property/location", "label": "houses"}], "id": "38e4c90868ed468b94cb549c579f9b57"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Laemmle_Theatres> <http://dbpedia.org/ontology/service> ?uri } ", "SerialNumber": "3558", "question": "What are the awrds won by Laemmle Theatres ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Laemmle_Theatres", "label": "Laemmle Theatres"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/service", "label": "won"}], "id": "f91b91df9ef746ababdcfebcf269d810"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/region> <http://dbpedia.org/resource/Kalutara_Electoral_District> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}", "SerialNumber": "3559", "question": "People of which religion have been the members of parliament, and are from the Kalutara Electoral district?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kalutara_Electoral_District", "label": "Kalutara Electoral district"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/region", "label": "members"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}, {"uri": "http://dbpedia.org/ontology/MemberOfParliament", "label": "parliament,"}], "id": "d857c581856d4696a3df4d5cff4b538c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Edwin_Catmull> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/RenderMan_(software)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "3560", "question": "Name a company with one of the key person as Edwin Catmull and produces RenderMan?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Edwin_Catmull", "label": "Edwin Catmull"}, {"uri": "http://dbpedia.org/resource/RenderMan_(software)", "label": "RenderMan"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/keyPerson", "label": "key person"}, {"uri": "http://dbpedia.org/property/products", "label": "produces"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "20b709002c9a451f81ac30e30697d54e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Randy_Jackson> . ?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3562", "question": "Name the Fox TV show judged by Rand Jackson ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Randy_Jackson", "label": "jackson rand"}, {"uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/judges", "label": "judged"}, {"uri": "http://dbpedia.org/property/channel", "label": "Jackson"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "89559a4c09794d45b60a14f288fc5403"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/Illinois_Fighting_Illini_men's_basketball> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "SerialNumber": "3564", "question": "From how many different cities have people gone to the Illinois Fighting Illini men's basketball?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Illinois_Fighting_Illini_men's_basketball", "label": "Illinois"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/college", "label": "basketball"}, {"uri": "http://dbpedia.org/property/placeOfBirth"}, {"uri": "http://dbpedia.org/ontology/Place", "label": "basketball"}], "id": "dead53b77d7b4ae3abf6f4198edb05e5"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/season> <http://dbpedia.org/resource/2014\u201315_Premier_League> . ?x <http://dbpedia.org/property/owner> ?uri  . }", "SerialNumber": "3569", "question": "How many owners owned the clubs participating in the Premier leagues of '14?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2014\u201315_Premier_League", "label": "' 14"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/season", "label": "leagues"}, {"uri": "http://dbpedia.org/property/owner", "label": "owners"}], "id": "046dd4f4ca7741639c230165ac321a53"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Apple_Tree> <http://dbpedia.org/ontology/basedOn> ?uri. <http://dbpedia.org/resource/A_Literary_Nightmare> <http://dbpedia.org/ontology/author> ?uri} ", "SerialNumber": "3572", "question": "Which writer of A literary Nightmare also extended the work of The Apple tree ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Apple_Tree", "label": "The Apple tree"}, {"uri": "http://dbpedia.org/resource/A_Literary_Nightmare", "label": "A literary Nightmare"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/basedOn", "label": "work"}, {"uri": "http://dbpedia.org/ontology/author", "label": "writer"}], "id": "e1bec9b2a77e46689d40931d5c9ecd63"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Point_Blank_Records> . ?uri <http://dbpedia.org/property/starring> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "3577", "question": "What are the movies whose cast members are signed up with Point Blank Records?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Point_Blank_Records", "label": "Point Blank Records"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/label", "label": "are"}, {"uri": "http://dbpedia.org/property/starring", "label": "signed"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "8771e72d14ca4063839d6058b825dcde"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Juelz_Santana> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "3579", "question": "How many people are in the band with Juelz Santana?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Juelz_Santana", "label": "Juelz Santana"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentMembers", "label": "people"}, {"uri": "http://dbpedia.org/ontology/bandMember", "label": "band"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "cd6d4ee1269f45e89677ac5f6cb06cf3"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Lost_Special> <http://dbpedia.org/property/series> ?uri } ", "SerialNumber": "3580", "question": "To which series does Lost special belong to ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Lost_Special", "label": "special lost"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/series", "label": "series"}], "id": "936e49d38fb344b8a243aafc31b75630"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/1999\u20132000_Watford_F.C._season> <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Elton_John> }", "SerialNumber": "3583", "question": "Was Elton John a chairman of a Watford FC Season?", "entity mapping": [{"uri": "http://dbpedia.org/resource/1999\u20132000_Watford_F.C._season", "label": "watford season"}, {"uri": "http://dbpedia.org/resource/Elton_John", "label": "Elton John"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/chairman", "label": "chairman"}], "id": "bb3db88e042a45719a508ffcb4e0cae4"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/instruments> <http://dbpedia.org/resource/Drum_kit> . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}", "SerialNumber": "3589", "question": "From which genres of music did those genres emerge where drums are important?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Drum_kit", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/instruments", "label": "important"}, {"uri": "http://dbpedia.org/ontology/stylisticOrigin", "label": "important"}, {"uri": "http://dbpedia.org/ontology/MusicGenre", "label": "genre"}], "id": "52e9a4a2f69e419aa527cd4b5658c783"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Laemmle_Theatres> <http://dbpedia.org/ontology/service> ?uri. <http://dbpedia.org/resource/Jos\u00e9_Rivera_(playwright)> <http://dbpedia.org/property/awards> ?uri} ", "SerialNumber": "3590", "question": "What is the service of the Laemmle Theatres and is also the award of the Jos Rivera (playwright)?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Laemmle_Theatres", "label": "Laemmle Theatres"}, {"uri": "http://dbpedia.org/resource/Jos\u00e9_Rivera_(playwright)", "label": "(playwright) rivera"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/service", "label": "service"}, {"uri": "http://dbpedia.org/property/awards", "label": "award"}], "id": "afda8a6127814c5f8b979c0859dbd3ae"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Ontario> . ?x <http://dbpedia.org/property/locations> ?uri  . }", "SerialNumber": "3593", "question": "In which other places are there companies which are in Ontario, too?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ontario", "label": "Ontario"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locationCity", "label": "companies"}, {"uri": "http://dbpedia.org/property/locations", "label": "companies"}], "id": "232e6c0e8d57443a9ef659cad042b6d9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Harry_and_the_Potters_(album)> <http://dbpedia.org/ontology/genre> ?x . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . }", "SerialNumber": "3595", "question": "Where did the music genre of Harry and the Potters originate?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Harry_and_the_Potters_(album)", "label": "Harry and the Potters"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/genre", "label": "music genre"}, {"uri": "http://dbpedia.org/ontology/stylisticOrigin", "label": "originate"}], "id": "0a1b829f8e814abdb18dac4b1b010740"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Laureano_Ibarra> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>}", "SerialNumber": "3599", "question": "Who used to skate with the pupils of Laureano Ibarra?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Laureano_Ibarra", "label": "Laureano Ibarra"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/coach", "label": "pupils"}, {"uri": "http://dbpedia.org/ontology/formerPartner", "label": "pupils"}, {"uri": "http://dbpedia.org/ontology/FigureSkater", "label": "skate"}], "id": "ea4ea30b9c3940988dd74494c7903da2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Sarathchandra_Rajakaruna> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}", "SerialNumber": "3600", "question": "What is the religion of the member of parliament who is a relative of Sarathchandra Rajakaruna?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sarathchandra_Rajakaruna", "label": "Sarathchandra Rajakaruna"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relation", "label": "relative"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}, {"uri": "http://dbpedia.org/ontology/MemberOfParliament", "label": "member of parliament"}], "id": "286e3b7df05248f9bcaf081f3a5bfae7"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Harry_Connick,_Jr.>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3602", "question": "What television show is magistrated by Harry Connick, Jr.?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Harry_Connick,_Jr.", "label": "Harry Connick, Jr."}], "predicate mapping": [{"uri": "http://dbpedia.org/property/judges", "label": "magistrated"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "television show"}], "id": "bd5737093bad479e8cc07b908e5189da"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Texas> . ?uri <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Jim_Harris_(entrepreneur)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "3603", "question": "Which Texas based company  was founded by Jim Harris ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Texas", "label": "Texas"}, {"uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)", "label": "Jim Harris"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locationCity", "label": "based"}, {"uri": "http://dbpedia.org/property/founder", "label": "was founded by"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "5145b69c134f441b869b6d2ae0252731"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Conowingo_Dam> . ?x <http://dbpedia.org/ontology/source> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "3605", "question": "From where does the river start, which flows into the Conowingo dam?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Conowingo_Dam", "label": "Conowingo dam"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/riverMouth", "label": "river"}, {"uri": "http://dbpedia.org/ontology/source", "label": "flows"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "f0acd22286c047eabc35b04de1c0c47b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Great_Missenden> . ?x <http://dbpedia.org/ontology/parent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "SerialNumber": "3606", "question": "List all the parents of writers coming from the Great Missenden ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Great_Missenden", "label": "Great Missenden"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/homeTown", "label": "coming"}, {"uri": "http://dbpedia.org/ontology/parent", "label": "parent"}, {"uri": "http://dbpedia.org/ontology/Writer", "label": "writers"}], "id": "df4a8bee85f04e6f8e60dd62c65e104b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brideun_School_for_Exceptional_Children> <http://dbpedia.org/property/state> ?uri. <http://dbpedia.org/resource/B._J._Crombeen> <http://dbpedia.org/ontology/birthPlace> ?uri . }", "SerialNumber": "3607", "question": "What state has a Brideun School for Exception Children and is the birthplace  of B J Crombeen?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Brideun_School_for_Exceptional_Children", "label": "exception children brideun school"}, {"uri": "http://dbpedia.org/resource/B._J._Crombeen", "label": "crombeen"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/state", "label": "state"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "birthplace"}], "id": "6c62c5bf4c4d43f69f7a5d6cdef2cfae"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Jenny_Macklin> . ?uri <http://dbpedia.org/property/predecessor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "3608", "question": "What is the total number of politicians whose predecessor's deputy is Jenny Macklin?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jenny_Macklin", "label": "Jenny Macklin"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/deputy", "label": "deputy"}, {"uri": "http://dbpedia.org/property/predecessor", "label": "predecessor"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "politicians"}], "id": "e28b8d50dec442e4afe8782558fdc00f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Erich_Bagge> . ?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "SerialNumber": "3612", "question": "What is the scientist whose PhD students are Erich Bagge and erban ieica?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Erich_Bagge", "label": "Erich Bagge"}, {"uri": "http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/doctoralStudents", "label": "students"}, {"uri": "http://dbpedia.org/property/doctoralStudents", "label": "students"}, {"uri": "http://dbpedia.org/ontology/Scientist", "label": "scientist"}], "id": "9f558fd14dc54992bc18d9ff843c24df"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Fender_Stratocaster> . ?uri <http://dbpedia.org/property/currentMembers> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "SerialNumber": "3613", "question": "How many bands have members currently playing the Fender Stratocaster?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fender_Stratocaster", "label": "Fender Stratocaster"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/notableInstruments", "label": "playing"}, {"uri": "http://dbpedia.org/property/currentMembers", "label": "members"}, {"uri": "http://dbpedia.org/ontology/Band", "label": "band"}], "id": "ea618d18100f4888910364d1044fe633"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Ethics> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "3616", "question": "What is the deathplace of people who have worked in Ethics?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ethics", "label": "Ethics"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mainInterests", "label": "worked"}, {"uri": "http://dbpedia.org/property/placeOfDeath"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "worked"}], "id": "2c1770e2d3984893a620a66a628bed5b"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Waxiang_people> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "3617", "question": "How many religions have the relatives of waxiangs followed?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Waxiang_people", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/related", "label": "relatives"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}], "id": "cdc182cb1086444ba6609878786447ff"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Blizzard_Entertainment> . ?x <http://dbpedia.org/ontology/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "SerialNumber": "3620", "question": "What kind of games does Blizzard games develop?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Blizzard_Entertainment", "label": "blizzard"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/developer", "label": "develop"}, {"uri": "http://dbpedia.org/ontology/genre", "label": "Blizzard"}, {"uri": "http://dbpedia.org/ontology/VideoGame", "label": "games"}], "id": "7e638a07671f4e0dbd9a400eac8f5de4"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Franklin_Delano_Roosevelt,_Jr.>  . }", "SerialNumber": "3621", "question": "Who is the parent of FD Roosevelt JR?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Franklin_Delano_Roosevelt,_Jr.", "label": "roosevelt"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/children", "label": "JR"}], "id": "7f7c3328eb5b44fd9119c85b39285fbf"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Menetries's_warbler> <http://dbpedia.org/ontology/binomialAuthority> ?uri. <http://dbpedia.org/resource/Jeyhun_Abiyev> <http://dbpedia.org/ontology/nationality> ?uri} ", "SerialNumber": "3622", "question": "Which expertise of the Menetries's warbler is the  nationality of the Jeyhun Abiyev ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Menetries's_warbler", "label": "Menetries's warbler"}, {"uri": "http://dbpedia.org/resource/Jeyhun_Abiyev", "label": "Jeyhun Abiyev"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/binomialAuthority", "label": "expertise"}, {"uri": "http://dbpedia.org/ontology/nationality", "label": "nationality"}], "id": "c46c233ae0c14807825928b38649d37e"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Vitis_vinifera> . ?x <http://dbpedia.org/ontology/wineRegion> ?uri  . }", "SerialNumber": "3623", "question": "In how many places can I find wine made of Vitis vinifera grapes?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Vitis_vinifera", "label": "Vitis vinifera"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/species", "label": "grapes"}, {"uri": "http://dbpedia.org/ontology/wineRegion", "label": "wine"}], "id": "7c24a58761f249839782415660523ba4"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/capital> <http://dbpedia.org/resource/Boston> . ?uri <http://dbpedia.org/ontology/location> ?x  . }", "SerialNumber": "3624", "question": "What have been made in the state whose capital is Boston?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Boston", "label": "Boston"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/capital", "label": "capital"}, {"uri": "http://dbpedia.org/ontology/location", "label": "state"}], "id": "e19a8a1f620d417887fabd403a34298e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Cleopatra_V_of_Egypt> . ?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ptolemy_XII_Auletes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "SerialNumber": "3625", "question": "Name the royalty whose spouse was Cleopatra V of Egypt and one of his parent was Ptolemy XII Auletes?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cleopatra_V_of_Egypt", "label": "Cleopatra V of Egypt"}, {"uri": "http://dbpedia.org/resource/Ptolemy_XII_Auletes", "label": "Ptolemy XII Auletes"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mother", "label": "spouse"}, {"uri": "http://dbpedia.org/ontology/parent", "label": "parent"}, {"uri": "http://dbpedia.org/ontology/Royalty", "label": "royalty"}], "id": "ae7bd0ded6804ceead902c06ec9b71e1"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Augustus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "3628", "question": "Name the officeholder who hasa child named Augustus and has an associate named Marcus Bibulus ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus", "label": "bibulus marcus"}, {"uri": "http://dbpedia.org/resource/Augustus", "label": "Augustus"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/associate", "label": "associate"}, {"uri": "http://dbpedia.org/property/children", "label": "child"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "officeholder"}], "id": "6aae7a52e81c4a26b80f5c17943b7857"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Bjarne_Stroustrup> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "SerialNumber": "3632", "question": "List down the schools whose mascot is an animal from the order of Even toed Ungulates?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bjarne_Stroustrup", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/designer", "label": "toed"}, {"uri": "http://dbpedia.org/property/programmingLanguage", "label": "toed"}, {"uri": "http://dbpedia.org/ontology/School", "label": "school"}], "id": "0954b94157bc4c35a1bcb0ec0107cb74"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> <http://dbpedia.org/resource/Walt_Disney> }", "SerialNumber": "3634", "question": "Was the skeleton dance animated by Walt Disney?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Skeleton_Dance", "label": "the skeleton dance"}, {"uri": "http://dbpedia.org/resource/Walt_Disney", "label": "Walt Disney"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/animator", "label": "animated"}], "id": "a407d3e2f82d4a51b9e93485af1f0f4f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Lee_Hyun-jae> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}", "SerialNumber": "3638", "question": "The president who was in office when Lee Hyun Jae was the PM followed which religion?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lee_Hyun-jae", "label": "Lee Hyun Jae"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/primeminister", "label": "PM"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}, {"uri": "http://dbpedia.org/ontology/President", "label": "president"}], "id": "a4c071295df54e628add12c26e1551d7"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Unix-like> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }", "SerialNumber": "3639", "question": "How many developers make softwares for Unix like operating systems?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Unix-like", "label": "unix like"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/operatingSystem", "label": "operating system"}, {"uri": "http://dbpedia.org/ontology/developer", "label": "developer"}], "id": "24bea3e02aac4576a8340dc9d4e933dd"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Royal_Society> . ?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Karl_Ewald_Hasse>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "SerialNumber": "3642", "question": "Name the scientist who become the part of Royal Society and had academic advisor as Karl Ewald Hasse?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_Society", "label": "Royal Society"}, {"uri": "http://dbpedia.org/resource/Karl_Ewald_Hasse", "label": "Karl Ewald Hasse"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/prizes", "label": "part"}, {"uri": "http://dbpedia.org/ontology/academicAdvisor", "label": "academic advisor"}, {"uri": "http://dbpedia.org/ontology/Scientist", "label": "scientist"}], "id": "20ece59a1aa9487bbe525dcba5247d38"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Kampuchean_United_Front_for_National_Salvation> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "3644", "question": "What is the religion of the ones in the Kampuchean Union of Salvation?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kampuchean_United_Front_for_National_Salvation", "label": "Kampuchean Union of Salvation"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/militaryBranch"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}], "id": "b71a96db56e8414aba5648ec5935ecf9"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Next_Thing> <http://dbpedia.org/ontology/recordLabel> ?uri. <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/ontology/parentOrganisation> ?uri} ", "SerialNumber": "3646", "question": "Which parent organization of GetTV is also the label of next thing ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Next_Thing", "label": "next thing"}, {"uri": "http://dbpedia.org/resource/GetTV", "label": "GetTV"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/recordLabel", "label": "label"}, {"uri": "http://dbpedia.org/ontology/parentOrganisation"}], "id": "b17be3d3611b49f3aca5fa4337a2315b"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Mediterranean_Basketball_Association> <http://dbpedia.org/ontology/country> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "SerialNumber": "3648", "question": "How many states are in the Mediterranean Basketball Association?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mediterranean_Basketball_Association", "label": "Mediterranean Basketball Association"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/country", "label": "state"}, {"uri": "http://dbpedia.org/ontology/Place"}], "id": "90be0811add84e5aa9984db40fcee9db"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/House_of_Representatives_of_the_Philippines> . ?x <http://dbpedia.org/ontology/ethnicity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "3649", "question": "What is the ethnicity of the people working for the Philippines house of representatives?", "entity mapping": [{"uri": "http://dbpedia.org/resource/House_of_Representatives_of_the_Philippines", "label": "Philippines"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/occupation", "label": "work"}, {"uri": "http://dbpedia.org/ontology/ethnicity", "label": "ethnicity"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "representatives"}], "id": "d6802f1090fc42088479f3a1897fa6f0"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/United_States_Department_of_the_Interior> . ?uri <http://dbpedia.org/property/restingplace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "3650", "question": "Name some people who are buried in a place governed by the US Department of the Interior?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Department_of_the_Interior", "label": "US Department of the Interior"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/governingBody", "label": "governed"}, {"uri": "http://dbpedia.org/property/restingplace", "label": "place"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "buried"}], "id": "b18bcd6d7ea84ac59cb76d3a3683c33e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Josh_Bell_(gridiron_football)> <http://dbpedia.org/ontology/debutTeam> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . }", "SerialNumber": "3653", "question": "Where is the football team located in which Josh Bell did his debut?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Josh_Bell_(gridiron_football)", "label": "Josh Bell"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/debutTeam", "label": "debut team"}, {"uri": "http://dbpedia.org/ontology/locationCity", "label": "debut"}], "id": "aef9c51a69964e5596910348107d8ba5"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Haqqi_al-Azm> <http://dbpedia.org/property/president> ?x . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }", "SerialNumber": "3656", "question": "The president served by Haqqi al-Azm died where?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Haqqi_al-Azm", "label": "Haqqi al-Azm"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/president", "label": "president"}, {"uri": "http://dbpedia.org/property/placeOfDeath"}], "id": "13eb5beca6db42d2a2351fbc774d97f7"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Sweden> . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "3657", "question": "What are some awards given to people who were born in sweden?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sweden", "label": "sweden"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/birthPlace", "label": "born in"}, {"uri": "http://dbpedia.org/property/awards", "label": "awards"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "e87064d2456145b1b5a0bfc1703d439c"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nokia_Lumia_830> <http://dbpedia.org/property/os> <http://dbpedia.org/resource/Windows_Phone_8.1> }", "SerialNumber": "3661", "question": "Is WP 8.1 the OS on Lumia 830?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Nokia_Lumia_830", "label": "lumia 830"}, {"uri": "http://dbpedia.org/resource/Windows_Phone_8.1", "label": "8.1"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/os", "label": "OS"}], "id": "cdc804731f0b4931b6ee149e92fc807f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/Front-engine,_rear-wheel-drive_layout> . ?x <http://dbpedia.org/ontology/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "SerialNumber": "3663", "question": "Which companies make cars with a front engine, rear wheel drive layout?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Front-engine,_rear-wheel-drive_layout", "label": "engine, layout wheel front drive"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/automobilePlatform", "label": "layout"}, {"uri": "http://dbpedia.org/ontology/parentCompany", "label": "companies"}, {"uri": "http://dbpedia.org/ontology/Automobile", "label": "layout"}], "id": "4930ac422c3a46878641b26e4911c9fd"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Polet_Airlines> <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Moscow> }", "SerialNumber": "3665", "question": "Do the polet airlines fly to moscow?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Polet_Airlines", "label": "polet airlines"}, {"uri": "http://dbpedia.org/resource/Moscow", "label": "moscow"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/targetAirport", "label": "fly"}], "id": "3f46fda15bf14f0fab5297341e258dce"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jan_Paulsen> <http://dbpedia.org/ontology/almaMater> ?x . ?x <http://dbpedia.org/property/state> ?uri  . }", "SerialNumber": "3667", "question": "In which state is the alma matter of Jan Paulsen located ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jan_Paulsen", "label": "Jan Paulsen"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/almaMater", "label": "located"}, {"uri": "http://dbpedia.org/property/state", "label": "state"}], "id": "7043c42bf9fc41418bf7fce82a3ed8f2"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Pacific_Ocean> . ?uri <http://dbpedia.org/property/archipelago> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}", "SerialNumber": "3668", "question": "Name some islands in a pacific archipelago?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pacific_Ocean", "label": "pacific"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/location", "label": "pacific"}, {"uri": "http://dbpedia.org/property/archipelago", "label": "archipelago"}, {"uri": "http://dbpedia.org/ontology/Island", "label": "island"}], "id": "498b80ad7a3e404aa8127f73d757f44d"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/2012_Campeonato_Brasileiro_S\u00e9rie_A> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}", "SerialNumber": "3676", "question": "List the names of the soccer club seasons whose division is 2012 Campeonato Brasileiro Srie A.", "entity mapping": [{"uri": "http://dbpedia.org/resource/2012_Campeonato_Brasileiro_S\u00e9rie_A", "label": "campeonato brasileiro"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/league", "label": "division"}, {"uri": "http://dbpedia.org/property/name", "label": "name"}, {"uri": "http://dbpedia.org/ontology/SoccerClubSeason", "label": "soccer club season"}], "id": "4ae8d48e900b4769ada16d476c81dd95"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Harry_and_the_Potters_(album)> <http://dbpedia.org/ontology/genre> ?x . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . }", "SerialNumber": "3680", "question": "Where did the genres originate, which were in the Harry and the Potters album?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Harry_and_the_Potters_(album)", "label": "Harry and the Potters"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/genre", "label": "genre"}, {"uri": "http://dbpedia.org/ontology/stylisticOrigin", "label": "album"}], "id": "3f3d04c8667041c0a30da802ecd4cd40"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/John_Douglas_(conductor)> . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3685", "question": "Who was the narrator of the show who's music is composed by John Douglas?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Douglas_(conductor)", "label": "John Douglas"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/composer", "label": "composed by"}, {"uri": "http://dbpedia.org/property/narrated", "label": "music"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show is"}], "id": "47a9d2054379462e850aecdccb4a114c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Egyptian_Open> <http://dbpedia.org/ontology/champion> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }", "SerialNumber": "3686", "question": "Where was the current champion of Egyptian Open born ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Egyptian_Open", "label": "Egyptian Open"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/champion", "label": "champion"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "born"}], "id": "53d26ee8082c40af9e43661837f30042"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Callisto_(moon)> <http://dbpedia.org/property/discoverer> <http://dbpedia.org/resource/Galileo_Galilei> }", "SerialNumber": "3687", "question": "Was Castillo discovered by Galileo?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Callisto_(moon)", "label": ""}, {"uri": "http://dbpedia.org/resource/Galileo_Galilei", "label": "Galileo"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/discoverer", "label": "discovered by"}], "id": "390bec142f5a4354a4a0d47a64474646"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Plymouth_University> . ?x <http://dbpedia.org/property/chancellor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "SerialNumber": "3689", "question": "Who are the chancellors of universities which is affiliated with Plymouth University?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Plymouth_University", "label": "Plymouth University"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/affiliations", "label": "affiliated"}, {"uri": "http://dbpedia.org/property/chancellor", "label": "chancellor"}, {"uri": "http://dbpedia.org/ontology/University", "label": "University"}], "id": "7877e775ed9e4c52a16d8b95104db714"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Udit_Raj> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)> <http://dbpedia.org/property/religiousAffiliation> ?uri} ", "SerialNumber": "3690", "question": "What common relegion affiliation exists for udit Raj and Wickramabahu Central College ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Udit_Raj", "label": "udit Raj"}, {"uri": "http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)", "label": "Wickramabahu Central College"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/religion", "label": "exists"}, {"uri": "http://dbpedia.org/property/religiousAffiliation", "label": "affiliation"}], "id": "99518f87aadb4ffdbc84a7b46b300383"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/PlayStation_4> . ?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/PlayStation_2>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "SerialNumber": "3691", "question": "Name the console whose successor is PlayStation 4 and predecessor is PlayStation 2?", "entity mapping": [{"uri": "http://dbpedia.org/resource/PlayStation_4", "label": "PlayStation 4"}, {"uri": "http://dbpedia.org/resource/PlayStation_2", "label": "PlayStation 2"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/successor", "label": "successor"}, {"uri": "http://dbpedia.org/property/predecessor", "label": "predecessor"}, {"uri": "http://dbpedia.org/ontology/InformationAppliance", "label": "console"}], "id": "ac50f52a09154c0483346c70133cd0e4"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/ontology/athletics> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig> <http://dbpedia.org/ontology/sport> ?uri} ", "SerialNumber": "3692", "question": "What are the common sports played by jamiatu Muslim mindanao and Polytechnic University of Philippines Taguig ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao", "label": "jamiatu Muslim mindanao"}, {"uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig", "label": "polytechnic philippines university taguig"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/athletics", "label": "Taguig"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}], "id": "a8c90d3cb9594f2f9b76123cc4272062"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Nicomedia> . ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Aureus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "SerialNumber": "3693", "question": "Among the countries using Aureus as currency which had Nicomedia as an important place ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Nicomedia", "label": "Nicomedia"}, {"uri": "http://dbpedia.org/resource/Aureus", "label": "Aureus"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/capital", "label": "place"}, {"uri": "http://dbpedia.org/ontology/currency", "label": "currency"}, {"uri": "http://dbpedia.org/ontology/Country", "label": "countries"}], "id": "7521f2b548c742bc847175d5bb599556"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/United_Kingdom> . ?uri <http://dbpedia.org/property/editing> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "3694", "question": "British people have edited which movies?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_Kingdom", "label": "British"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/birthPlace", "label": "people"}, {"uri": "http://dbpedia.org/property/editing", "label": "edited"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "d19c3af9ab8340149565596d32439a0c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Rudolf_Kirchschl\u00e4ger> <http://dbpedia.org/property/chancellor> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }", "SerialNumber": "3695", "question": "Where did chancellor served by Rudolf Kirchschlger die?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Rudolf_Kirchschl\u00e4ger", "label": "Rudolf Kirchschlger"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/chancellor", "label": "chancellor"}, {"uri": "http://dbpedia.org/ontology/deathPlace", "label": "die"}], "id": "fa1d8082a8614af189cc4ca0b03b8375"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/honours> <http://dbpedia.org/resource/Grand_National> . ?x <http://dbpedia.org/ontology/colour> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RaceHorse>}", "SerialNumber": "3704", "question": "Which colored race horses have won the Grand National?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Grand_National", "label": "Grand National"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/honours"}, {"uri": "http://dbpedia.org/ontology/colour"}, {"uri": "http://dbpedia.org/ontology/RaceHorse", "label": "race horse"}], "id": "ba5a1a29c5a042d39b6d9df1fd0da2b2"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dolley_Madison> <http://dbpedia.org/ontology/spouse> ?uri. <http://dbpedia.org/resource/William_Eustis> <http://dbpedia.org/property/president> ?uri} ", "SerialNumber": "3709", "question": "Which president of William Eustus also married to Dolley Madison ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dolley_Madison", "label": "Dolley Madison"}, {"uri": "http://dbpedia.org/resource/William_Eustis", "label": "william"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/spouse", "label": "married to"}, {"uri": "http://dbpedia.org/property/president", "label": "president"}], "id": "67893530f30a49dd87e36373d1642717"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Momoko_K\u014dchi> . ?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Akira_Ifukube>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "3712", "question": "Name a movie with actor as Momoko Kchi and music by Akira Ifukube?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Momoko_K\u014dchi", "label": "momoko"}, {"uri": "http://dbpedia.org/resource/Akira_Ifukube", "label": "Akira Ifukube"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/starring", "label": "actor"}, {"uri": "http://dbpedia.org/property/music", "label": "music"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "253d1d8095684756951584ec0a0a37f1"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Normal_Park_branch_(CTA)> <http://dbpedia.org/property/operator> ?x . ?x <http://dbpedia.org/ontology/operatedBy> ?uri  . }", "SerialNumber": "3715", "question": "Who manages the operator of Norman Park Branch, CTA?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Normal_Park_branch_(CTA)", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/operator", "label": "operator"}, {"uri": "http://dbpedia.org/ontology/operatedBy", "label": ""}], "id": "182f0bed84d84af2a38a3d2bf40a2c8f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/HBO> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3716", "question": "Name the HBO TV show written by Erik jendresen  ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/HBO", "label": "HBO"}, {"uri": "http://dbpedia.org/resource/Erik_Jendresen", "label": "Erik jendresen"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/company", "label": "TV"}, {"uri": "http://dbpedia.org/property/writer", "label": "written by"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "1e202ff4ce8c40f18dcb98e39e8c43ad"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo> <http://dbpedia.org/property/author> ?uri. <http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)> <http://dbpedia.org/property/narrated> ?uri} ", "SerialNumber": "3718", "question": "Whay common comic is written by Karakuri Dji Ultimo and narrated by The Incredible Hulk ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo", "label": "karakuri ultimo"}, {"uri": "http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)", "label": "The Incredible Hulk"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/author", "label": "written by"}, {"uri": "http://dbpedia.org/property/narrated", "label": "narrated"}], "id": "b08465bc7133422a9c0a2a1e3ee38e99"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "3719", "question": "What are the movies whose director of photography is Jordan Cronenweth?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jordan_Cronenweth", "label": "Jordan Cronenweth"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/cinematography", "label": "photography"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "eb7991936f3c4df097078005049ad9ba"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Continental_Army> . ?x <http://dbpedia.org/property/president> ?uri  . }", "SerialNumber": "3720", "question": "Under which presidents have politicians from the Continental army served?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Continental_Army", "label": "Continental army"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/branch", "label": "served"}, {"uri": "http://dbpedia.org/property/president", "label": "president"}], "id": "6d387f343a844da58776ae70a4a4f621"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/format> <http://dbpedia.org/resource/Religion> . ?x <http://dbpedia.org/property/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}", "SerialNumber": "3721", "question": "Which city has radio stations which are Religious ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Religion", "label": "Religiou"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/format"}, {"uri": "http://dbpedia.org/property/city", "label": "city"}, {"uri": "http://dbpedia.org/ontology/RadioStation", "label": "radio station"}], "id": "309643fac5534e289bcc36c1b3e52d85"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/stadium> <http://dbpedia.org/resource/Fort_Lauderdale,_Florida> . ?x <http://dbpedia.org/ontology/ground> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}", "SerialNumber": "3723", "question": "Those seasons which have been played in Fort Lauderdale Florida now host their games where?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fort_Lauderdale,_Florida", "label": "lauderdale florida fort"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/stadium", "label": "games"}, {"uri": "http://dbpedia.org/ontology/ground", "label": "games"}, {"uri": "http://dbpedia.org/ontology/SoccerClubSeason", "label": "seasons"}], "id": "8f8b8d845595448aad675853ecea23b5"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/2658_Gingerich> <http://dbpedia.org/ontology/discoverer> <http://dbpedia.org/resource/Harvard_College> }", "SerialNumber": "3727", "question": "Was 2658 Gingerich invented in Harvard?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2658_Gingerich", "label": "2658 Gingerich"}, {"uri": "http://dbpedia.org/resource/Harvard_College", "label": "harvard"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/discoverer", "label": "invented"}], "id": "2c39c59a5b3d4c15844b34930828326b"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Robert_De_Niro> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "3728", "question": "How many other people are in a band with Robert de Niro?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_De_Niro", "label": "Robert de Niro"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentMembers", "label": "people"}, {"uri": "http://dbpedia.org/ontology/bandMember", "label": "band"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "778761d04bb14ee8b90d1cbf954322e7"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Boston_Red_Sox> . ?x <http://dbpedia.org/property/architect> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "SerialNumber": "3729", "question": "Who created the stadiums who have been rented by the Boston Red Sox?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Boston_Red_Sox", "label": "Boston Red Sox"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/tenant", "label": "rented"}, {"uri": "http://dbpedia.org/property/architect", "label": "rented"}, {"uri": "http://dbpedia.org/ontology/Stadium", "label": "stadium"}], "id": "44c72a38f8a2482989ab8b73f5f9977c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/La_Liga> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}", "SerialNumber": "3734", "question": "Which clubs play in the La Liga?", "entity mapping": [{"uri": "http://dbpedia.org/resource/La_Liga", "label": "La Liga"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/league", "label": "play"}, {"uri": "http://dbpedia.org/property/name", "label": "play"}, {"uri": "http://dbpedia.org/ontology/SoccerClub", "label": "clubs"}], "id": "a28559e7c5e648058bc88bb93a29336b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Buckinghamshire> . ?x <http://dbpedia.org/ontology/parent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "SerialNumber": "3735", "question": "Who are the parents of writers born and bred in Buckinghamshire?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Buckinghamshire", "label": "Buckinghamshire"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/homeTown", "label": "bred"}, {"uri": "http://dbpedia.org/ontology/parent", "label": "parent"}, {"uri": "http://dbpedia.org/ontology/Writer", "label": "writers"}], "id": "ea111f49ee134bee8e906c9bab84430f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Timoteo_Jeffries> . ?x <http://dbpedia.org/property/format> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioProgram>}", "SerialNumber": "3736", "question": "What is the radio show created by Timoteo Jeffries, about?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Timoteo_Jeffries", "label": "Timoteo Jeffries"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/creator", "label": "created"}, {"uri": "http://dbpedia.org/property/format", "label": "created"}, {"uri": "http://dbpedia.org/ontology/RadioProgram", "label": "radio"}], "id": "a656fb53970e4e36b7c254c35ee31be6"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/If_We_Were_a_Movie> . ?uri <http://dbpedia.org/ontology/openingTheme> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3741", "question": "Which shows' opening themes was used to make If We Were a Movie?", "entity mapping": [{"uri": "http://dbpedia.org/resource/If_We_Were_a_Movie", "label": "If We Were a Movie"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/subsequentWork", "label": "make"}, {"uri": "http://dbpedia.org/ontology/openingTheme", "label": "opening theme"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows'"}], "id": "db7bce6fd45745b7833bc9aa702dc2f7"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/History_of_Penny_Arcade_Expo> <http://dbpedia.org/property/venue> ?x . ?x <http://dbpedia.org/property/address> ?uri  . }", "SerialNumber": "3742", "question": "Where is the venue of the History of Penny Arcade Expo located?", "entity mapping": [{"uri": "http://dbpedia.org/resource/History_of_Penny_Arcade_Expo", "label": "History of Penny Arcade Expo"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/venue", "label": "venue"}, {"uri": "http://dbpedia.org/property/address", "label": "located"}], "id": "8f2e16d375b7408da4f7f573d9c76b79"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/European_Broadcasting_Union> . ?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Te_Deum_(Charpentier)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3743", "question": "Which European Broadcasting Union's TV show has opening theme as Te Deum ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/European_Broadcasting_Union", "label": "European Broadcasting Union"}, {"uri": "http://dbpedia.org/resource/Te_Deum_(Charpentier)", "label": "Te Deum"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/company", "label": "TV"}, {"uri": "http://dbpedia.org/ontology/openingTheme", "label": "opening theme"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "fa67ea0509064e84a85b05bc03108e02"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Karachi> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "SerialNumber": "3744", "question": "Which companies makes cars assembled in Karachi, Pakistan?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Karachi", "label": "Karachi"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/assembly", "label": "Pakistan"}, {"uri": "http://dbpedia.org/property/parentCompany", "label": "companies"}, {"uri": "http://dbpedia.org/ontology/Automobile", "label": "Pakistan"}], "id": "4790db09b5954a87831e282bd16265df"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Josef_B\u00fchler> <http://dbpedia.org/ontology/occupation> ?uri } ", "SerialNumber": "3747", "question": "Josef Bhler belongs to which political party?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Josef_B\u00fchler", "label": "Josef Bhler"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/occupation", "label": "party"}], "id": "e91a205c78b6436ca52191e1516ec883"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/Open_Society_Foundations>  . }", "SerialNumber": "3748", "question": "Name the famous employee of open society foundations ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Open_Society_Foundations", "label": "open society foundations"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/employer", "label": "employee"}], "id": "dc5442f9638d4d3a877e6926914c08db"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/hairColor> <http://dbpedia.org/resource/Red_hair> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>}", "SerialNumber": "3751", "question": "What are the death place of the models whose hair color was Red?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Red_hair", "label": "hair red"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/hairColor", "label": "hair color"}, {"uri": "http://dbpedia.org/property/deathPlace", "label": "death place"}, {"uri": "http://dbpedia.org/ontology/Model", "label": "model"}], "id": "ca0e18eaf79141309cd329cbfcbe0c99"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/property/parent> ?uri. <http://dbpedia.org/resource/Hypnotize_Minds> <http://dbpedia.org/property/parent> ?uri . }", "SerialNumber": "3756", "question": "Which company owns GetTV and Hypnotize minds ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/GetTV", "label": "GetTV"}, {"uri": "http://dbpedia.org/resource/Hypnotize_Minds", "label": "Hypnotize minds"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/parent", "label": "owns"}, {"uri": "http://dbpedia.org/property/parent", "label": "owns"}], "id": "3d239bb3a5c14dd59a0f32a7623929e8"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Doubleday_(publisher)> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . }", "SerialNumber": "3757", "question": "How many subjects are covered in the publications of Doubleday?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Doubleday_(publisher)", "label": "Doubleday"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/publisher", "label": "publications"}, {"uri": "http://dbpedia.org/ontology/nonFictionSubject", "label": "subjects"}], "id": "557e9d5fa7a8436e80e24ed1e0e80825"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Miguel_de_Cervantes> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}", "SerialNumber": "3758", "question": "Miguel de Cervantes wrote the musical extended from which book?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Miguel_de_Cervantes", "label": "Miguel de Cervantes"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/author", "label": "book"}, {"uri": "http://dbpedia.org/ontology/basedOn", "label": "extended from"}, {"uri": "http://dbpedia.org/ontology/Musical", "label": "musical"}], "id": "39eeccfe288b4fc78a5dcd44386e7255"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Boeing_CH-47_Chinook>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "3765", "question": "What is the company whose one of the key person is Dennis Muilenburg and produces Boeing CH-47 Chinook ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dennis_Muilenburg", "label": "Dennis Muilenburg"}, {"uri": "http://dbpedia.org/resource/Boeing_CH-47_Chinook", "label": "Boeing CH-47 Chinook"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/keyPeople", "label": "key"}, {"uri": "http://dbpedia.org/ontology/product", "label": "produces"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "6ab4e15a8b7248ebb8cb2c41358e0f2a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/instruments> <http://dbpedia.org/resource/Bass_guitar> . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}", "SerialNumber": "3767", "question": "What is the stylistic origin of the music genres where the Bass guitar is important?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bass_guitar", "label": "Bass guitar"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/instruments", "label": "important"}, {"uri": "http://dbpedia.org/ontology/stylisticOrigin", "label": "stylistic origin"}, {"uri": "http://dbpedia.org/ontology/MusicGenre", "label": "music genre"}], "id": "d107d84c4eaf43c4bb51b0825ae31b0c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Marco_Aurelio_Robles> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "3770", "question": "Where did the office holder  who is predecessor to Marco Aurelio Robles died ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Marco_Aurelio_Robles", "label": "Marco Aurelio Robles"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/predecessor", "label": "predecessor"}, {"uri": "http://dbpedia.org/property/placeOfDeath"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "office holder"}], "id": "bfbf00221cf04ca7b6a2b27c0f0b66d7"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parentCompany> <http://dbpedia.org/resource/Time_Warner> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cartoon>}", "SerialNumber": "3775", "question": "What are some cartoons distributed by a subsidiary of Time Warner?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Time_Warner", "label": "Time Warner"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/parentCompany", "label": "subsidiary"}, {"uri": "http://dbpedia.org/property/distributor", "label": "distributed by"}, {"uri": "http://dbpedia.org/ontology/Cartoon", "label": "cartoon"}], "id": "841b87f5ad0d4f0397e61ab5f19dfd26"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Johannes_Gerhardus_Strijdom> <http://dbpedia.org/property/restingplace> ?uri } ", "SerialNumber": "3781", "question": "Where is the tombstone of Johannes Gerhardus Strijdom?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Johannes_Gerhardus_Strijdom", "label": "Johannes Gerhardus Strijdom"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/restingplace"}], "id": "7c5f3af257f34d6fa8ea63202db67648"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Hillary_Clinton> . ?x <http://dbpedia.org/property/keyPeople> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Non-ProfitOrganisation>}", "SerialNumber": "3787", "question": "List all important people of the non profit organization which has Hilary Clinton as a key person ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Hillary_Clinton", "label": "Hilary Clinton"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/keyPeople", "label": "people key"}, {"uri": "http://dbpedia.org/property/keyPeople", "label": "people key"}, {"uri": "http://dbpedia.org/ontology/Non-ProfitOrganisation"}], "id": "8bcda51415224909b0c127abbc00da92"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allama_Matthews> <http://dbpedia.org/ontology/college> ?uri } ", "SerialNumber": "3788", "question": "Where did Allama Matthews study?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Allama_Matthews", "label": "Allama Matthews"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/college", "label": "study"}], "id": "ab3b3833bcba4004a128604125a5d633"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Bangalore> . ?x <http://dbpedia.org/ontology/party> ?uri  . }", "SerialNumber": "3789", "question": "Politicians born in Bangalore are now in which parties?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bangalore", "label": "Bangalore"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/homeTown", "label": "born"}, {"uri": "http://dbpedia.org/ontology/party", "label": "parties"}], "id": "54b17242bd0b451ea66624da5aee1f7e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Michael_Mayr> <http://dbpedia.org/ontology/deputy> ?x . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Chancellor>}", "SerialNumber": "3790", "question": "What is the nationality of the chancellor who was served by Michael Mayr?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Mayr", "label": "Michael Mayr"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/deputy", "label": "served"}, {"uri": "http://dbpedia.org/ontology/nationality", "label": "nationality"}, {"uri": "http://dbpedia.org/ontology/Chancellor", "label": "chancellor"}], "id": "002025caf73746c88b16cc4f2bf21525"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Quebec> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>}", "SerialNumber": "3792", "question": "Quebec born ice hockey players have stopped playing for which teams?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Quebec", "label": "Quebec"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/birthPlace", "label": "playing"}, {"uri": "http://dbpedia.org/ontology/formerTeam", "label": "teams"}, {"uri": "http://dbpedia.org/ontology/IceHockeyPlayer", "label": "ice hockey player"}], "id": "0cc6db94bbc44a198411909a855a2d2a"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/instruments> <http://dbpedia.org/resource/Bass_guitar> . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}", "SerialNumber": "3793", "question": "How many genres gave birth to other genres which emphasize Bass Guitars?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bass_guitar", "label": "Bass Guitar"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/instruments", "label": "emphasize"}, {"uri": "http://dbpedia.org/ontology/stylisticOrigin", "label": "emphasize"}, {"uri": "http://dbpedia.org/ontology/MusicGenre", "label": "genre"}], "id": "17ff67b500a04c5193fed5a413a9a9ec"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/PlayStation_2> . ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Asus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "SerialNumber": "3794", "question": "Which info. appliance is manufactured by Asus and is the predecessor of PS 2?", "entity mapping": [{"uri": "http://dbpedia.org/resource/PlayStation_2", "label": ""}, {"uri": "http://dbpedia.org/resource/Asus", "label": "Asus"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/predecessor", "label": "predecessor"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "manufactured by"}, {"uri": "http://dbpedia.org/ontology/InformationAppliance", "label": "appliance"}], "id": "e5147d9405b647ccba833c959572483d"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/Detroit_Red_Wings> . ?x <http://dbpedia.org/ontology/residence> ?uri  . }", "SerialNumber": "3795", "question": "Where do employees of Deroit Red Wings live?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Detroit_Red_Wings", "label": "Deroit Red Wings"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/employer", "label": "live"}, {"uri": "http://dbpedia.org/ontology/residence", "label": "live"}], "id": "d1d052fa4410465f98e14f968dcd449c"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Ganges> <http://dbpedia.org/property/city> ?x . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . }", "SerialNumber": "3798", "question": "How many politicians are there from the city of Ganges?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ganges", "label": "Ganges"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/city", "label": "city"}, {"uri": "http://dbpedia.org/ontology/leaderName", "label": "politicians"}], "id": "3ea9b079d22b43dcb2ff7969eb24f3cd"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/license> <http://dbpedia.org/resource/GNU_General_Public_License> . ?x <http://dbpedia.org/property/genre> ?uri  . }", "SerialNumber": "3799", "question": "What genre's softwares are released with a GNU GPL license?", "entity mapping": [{"uri": "http://dbpedia.org/resource/GNU_General_Public_License", "label": "license"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/license", "label": "license"}, {"uri": "http://dbpedia.org/property/genre", "label": "genre"}], "id": "eb2d086a990849edbedf1e67a5489fc7"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Playtone>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3800", "question": "How many shows are made by Playtone?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Playtone", "label": "Playtone"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/company", "label": "made"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "742fc3c32535483d84f660a50956fc0c"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/L\u00fc_Buwei> <http://dbpedia.org/ontology/monarch> ?uri } ", "SerialNumber": "3801", "question": "Name the monarch of L Buwei ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/L\u00fc_Buwei", "label": "buwei l"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/monarch", "label": "monarch"}], "id": "c3f02e6afc5c4437933fc26320fd4915"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/season> <http://dbpedia.org/resource/Liga_Divisi_Utama> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}", "SerialNumber": "3802", "question": "Which soccer clubs are in the Liga Divisi Utama?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Liga_Divisi_Utama", "label": "Liga Divisi Utama"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/season"}, {"uri": "http://dbpedia.org/property/name"}, {"uri": "http://dbpedia.org/ontology/SoccerClub", "label": "soccer club"}], "id": "e3178cfe799a4542bc1c07f4d8fa0891"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rev_(drink)> <http://dbpedia.org/property/distributor> ?uri } ", "SerialNumber": "3806", "question": "Who is the distributer of Rev ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Rev_(drink)", "label": "Rev"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/distributor", "label": "distributer"}], "id": "83a20f11faf04a29a327446573eef42a"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Dundas_Castle_(Roscoe,_New_York)> <http://dbpedia.org/property/architecture> ?x . ?x <http://dbpedia.org/property/region> ?uri  . }", "SerialNumber": "3807", "question": "In how many places can I find people who were the architects of the Dundas Castle?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dundas_Castle_(Roscoe,_New_York)", "label": "Dundas Castle"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/architecture", "label": "architects"}, {"uri": "http://dbpedia.org/property/region", "label": "people"}], "id": "7380ef507d0a4475822c823d403e5033"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke> . ?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/TNT_(TV_channel)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3808", "question": "Which TNT show has Christopher Franke as artist?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Christopher_Franke", "label": "Christopher Franke"}, {"uri": "http://dbpedia.org/resource/TNT_(TV_channel)", "label": "TNT"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/artist", "label": "artist"}, {"uri": "http://dbpedia.org/property/network"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "0a39dc60f7d4418592e0d1d5426c7c5a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Mudbloods> <http://dbpedia.org/property/genre> ?x . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . }", "SerialNumber": "3811", "question": "Where did the genres originate which can found in The Mudbloods?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Mudbloods", "label": "The Mudbloods"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/genre", "label": "genre"}, {"uri": "http://dbpedia.org/ontology/stylisticOrigin", "label": "found"}], "id": "7bd1752d4a3843d1b75a99a3c4131114"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/lyrics> <http://dbpedia.org/resource/Sheldon_Harnick> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . }", "SerialNumber": "3815", "question": "From how many works is the musical derived, whose lyrics are written by Sheldon Harnick?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sheldon_Harnick", "label": "Sheldon Harnick"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/lyrics", "label": "lyrics"}, {"uri": "http://dbpedia.org/ontology/basedOn", "label": "written"}], "id": "0d4bdac144b6458296c5c93ebacb1789"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/\u00c9douard_Chavannes> . ?x <http://dbpedia.org/property/fields> ?uri  . }", "SerialNumber": "3816", "question": "In which fields are pupils of Edouard Chavannes working?", "entity mapping": [{"uri": "http://dbpedia.org/resource/\u00c9douard_Chavannes", "label": "Edouard Chavannes"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/academicAdvisor", "label": "working"}, {"uri": "http://dbpedia.org/property/fields", "label": "fields"}], "id": "0b977445d3f142d3a514eb59c55000fd"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/India>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "3819", "question": "How many politicians live in India?", "entity mapping": [{"uri": "http://dbpedia.org/resource/India", "label": "India"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/residence", "label": "live"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "live"}], "id": "be045d0165ce481b9924bae470be2f0f"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Bachelor_of_Arts> . ?x <http://dbpedia.org/ontology/residence> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "SerialNumber": "3821", "question": "In how many places can I find people whose alma mater was in bachelor of arts?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bachelor_of_Arts", "label": "bachelor of arts"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/almaMater", "label": "alma mater"}, {"uri": "http://dbpedia.org/ontology/residence", "label": "people"}, {"uri": "http://dbpedia.org/ontology/Place", "label": "place"}], "id": "24ee24bf221e4289bf99c0ed742a27fe"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Soccer_Bowl_'76> <http://dbpedia.org/ontology/city> ?uri. <http://dbpedia.org/resource/Cheasty_Boulevard_South> <http://dbpedia.org/ontology/maintainedBy> ?uri} ", "SerialNumber": "3822", "question": "Which maintainer of Cheasty Boulevard South is also the city of Soccer Bowl' 76 ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Soccer_Bowl_'76", "label": "soccer"}, {"uri": "http://dbpedia.org/resource/Cheasty_Boulevard_South", "label": "Cheasty Boulevard South"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/city", "label": "city"}, {"uri": "http://dbpedia.org/ontology/maintainedBy", "label": "maintainer"}], "id": "6ef5a08456594a85bc7216c671ad1076"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014\u201315_Panionios_G.S.S._season> <http://dbpedia.org/property/stadium> ?uri } ", "SerialNumber": "3825", "question": "What was the stadium of Panionios G.S.S. in 2014-15 season ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2014\u201315_Panionios_G.S.S._season", "label": "panionios season g.s.s."}], "predicate mapping": [{"uri": "http://dbpedia.org/property/stadium", "label": "stadium"}], "id": "e36eb17b3221405197c89bc804df06cb"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Shaquil_Barrett> <http://dbpedia.org/property/debutteam> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . }", "SerialNumber": "3826", "question": "Where is the debut team of Shaquil Barrett located?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Shaquil_Barrett", "label": "Shaquil Barrett"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/debutteam", "label": "debut team"}, {"uri": "http://dbpedia.org/ontology/locationCity", "label": "located"}], "id": "12126746eda842aa8fcca0253a6905bb"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/lyrics> <http://dbpedia.org/resource/Sheldon_Harnick> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}", "SerialNumber": "3827", "question": "What are the musicals based on, whose lyricist was Shelon Harnick?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sheldon_Harnick", "label": "Shelon Harnick"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/lyrics", "label": "lyricist"}, {"uri": "http://dbpedia.org/ontology/basedOn", "label": "based on"}, {"uri": "http://dbpedia.org/ontology/Musical", "label": "musical"}], "id": "55e5eb722be04ed0818176f887603e97"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/A_Rose_for_Emily>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "SerialNumber": "3828", "question": "Who wrote a rose for emily?", "entity mapping": [{"uri": "http://dbpedia.org/resource/A_Rose_for_Emily", "label": "a rose for emily"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/notableWork"}, {"uri": "http://dbpedia.org/ontology/Writer", "label": "wrote"}], "id": "6aa2c0fad7224aab875e00964e242d8b"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/property/animator> ?uri. <http://dbpedia.org/resource/The_Haunted_House_(1929_film)> <http://dbpedia.org/ontology/director> ?uri} ", "SerialNumber": "3830", "question": "Which animator of Tommy Ticker's Tooth is also the director of The Haunted house ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth", "label": ""}, {"uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)", "label": "The Haunted house"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/animator", "label": "animator"}, {"uri": "http://dbpedia.org/ontology/director", "label": "director"}], "id": "a7fe79af1995496f9ee76331f0d5ebb5"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/Association_of_Southeast_Asian_Institutions_of_Higher_Learning> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }", "SerialNumber": "3832", "question": "How many games are played at universities affiliated with the Association of Southeast Asian Institutions of Higher Learning?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Association_of_Southeast_Asian_Institutions_of_Higher_Learning", "label": "Association of Southeast Asian Institutions of Higher Learning"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/affiliation", "label": "affiliated"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "affiliated"}], "id": "de9f7d4ab7234f029fe2a69b1fb26c8e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/National_Commercial_Bank_Mauritius> <http://dbpedia.org/property/locationCountry> ?uri. <http://dbpedia.org/resource/Mauritius_Bank> <http://dbpedia.org/property/locationCountry> ?uri . }", "SerialNumber": "3833", "question": "From which country did the Mauritius bank and the national commerce bank emerge?", "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Commercial_Bank_Mauritius", "label": "mauritius national"}, {"uri": "http://dbpedia.org/resource/Mauritius_Bank", "label": "Mauritius bank"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/locationCountry", "label": "country"}, {"uri": "http://dbpedia.org/property/locationCountry", "label": "country"}], "id": "1386583d5c3243a7a2eef959681226b1"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Populous_(company)> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . }", "SerialNumber": "3836", "question": "Count the tenants of the stadiums designed by Populous?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Populous_(company)", "label": "Populous"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/architect", "label": "designed"}, {"uri": "http://dbpedia.org/ontology/tenant", "label": "tenant"}], "id": "95cbbbabb49c4cf6a010c6ea3c230633"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Seewoosagur_Ramgoolam> . ?x <http://dbpedia.org/property/broadcastArea> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}", "SerialNumber": "3837", "question": "Where does the network cofounded by Seewoosagur Ramgoolam air its shows?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Seewoosagur_Ramgoolam", "label": "Seewoosagur Ramgoolam"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/founder", "label": "founded by"}, {"uri": "http://dbpedia.org/property/broadcastArea", "label": "shows"}, {"uri": "http://dbpedia.org/ontology/BroadcastNetwork", "label": "network"}], "id": "5e96bbf76e3e40b2a62b009a2c1e48ea"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/SAGE_Publications> . ?x <http://dbpedia.org/ontology/academicDiscipline> ?uri  . }", "SerialNumber": "3839", "question": "Count the different number of academic areas covered by publications of SAGE?", "entity mapping": [{"uri": "http://dbpedia.org/resource/SAGE_Publications", "label": "publications sage"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/publisher", "label": "SAGE"}, {"uri": "http://dbpedia.org/ontology/academicDiscipline", "label": "academic area"}], "id": "9ddba4eb7a16400f906e88d1c0390a79"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation> <http://dbpedia.org/property/membership> ?uri. <http://dbpedia.org/resource/Aishath_Saffa> <http://dbpedia.org/property/nationality> ?uri} ", "SerialNumber": "3840", "question": "Which memeber of South Asia SubRegional Economic cooperation is also the nationality of Aishath saffa ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation", "label": "South Asia SubRegional Economic cooperation"}, {"uri": "http://dbpedia.org/resource/Aishath_Saffa", "label": "Aishath saffa"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/membership", "label": "memeber"}, {"uri": "http://dbpedia.org/property/nationality", "label": "nationality"}], "id": "abcce0946b3a4c748fd0c8a9f5cf1030"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Leonard_Lerman> . ?x <http://dbpedia.org/property/almaMater> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "SerialNumber": "3844", "question": "Where did the scientist study whose doctoral thesis was supervised by Leonard Lerman?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Leonard_Lerman", "label": "Leonard Lerman"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/doctoralAdvisor", "label": "doctoral"}, {"uri": "http://dbpedia.org/property/almaMater", "label": "supervised"}, {"uri": "http://dbpedia.org/ontology/Scientist", "label": "scientist"}], "id": "85bb3f36d96d48e4aa43e98a78de40a0"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Skai_Group> <http://dbpedia.org/ontology/keyPerson> ?x . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . }", "SerialNumber": "3853", "question": "What is the country of origin of the president of Skai group?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Skai_Group", "label": "Skai group"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/keyPerson", "label": "president"}, {"uri": "http://dbpedia.org/ontology/stateOfOrigin", "label": "origin"}], "id": "d36b821cc4c947d19cf3ec17ad87e9c2"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation> . ?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Julian_Doyle_(filmmaker)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "3856", "question": "Name the movies distributed by Cinema International Corporation and edited by Hulian Doyle ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cinema_International_Corporation", "label": "Cinema International Corporation"}, {"uri": "http://dbpedia.org/resource/Julian_Doyle_(filmmaker)", "label": "doyle"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/distributor", "label": "distributed by"}, {"uri": "http://dbpedia.org/property/editing", "label": "edited by"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "9a8d8cab24774d4eb9fe49d063f80906"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Miao_people> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Guru_Purnima> <http://dbpedia.org/ontology/country> ?uri} ", "SerialNumber": "3860", "question": "What is the common relegion of Miao people  and the country where Guru Purnima is celebrated ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Miao_people", "label": "Miao people"}, {"uri": "http://dbpedia.org/resource/Guru_Purnima", "label": "Guru Purnima"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/religion", "label": "celebrated"}, {"uri": "http://dbpedia.org/ontology/country", "label": "country"}], "id": "629e52550fd146e191ec02ae20114735"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Gustavo_Rojas_Pinilla> . ?x <http://dbpedia.org/property/almaMater> ?uri  . }", "SerialNumber": "3861", "question": "Where did the relatives of Gustavo Rojas Pinilla study?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gustavo_Rojas_Pinilla", "label": "Gustavo Rojas Pinilla"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relation", "label": "study"}, {"uri": "http://dbpedia.org/property/almaMater", "label": "study"}], "id": "bd4cb94b69084d79b0d1feb1fc8b014d"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Killing_Is_Out,_School_Is_In> <http://dbpedia.org/property/album> <http://dbpedia.org/resource/The_Next_Step_(James_Brown_album)> }", "SerialNumber": "3863", "question": "Is the song Killing is Out, School is in belong in the The Next Step?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Killing_Is_Out,_School_Is_In", "label": "Killing is Out, School is in"}, {"uri": "http://dbpedia.org/resource/The_Next_Step_(James_Brown_album)", "label": "The Next Step"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/album", "label": "belong"}], "id": "c19fedddfc0041919699b9a01eb5cbd1"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mainIngredient> <http://dbpedia.org/resource/Flour> . ?uri <http://dbpedia.org/ontology/type> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}", "SerialNumber": "3864", "question": "What are some dishes from the family of dishes which primarily use flour?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Flour", "label": "flour"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mainIngredient", "label": "primarily"}, {"uri": "http://dbpedia.org/ontology/type", "label": "primarily"}, {"uri": "http://dbpedia.org/ontology/Food", "label": "primarily"}], "id": "5916bbcd6e894955885d10526c5bd306"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Heroman> <http://dbpedia.org/property/author> ?uri. <http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo> <http://dbpedia.org/ontology/author> ?uri} ", "SerialNumber": "3865", "question": "Who is the author of Heroman is also the author of Karakuri Dji Ultimo ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Heroman", "label": "Heroman"}, {"uri": "http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo", "label": "karakuri ultimo"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/author", "label": "author"}, {"uri": "http://dbpedia.org/ontology/author", "label": "author"}], "id": "7788c912b6fb4457b27be58ee6f63052"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Blade_Runner> <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth> }", "SerialNumber": "3868", "question": "Was Blade Runner cinematographed by JordanCronenweth?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Blade_Runner", "label": "Blade Runner"}, {"uri": "http://dbpedia.org/resource/Jordan_Cronenweth", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/cinematography", "label": "cinematographed"}], "id": "4b3b5256bbe842d685027d2c18454d38"}, {"sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> . ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS>} ", "SerialNumber": "3870", "question": "Count the number of software which runs on Microsoft Windows and mac OS ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Windows", "label": "Microsoft Windows"}, {"uri": "http://dbpedia.org/resource/Mac_OS", "label": "mac OS"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/operatingSystem", "label": "runs"}, {"uri": "http://dbpedia.org/ontology/operatingSystem", "label": "runs"}], "id": "ff4d3c67a6884976a4f27a81882a97cd"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Carl_Sagan> . ?x <http://dbpedia.org/property/subject> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "SerialNumber": "3871", "question": "What has Carl Sagan written his books about?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Carl_Sagan", "label": "Carl Sagan"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/author", "label": "written"}, {"uri": "http://dbpedia.org/property/subject", "label": "written"}, {"uri": "http://dbpedia.org/ontology/Book", "label": "book"}], "id": "68843601f12e4f76a157d8e77cdd18b0"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/The_Office_(U.S._TV_series)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "SerialNumber": "3872", "question": "How many characters are there in The Office?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Office_(U.S._TV_series)", "label": "The Office"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/series"}, {"uri": "http://dbpedia.org/ontology/FictionalCharacter", "label": "characters"}], "id": "af581de0b01f4908a95d361a6416a13c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Susie_Liggat> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3876", "question": "What are some TV shows similar to the one produced by Susie Liggat?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Susie_Liggat", "label": "Susie Liggat"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/producer", "label": "produced"}, {"uri": "http://dbpedia.org/ontology/related", "label": "similar"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "8b2570a474e64d91bdf32a893692ac55"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Stevens_Thomson_Mason_(Virginia)> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }", "SerialNumber": "3877", "question": "How did the child of Stevens T. Mason die?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Stevens_Thomson_Mason_(Virginia)", "label": "Stevens T. Mason"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/child", "label": "child"}, {"uri": "http://dbpedia.org/ontology/deathCause", "label": "die"}], "id": "f18825b526744c29b18f7b0a6dc10b80"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/New_York_City_FC>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}", "SerialNumber": "3879", "question": "Which soccer players are currently playing for NYC FC?", "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_City_FC", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentclub"}, {"uri": "http://dbpedia.org/ontology/SoccerPlayer", "label": "soccer player"}], "id": "3624137271954fb984aa700614ac0115"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Ridgewood,_New_Jersey>  . }", "SerialNumber": "3881", "question": "How many things are located in Ridgewood, New Jersey?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ridgewood,_New_Jersey", "label": "Ridgewood, New Jersey"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/birthPlace", "label": "located"}], "id": "ff0272acb02c43028e695cdae056b647"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Boston>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3886", "question": "Which television show's company is Paramount Television and is located in Boston?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Paramount_Television", "label": "Paramount Television"}, {"uri": "http://dbpedia.org/resource/Boston", "label": "Boston"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/company", "label": "company"}, {"uri": "http://dbpedia.org/ontology/location", "label": "located"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "television show"}], "id": "a9bd73968852449abc9875ea0e72a3f9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Java_Gold> <http://dbpedia.org/property/trainer> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }", "SerialNumber": "3890", "question": "Where was the trainer of Java Gold born?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Java_Gold", "label": "Java Gold"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/trainer", "label": "trainer"}, {"uri": "http://dbpedia.org/property/birthPlace", "label": "born"}], "id": "f67831f30b7c4fcdb7f825ca4a09c5cf"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Vadodara_Junction_railway_station> <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Ministry_of_Railways_(India)> }", "SerialNumber": "3891", "question": "Is the Vadodara railway junction onwed by Indian Railway Ministry?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station", "label": "vadodara junction railway"}, {"uri": "http://dbpedia.org/resource/Ministry_of_Railways_(India)", "label": "ministry railway"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owningOrganisation"}], "id": "5545373a672f44b68c675c0fa2a9b8ac"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/grandsire> <http://dbpedia.org/resource/Wild_Risk> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RaceHorse>}", "SerialNumber": "3895", "question": "Race horses whose grandsire is Wild  Risk have taken part in which races?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Wild_Risk", "label": "wild risk"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/grandsire", "label": "grandsire"}, {"uri": "http://dbpedia.org/property/race", "label": "Race"}, {"uri": "http://dbpedia.org/ontology/RaceHorse", "label": "Race horse"}], "id": "06363edf0f81486685ac0173e6b02850"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/T.I._Ahmadiyya_Girls_Senior_High_School,_Asokore> <http://dbpedia.org/ontology/denomination> ?uri } ", "SerialNumber": "3897", "question": "Where is the T.I. Ahmadiyya Girls Senior High School?", "entity mapping": [{"uri": "http://dbpedia.org/resource/T.I._Ahmadiyya_Girls_Senior_High_School,_Asokore", "label": "T.I. Ahmadiyya Girls Senior High School"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/denomination"}], "id": "4b468d8b196546ddaa7555d1afa4c1c3"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/locationCity> <http://dbpedia.org/resource/Taiwan> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}", "SerialNumber": "3898", "question": "How many information appliance are manufactured by companies located in Taiwan?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Taiwan", "label": "Taiwan"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/locationCity", "label": "located"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "manufactured by"}, {"uri": "http://dbpedia.org/ontology/InformationAppliance", "label": "information appliance"}], "id": "1fe3b3d58f8e432d9b1f3b09d5f74c6f"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_Defense> } ", "SerialNumber": "3903", "question": "Into what military organizations is the United States Department of Defense divided?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Department_of_Defense", "label": "United States Department of Defense"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/commandStructure", "label": "divided"}], "id": "7bf4c6d437c849c79fbda07a1c39272a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/Miley_Cyrus> . ?uri <http://dbpedia.org/ontology/openingTheme> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3906", "question": "Name all sitcoms whose theme music is made by Miley Cyrus?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Miley_Cyrus", "label": "Miley Cyrus"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/musicalBand", "label": "music"}, {"uri": "http://dbpedia.org/ontology/openingTheme", "label": "theme"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "made"}], "id": "6f6810ed49a548939905cf6abbe9bccf"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Toyota_Verossa> <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/Front-engine_design>  . }", "SerialNumber": "3907", "question": "Does the Toyota Verossa have the front engine design platform?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Toyota_Verossa", "label": "Toyota Verossa"}, {"uri": "http://dbpedia.org/resource/Front-engine_design", "label": "engine design front"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/automobilePlatform", "label": "platform"}], "id": "af1ad3ef33784711bf9ecd13301e524d"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Neil_Armstrong> <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8> }", "SerialNumber": "3911", "question": "Was Neil Armstrong on the Gemini 8 mission?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Neil_Armstrong", "label": "Neil Armstrong"}, {"uri": "http://dbpedia.org/resource/Gemini_8", "label": "Gemini 8"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mission", "label": "mission"}], "id": "6ac8c31d60b54b13b8e5241fd7e4b741"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell> . ?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3913", "question": "Name the sitcom with theme music composer as Julian Gingell and channel as Fox Broadcasting Company?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Julian_Gingell", "label": "Julian Gingell"}, {"uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company", "label": "Fox Broadcasting Company"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/themeMusicComposer", "label": "theme music composer"}, {"uri": "http://dbpedia.org/ontology/channel", "label": "channel"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "sitcom"}], "id": "710a55e3696846ab95695ee383a1fa25"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Young_Lords> <http://dbpedia.org/property/international> ?uri } ", "SerialNumber": "3914", "question": "Which nationalist group was responsible for foundation of Young Lords?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Young_Lords", "label": "Young Lords"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/international", "label": "foundation"}], "id": "2c6bf82629164b92ae31c438f24e169e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Samuel_Moreno_Rojas> <http://dbpedia.org/ontology/relation> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . }", "SerialNumber": "3918", "question": "Give me all the alma mater of the relatives of Samuek Moreno Rojas ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Samuel_Moreno_Rojas", "label": "Samuek Moreno Rojas"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relation", "label": "relatives"}, {"uri": "http://dbpedia.org/property/almaMater", "label": "alma mater"}], "id": "261be9eb5d11448d9fc941edd2cf2524"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Truman_McGill_Hobbs> <http://dbpedia.org/property/residence> ?uri } ", "SerialNumber": "3920", "question": "Where does Truman McGill Hobbs, United States District Judge live?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Truman_McGill_Hobbs", "label": "Truman McGill Hobbs"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/residence", "label": "live"}], "id": "e7c2c4d667f343a58a587ef74bcc6bff"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Isaac_Hayes> . ?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3922", "question": "Name the television program voiced by Isaac Hayes and aired on Comedy Central?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Isaac_Hayes", "label": "Isaac Hayes"}, {"uri": "http://dbpedia.org/resource/Comedy_Central", "label": "Comedy Central"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/voices", "label": "voiced"}, {"uri": "http://dbpedia.org/property/network", "label": "aired"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "television"}], "id": "6c1c0ca2a98141f3a9687634493adc68"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/related> <http://dbpedia.org/resource/Opel_Karl> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "SerialNumber": "3923", "question": "Which company manufactures cars like the Opel Karl ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Opel_Karl", "label": "Opel Karl"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/related", "label": "cars"}, {"uri": "http://dbpedia.org/property/parentCompany", "label": "company"}, {"uri": "http://dbpedia.org/ontology/Automobile", "label": "cars"}], "id": "9147a259a1bf43e0bdad21cf341abc26"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_St._Clair> . ?x <http://dbpedia.org/property/combatant> ?uri  . }", "SerialNumber": "3924", "question": "How many people have fought wars where Arthur St. Clair was a commander?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Arthur_St._Clair", "label": "Arthur St. Clair"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/commander", "label": "commander"}, {"uri": "http://dbpedia.org/property/combatant", "label": "wars"}], "id": "2aaac4193bd2408399d5d3c8640c90ec"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Primate> . ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Ape>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}", "SerialNumber": "3925", "question": "Name the mammals which are primate and belongs to family of ape ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Primate", "label": "primate"}, {"uri": "http://dbpedia.org/resource/Ape", "label": "ape"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/order"}, {"uri": "http://dbpedia.org/ontology/family", "label": "family"}, {"uri": "http://dbpedia.org/ontology/Mammal", "label": "mammal"}], "id": "8a5c47c1f5544bed9201bf2e6d45ba64"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Mangalore> . ?x <http://dbpedia.org/property/party> ?uri  . }", "SerialNumber": "3926", "question": "What are some parties which have people from Mangalore as a member?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mangalore", "label": "Mangalore"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBirth"}, {"uri": "http://dbpedia.org/property/party", "label": "parties"}], "id": "adabfc9d8bab4686b6e3fc7b97893c7b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Vitis_vinifera> . ?x <http://dbpedia.org/ontology/wineRegion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Grape>}", "SerialNumber": "3930", "question": "In which areas can I find wine made of Vitis vinifera grapes?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Vitis_vinifera", "label": "Vitis vinifera"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/species", "label": "made"}, {"uri": "http://dbpedia.org/ontology/wineRegion", "label": "wine"}, {"uri": "http://dbpedia.org/ontology/Grape", "label": "grape"}], "id": "3230a08d90af4614ae2510d4feb9382f"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/property/playedFor> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "SerialNumber": "3931", "question": "In how many different teams have all those who have played as a defenceman been?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Defenceman", "label": "defenceman"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/position", "label": "played"}, {"uri": "http://dbpedia.org/property/playedFor", "label": "team"}, {"uri": "http://dbpedia.org/ontology/SportsTeam", "label": "team"}], "id": "0d511229c1004f4b8405d2c90496fd03"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Benedict_Arnold's_expedition_to_Quebec> . ?uri <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/St_Mary's_Church,_Battersea>  . }", "SerialNumber": "3936", "question": "Who was buried at St. Mary's Church and fought the battle of  Benedict Arnold's expedition to Quebec ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Benedict_Arnold's_expedition_to_Quebec", "label": "Benedict Arnold's expedition to Quebec"}, {"uri": "http://dbpedia.org/resource/St_Mary's_Church,_Battersea", "label": "mary's church"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/battle", "label": "battle"}, {"uri": "http://dbpedia.org/property/placeofburial"}], "id": "84e3b4c63caa4cc6a76221a3f87025f4"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Cross-platform> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }", "SerialNumber": "3937", "question": "How many companies have developed cross platformed softwares?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cross-platform", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/operatingSystem", "label": "softwares"}, {"uri": "http://dbpedia.org/ontology/developer", "label": "developed"}], "id": "3115a0dfde724a49a564f755192dd1ab"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Pontiac_G8> <http://dbpedia.org/ontology/relatedMeanOfTransportation> ?x . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "SerialNumber": "3938", "question": "How many cars are the predecessor of cars similar to the Pontiac G8?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pontiac_G8", "label": "Pontiac G8"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relatedMeanOfTransportation"}, {"uri": "http://dbpedia.org/ontology/predecessor", "label": "predecessor"}, {"uri": "http://dbpedia.org/ontology/Automobile", "label": "similar"}], "id": "36c9a6650fdd4fadb4be1d77eabc6198"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_Les_Paul>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "SerialNumber": "3940", "question": "What are some famous artists who rocked a Les Paul?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gibson_Les_Paul", "label": "Les Paul"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/notableInstruments", "label": "rocked"}, {"uri": "http://dbpedia.org/ontology/MusicalArtist", "label": "artists"}], "id": "ede3db931b55452880393aec59f27131"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Atlantic_Seaboard_fall_line> <http://dbpedia.org/ontology/part> ?uri. <http://dbpedia.org/resource/Walter_Evans_Edge> <http://dbpedia.org/property/office> ?uri} ", "SerialNumber": "3941", "question": "Whichi office of Walter Evnas Edge is also the part of Atlantic seaboard fall lines ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Atlantic_Seaboard_fall_line", "label": "Atlantic seaboard fall line"}, {"uri": "http://dbpedia.org/resource/Walter_Evans_Edge", "label": "walter edge"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/part", "label": "part"}, {"uri": "http://dbpedia.org/property/office", "label": "office"}], "id": "2f376df9dd00440698f42178c7677b57"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_Mexico> . ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Surface>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "3942", "question": "Which new Mexico based company produces Surface ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/New_Mexico", "label": "new Mexico"}, {"uri": "http://dbpedia.org/resource/Microsoft_Surface", "label": "surface"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/foundation", "label": "Surface"}, {"uri": "http://dbpedia.org/ontology/product", "label": "Surface"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "77345fdf42cd4d2f8474d7eccb309bd9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Justin_Zackham> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "3943", "question": "What is the casting of the movie directed by Justin Zackham ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Justin_Zackham", "label": "Justin Zackham"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/director", "label": "directed by"}, {"uri": "http://dbpedia.org/property/starring", "label": "casting"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "af5b6ee8ccc1462dabeac10e39245823"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/system> <http://dbpedia.org/resource/Norfolk_Southern_Railway> . ?x <http://dbpedia.org/property/owner> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "SerialNumber": "3946", "question": "How many different organizations own the railway lines which are a part of Norfolk Southern Railway?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Norfolk_Southern_Railway", "label": "Norfolk Southern Railway"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/system", "label": "part"}, {"uri": "http://dbpedia.org/property/owner", "label": "own"}, {"uri": "http://dbpedia.org/ontology/Organisation"}], "id": "09ea36c583254aaab5a74fa304945343"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Chaudhary_Devi_Lal> . ?x <http://dbpedia.org/ontology/otherParty> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "3948", "question": "What are the party of the politicians whose deputy was Chaudhary Devi Lal?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chaudhary_Devi_Lal", "label": "Chaudhary Devi Lal"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/deputy", "label": "deputy"}, {"uri": "http://dbpedia.org/ontology/otherParty", "label": "party"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "politicians"}], "id": "564815b5f32d4020a3d65768cc5404c5"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Butters'_Very_Own_Episode> . ?x <http://dbpedia.org/ontology/musicComposer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionEpisode>}", "SerialNumber": "3953", "question": "Who composed the episode after which came Butter's Very own Episode?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Butters'_Very_Own_Episode", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/subsequentWork", "label": "Episode"}, {"uri": "http://dbpedia.org/ontology/musicComposer", "label": "composed"}, {"uri": "http://dbpedia.org/ontology/TelevisionEpisode", "label": "episode"}], "id": "d9e490fde9154a129b189fd66c1a8223"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Chung_Il-kwon> . ?uri <http://dbpedia.org/ontology/commander> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "3954", "question": "What are some wars fought when Chung Il Kwon as the country's prime minister?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chung_Il-kwon", "label": "Chung Il Kwon"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/primeminister", "label": "minister prime"}, {"uri": "http://dbpedia.org/ontology/commander", "label": "minister"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "minister"}], "id": "ee5255e0079449ae9103f3cf1c059fbd"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/position> <http://dbpedia.org/resource/Catcher> . ?uri <http://dbpedia.org/ontology/manager> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}", "SerialNumber": "3955", "question": "List down all the baseball teams whose team manager was a Catcher?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Catcher", "label": "Catcher"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/position"}, {"uri": "http://dbpedia.org/ontology/manager", "label": "team manager"}, {"uri": "http://dbpedia.org/ontology/BaseballTeam", "label": "baseball team"}], "id": "0be0815b6d7946da97888b0cc3bf85c0"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Young_Americans_Bank> <http://dbpedia.org/property/foundation> ?uri. <http://dbpedia.org/resource/Denver_Broncos> <http://dbpedia.org/ontology/locationCity> ?uri} ", "SerialNumber": "3960", "question": "Which founding cities of Young Americans Bank is also the location of Denver Broncos ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Young_Americans_Bank", "label": "Young Americans Bank"}, {"uri": "http://dbpedia.org/resource/Denver_Broncos", "label": "Denver Broncos"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/foundation", "label": "cities"}, {"uri": "http://dbpedia.org/ontology/locationCity", "label": "location"}], "id": "ea51be89c95a4b4d91b32d48835ded65"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Malik_Ausean_Evans> <http://dbpedia.org/ontology/college> ?uri. <http://dbpedia.org/resource/Kyle_Fuller_(basketball)> <http://dbpedia.org/property/college> ?uri} ", "SerialNumber": "3961", "question": "What is the college of Malik Ausean which is also the college of Kyle Fuller ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Malik_Ausean_Evans", "label": "ausean malik"}, {"uri": "http://dbpedia.org/resource/Kyle_Fuller_(basketball)", "label": "Kyle Fuller"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/college", "label": "college"}, {"uri": "http://dbpedia.org/property/college", "label": "college"}], "id": "edd475c6742c46fab9cff4f03715fdc2"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Patr\u00edcia_Amorim> . ?x <http://dbpedia.org/property/name> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "3963", "question": "How many people have worked for teams chaired by Patricia Amorim?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Patr\u00edcia_Amorim", "label": "Patricia Amorim"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/chairman", "label": "chaired"}, {"uri": "http://dbpedia.org/property/name", "label": "teams"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "teams"}], "id": "2ca97f86a97a48c6884ef73475245fd2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Oakland_Athletics> . ?x <http://dbpedia.org/property/architect> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "SerialNumber": "3965", "question": "Who designed the stadiums which have been rented by Oakland athletics?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Oakland_Athletics", "label": "Oakland athletics"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/tenant", "label": "rented"}, {"uri": "http://dbpedia.org/property/architect", "label": "rented"}, {"uri": "http://dbpedia.org/ontology/Stadium", "label": "stadium"}], "id": "4fdfe129a9b94ef396a19e5882da3915"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Powell_(lacrosse)> <http://dbpedia.org/ontology/team> ?uri. <http://dbpedia.org/resource/Ryan_Powell_(lacrosse)> <http://dbpedia.org/ontology/team> ?uri . }", "SerialNumber": "3966", "question": "Which team did Michael and Ryan Powell play for?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Powell_(lacrosse)", "label": "michael powell"}, {"uri": "http://dbpedia.org/resource/Ryan_Powell_(lacrosse)", "label": "Ryan Powell"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/team", "label": "team"}, {"uri": "http://dbpedia.org/ontology/team", "label": "team"}], "id": "92f13c33f9394efe8c790385a7e907f6"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Indian_Standard_Time> . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . }", "SerialNumber": "3967", "question": "How many different people have been in any political seat in places which are under the Indian Standard timezone?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Indian_Standard_Time", "label": "Indian Standard time"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/timeZone", "label": "timezone"}, {"uri": "http://dbpedia.org/ontology/leaderName", "label": "zone"}], "id": "b890d5585137439888d5cb80a9160f6c"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/CFRX> <http://dbpedia.org/ontology/broadcastArea> ?uri. <http://dbpedia.org/resource/Anthony_Raymond_Ceresko> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "SerialNumber": "3970", "question": "Which broadcast area of CFRX is also the palce of birth of Anthony Raymond ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/CFRX", "label": "CFRX"}, {"uri": "http://dbpedia.org/resource/Anthony_Raymond_Ceresko", "label": "raymond anthony"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/broadcastArea", "label": "broadcast area"}, {"uri": "http://dbpedia.org/property/placeOfBirth", "label": "birth"}], "id": "7b6793a8d8a24f5da233b3f76475f5f9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/material> <http://dbpedia.org/resource/Wrought_iron> . ?x <http://dbpedia.org/ontology/river> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "SerialNumber": "3971", "question": "Bridges over which rivers are made of Wrought Iron?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Wrought_iron", "label": "Wrought Iron"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/material", "label": "made"}, {"uri": "http://dbpedia.org/ontology/river", "label": "river"}, {"uri": "http://dbpedia.org/ontology/Bridge", "label": "Bridge"}], "id": "a3c5a2eed28d4fce829b32d43b36eedc"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Argentina> . ?x <http://dbpedia.org/ontology/genre> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}", "SerialNumber": "3974", "question": "Count the different genres of music made by Argentinian bands?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Argentina", "label": "Argentini"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/hometown", "label": "bands"}, {"uri": "http://dbpedia.org/ontology/genre", "label": "genre"}, {"uri": "http://dbpedia.org/ontology/MusicGenre", "label": "genre"}], "id": "b60070566739496cbb32be93d3aa6d21"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Kingsley_Wood> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/property/primeminister> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "3975", "question": "For how many PMs did the politician work, whose successor was Kingsley Wood?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kingsley_Wood", "label": "Kingsley Wood"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/successor", "label": "successor"}, {"uri": "http://dbpedia.org/property/primeminister", "label": "politician"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "politician"}], "id": "295ec11bef8e4bf380b41c35e2142bfa"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/jurisdiction> <http://dbpedia.org/resource/Nazi_Germany> . ?x <http://dbpedia.org/ontology/leader> ?uri  . }", "SerialNumber": "3977", "question": "How many head of agencies were there in Nazi Germany?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Nazi_Germany", "label": "Nazi Germany"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/jurisdiction", "label": "agencies"}, {"uri": "http://dbpedia.org/ontology/leader", "label": "agencies"}], "id": "76611f72d25b4984b1511e6309e78e68"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Galatasaray_Handball_Team> <http://dbpedia.org/property/mascot> ?uri. <http://dbpedia.org/resource/Lyons_Township_High_School> <http://dbpedia.org/property/nickname> ?uri} ", "SerialNumber": "3978", "question": "Which nickname of Lyons Township JHigh school is also the mascot of Galatasaray Handball Team ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Galatasaray_Handball_Team", "label": "Galatasaray Handball Team"}, {"uri": "http://dbpedia.org/resource/Lyons_Township_High_School", "label": "township school"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mascot", "label": "mascot"}, {"uri": "http://dbpedia.org/property/nickname", "label": "nickname"}], "id": "4a5f5dcc47134e9d84939b7e3118a114"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Love_Hurts> <http://dbpedia.org/property/album> <http://dbpedia.org/resource/Short_Cut_Draw_Blood> }", "SerialNumber": "3982", "question": "Was Love Hurts in Short Cut Draw Blood?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Love_Hurts", "label": "Love Hurts"}, {"uri": "http://dbpedia.org/resource/Short_Cut_Draw_Blood", "label": "Short Cut Draw Blood"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/album"}], "id": "4d4161d0fcd14e16adcc00f8793191bc"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/Greater_Antilles> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}", "SerialNumber": "3983", "question": "What islands are there on the Greater Antilles archipelago?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Greater_Antilles", "label": "Greater Antilles"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/archipelago", "label": "archipelago"}, {"uri": "http://dbpedia.org/property/name"}, {"uri": "http://dbpedia.org/ontology/Island", "label": "island"}], "id": "b2c4a68e8a9948a0b430733a99af03b7"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "3986", "question": "Which Tv series led to Frasier?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Frasier", "label": "Frasier"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/subsequentWork", "label": "led"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "led"}], "id": "24323c55c5084725bbdb07997dfec006"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Andrew_Jackson> . ?uri <http://dbpedia.org/ontology/knownFor> ?x  . }", "SerialNumber": "3987", "question": "Count the number of people became famous for when Andrew Jackson was a commander ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Andrew_Jackson", "label": "Andrew Jackson"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/commander", "label": "commander"}, {"uri": "http://dbpedia.org/ontology/knownFor", "label": "famous"}], "id": "3d6bf4caec37493199f249d4af63860c"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/place> <http://dbpedia.org/resource/New_York> . ?x <http://dbpedia.org/property/writer> ?uri  . }", "SerialNumber": "3988", "question": "Count the writers whose work has been played in NY?", "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York", "label": "NY"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/place"}, {"uri": "http://dbpedia.org/property/writer", "label": "writers"}], "id": "2e7ea1d1a22640afb763ba50120b3917"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Lower_Manhattan> } ", "SerialNumber": "3990", "question": "Which rivers flow into the lower manhatten?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lower_Manhattan", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/mouthMountain", "label": "lower"}], "id": "6da0886adf5c4684b48c56ce0fd54b69"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Walson_Augustin> <http://dbpedia.org/ontology/position> <http://dbpedia.org/resource/Midfielder> }", "SerialNumber": "3993", "question": "Does Walson Augustin play as a midfielder?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Walson_Augustin", "label": "Walson Augustin"}, {"uri": "http://dbpedia.org/resource/Midfielder", "label": "midfielder"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/position", "label": "play"}], "id": "3c09aa3e2b3849638009db8e6cb205ea"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Union_of_Cambodian_Democrats> <http://dbpedia.org/ontology/ideology> ?uri } ", "SerialNumber": "3994", "question": "What are the airline hubs of Cascade Airways?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Union_of_Cambodian_Democrats", "label": "Cascade Airways"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/ideology", "label": "hubs"}], "id": "e6fda0418bd341adb1e7444c4d8d5d19"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/Sony_Music_Entertainment> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "3999", "question": "How many movies have their music signed up with Sony Music Entertainment.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony_Music_Entertainment", "label": "Sony Music Entertainment"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/recordLabel", "label": "signed"}, {"uri": "http://dbpedia.org/ontology/musicComposer", "label": "music"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "80de2acb61b74b10b7a95a24dc32f5dc"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCountry> <http://dbpedia.org/resource/Taiwan> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Device>}", "SerialNumber": "4007", "question": "What are some devices whose manufacturers are in taiwan?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Taiwan", "label": "taiwan"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/locationCountry"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "manufacturer"}, {"uri": "http://dbpedia.org/ontology/Device", "label": "device"}], "id": "5f43897b70a74a828e834f53ae65fb95"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Royal_Thai_Army> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "4008", "question": "People in the royal Thai army follow which religion?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_Thai_Army", "label": "royal Thai army"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/branch", "label": "follow"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "follow"}], "id": "018ff49cdfa0414f8e55961b5a7022b1"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/James_Watt> <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Mechanical_engineering> }", "SerialNumber": "4009", "question": "was james watt a mechanical engineer?", "entity mapping": [{"uri": "http://dbpedia.org/resource/James_Watt", "label": "james watt"}, {"uri": "http://dbpedia.org/resource/Mechanical_engineering", "label": "mechanical engineer"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/field"}], "id": "d94cdcd8ddea4f6ca38ef78a76aeb4f2"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Women_in_the_Garden> <http://dbpedia.org/property/artist> ?uri } ", "SerialNumber": "4013", "question": "which person created the women in the garden?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Women_in_the_Garden", "label": "women in the garden"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/artist", "label": "created"}], "id": "eb7076ae122e4f3bbb01b33be971ffc2"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Theme_Time_Radio_Hour> <http://dbpedia.org/property/creator> ?uri } ", "SerialNumber": "4017", "question": "Who is the artist of Time Radio hour ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Theme_Time_Radio_Hour", "label": "radio time hour the"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/creator", "label": "hour"}], "id": "626266625dc54af58709a5c0381b7aa6"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Duncan_Sandys> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/property/primeminister> ?uri  . }", "SerialNumber": "4018", "question": "How many prime ministers did the predecessor of Duncan Sandys  serve?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Duncan_Sandys", "label": "Duncan Sandys"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/successor", "label": "serve"}, {"uri": "http://dbpedia.org/property/primeminister", "label": "ministers"}], "id": "d0c72dbed0ac4f5ea394427d5a60df4a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Y._S._Rajasekhara_Reddy> . ?x <http://dbpedia.org/ontology/affiliation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Election>}", "SerialNumber": "4019", "question": "Which party won the elections when Y.S. Rajasekhara Reddy was in power?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Y._S._Rajasekhara_Reddy", "label": "Y.S. Rajasekhara Reddy"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/leader", "label": "power"}, {"uri": "http://dbpedia.org/ontology/affiliation", "label": "power"}, {"uri": "http://dbpedia.org/ontology/Election", "label": "election"}], "id": "caedfc75bd384fe7bcb3aa45a68f9dc5"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Henry_David_Thoreau> <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Politics> }", "SerialNumber": "4022", "question": "Is Henry David Thoreau interested in Politics?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Henry_David_Thoreau", "label": "Henry David Thoreau"}, {"uri": "http://dbpedia.org/resource/Politics", "label": "Politics"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mainInterests", "label": "interested"}], "id": "2c9741b69a754c32a0977065261b1b01"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Danny_Felice> <http://dbpedia.org/ontology/hometown> ?uri. <http://dbpedia.org/resource/C\u00e9line_Buckens> <http://dbpedia.org/ontology/hometown> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}", "SerialNumber": "4024", "question": "Which settelment area is the home town of the Danny Felice and Cline Buckens?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Danny_Felice", "label": "Danny Felice"}, {"uri": "http://dbpedia.org/resource/C\u00e9line_Buckens", "label": "buckens"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/hometown", "label": "home town"}, {"uri": "http://dbpedia.org/ontology/hometown", "label": "home town"}, {"uri": "http://dbpedia.org/ontology/Settlement", "label": "Cline"}], "id": "6563a461daf1415ab915fc5dfc0eb0be"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Arlington_National_Cemetery>  . }", "SerialNumber": "4033", "question": "How many people are buried in Arlington National Cemetery?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Arlington_National_Cemetery", "label": "Arlington National Cemetery"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeofburial"}], "id": "87c465fa859b45d78b3a51868b1d1375"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Fa'a'\u0101_International_Airport> <http://dbpedia.org/property/cityServed> <http://dbpedia.org/resource/Tahiti> }", "SerialNumber": "4034", "question": "Does Fa'a' International Airport serve tahiti too?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fa'a'\u0101_International_Airport", "label": "international airport fa'a'"}, {"uri": "http://dbpedia.org/resource/Tahiti", "label": "tahiti"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/cityServed", "label": "serve"}], "id": "17b2beca1aea4de591ccbcb84821c1a2"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Caterpillar_797F> <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/North_America> }", "SerialNumber": "4040", "question": "Is the Caterpullar 797F assembled in North America?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Caterpillar_797F", "label": "797F"}, {"uri": "http://dbpedia.org/resource/North_America", "label": "North America"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/assembly", "label": "assembled"}], "id": "d8f88e1d32024fa5bfff232c9286e30a"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jordan_River> <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Dan_River_(Middle_East)> }", "SerialNumber": "4043", "question": "Does Dan River flow into the Jordan Valley?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jordan_River", "label": "jordan river"}, {"uri": "http://dbpedia.org/resource/Dan_River_(Middle_East)", "label": "Dan River"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/leftTributary", "label": "Valley"}], "id": "1233074e435847cb89d45254f080d56f"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Beth_Tweddle> <http://dbpedia.org/property/club> <http://dbpedia.org/resource/City_of_Liverpool_Gymnastics_Club> }", "SerialNumber": "4044", "question": "Does Beth Tweddle play for the City of Liverpool gymnast club?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Beth_Tweddle", "label": "Beth Tweddle"}, {"uri": "http://dbpedia.org/resource/City_of_Liverpool_Gymnastics_Club", "label": "liverpool gymnast club city"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/club", "label": "club"}], "id": "bc66c5524237472895f7631eb4e962e0"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mount_Everest> <http://dbpedia.org/ontology/firstAscentPerson> <http://dbpedia.org/resource/Krzysztof_Wielicki> }", "SerialNumber": "4048", "question": "Was Krzystof Wielicki the first person that ascended the mt everest?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mount_Everest", "label": "mt everest"}, {"uri": "http://dbpedia.org/resource/Krzysztof_Wielicki", "label": "wielicki"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/firstAscentPerson", "label": "person"}], "id": "7e064438df204412a9e513d66ee3cc5e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Private_university> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }", "SerialNumber": "4049", "question": "List the sports played in private universities.", "entity mapping": [{"uri": "http://dbpedia.org/resource/Private_university", "label": "private universiti"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/type", "label": "played"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}], "id": "220dbedddb3a4970b6b74f1fa2282d6b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Clinton_family> . ?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Joe_Purcell>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}", "SerialNumber": "4053", "question": "Name the president whose had relatives in Clinton family and lieutenant named Joe Purcell?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Clinton_family", "label": "Clinton family"}, {"uri": "http://dbpedia.org/resource/Joe_Purcell", "label": "Joe Purcell"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relation", "label": "named"}, {"uri": "http://dbpedia.org/ontology/lieutenant", "label": "lieutenant"}, {"uri": "http://dbpedia.org/ontology/President", "label": "president"}], "id": "287e9d5624e64fa3a256084cbc7a853c"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/I_Pray_on_Christmas> <http://dbpedia.org/property/label> ?uri. <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/ontology/parentOrganisation> ?uri} ", "SerialNumber": "4056", "question": "Who oarent organization of Get TV is also the label provider of I Pray on CHristmas ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/I_Pray_on_Christmas", "label": "I Pray on CHristmas"}, {"uri": "http://dbpedia.org/resource/GetTV", "label": "get tv"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/label", "label": "label"}, {"uri": "http://dbpedia.org/ontology/parentOrganisation"}], "id": "6dd6deaa7cd2434fb62beb47d4ae9ff9"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/style> <http://dbpedia.org/resource/Burr_Truss> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>}", "SerialNumber": "4062", "question": "In how many states can one find Burr Tuss kind of bridges?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Burr_Truss", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/style", "label": "bridges"}, {"uri": "http://dbpedia.org/ontology/state", "label": "state"}, {"uri": "http://dbpedia.org/ontology/Region", "label": "bridges"}], "id": "63cb9ee6aac848bfab4e1474f02fa6cc"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell> . ?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "4063", "question": "Name the television show whose theme music is composed by Julian Gingell and broadcasted on FOX ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Julian_Gingell", "label": "Julian Gingell"}, {"uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/themeMusicComposer", "label": "composed"}, {"uri": "http://dbpedia.org/property/channel", "label": "FOX"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "television show"}], "id": "c547ee5efa2249c4a8e652d7c3822fed"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Green_River_(Duwamish_River)> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "4066", "question": "Through which important cities the does the river originating from the Duwamish, flow?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Green_River_(Duwamish_River)", "label": "Duwamish"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/source", "label": "flow"}, {"uri": "http://dbpedia.org/ontology/city", "label": "in"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "03c8435f984a413f9bdbfe9927c33086"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Metairie_Cemetery> . ?uri <http://dbpedia.org/ontology/child> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "4069", "question": "Which politicians son is buried in Metairie Cementery?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Metairie_Cemetery", "label": "metairie"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeofburial"}, {"uri": "http://dbpedia.org/ontology/child", "label": "son"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "Metairie"}], "id": "4dc617be22b34ffdb330e545e12a8ad9"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Ernest_Rutherford>  . }", "SerialNumber": "4073", "question": "To which students did Ernest Rutherford advised to?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ernest_Rutherford", "label": "Ernest Rutherford"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/doctoralAdvisor", "label": "advised"}], "id": "d039c214abca4acb95ebefed1ec4aee3"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kenya_national_under-20_football_team> <http://dbpedia.org/property/homeStadium> ?uri. <http://dbpedia.org/resource/Martin_Suji> <http://dbpedia.org/ontology/birthPlace> ?uri} ", "SerialNumber": "4075", "question": "What is the Home Stadium of the Kenya national under-20 football team where Matin Suji was also born ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kenya_national_under-20_football_team", "label": "Kenya national under-20 football team"}, {"uri": "http://dbpedia.org/resource/Martin_Suji", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/homeStadium", "label": "Home Stadium"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "born"}], "id": "f2f9462195254f19ac762ee377426f3f"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Temenos_Group> <http://dbpedia.org/property/foundation> ?uri. <http://dbpedia.org/resource/Jerzy_J\u00f3zef_Potocki> <http://dbpedia.org/property/placeOfDeath> ?uri} ", "SerialNumber": "4076", "question": "What foundation palce of Temenos Group is the death palce of jerzy Jzef Poocki ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Temenos_Group", "label": "Temenos Group"}, {"uri": "http://dbpedia.org/resource/Jerzy_J\u00f3zef_Potocki", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/foundation", "label": "foundation"}, {"uri": "http://dbpedia.org/property/placeOfDeath", "label": "death"}], "id": "f3e69f0433d44011900bd5304b4d5c31"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/Detroit> . ?x <http://dbpedia.org/property/parent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "SerialNumber": "4077", "question": "Which company owns the airlines whose hub is in Dubai?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Detroit", "label": "Dubai"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/hubs", "label": "hub"}, {"uri": "http://dbpedia.org/property/parent", "label": "owns"}, {"uri": "http://dbpedia.org/ontology/Airline", "label": "airline"}], "id": "09419b9d207043bc80903f773b894b62"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/formerChoreographer> <http://dbpedia.org/resource/Catarina_Lindgren> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "4078", "question": "How many people have parterned with the person choroegraphed by Catarina Lindgren in the past?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Catarina_Lindgren", "label": "Catarina Lindgren"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/formerChoreographer", "label": "past"}, {"uri": "http://dbpedia.org/ontology/formerPartner", "label": "past"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "person"}], "id": "f6f3a47cf61449bdac6126a01ad39c30"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Singhasan_Battisi_(TV_series)> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }", "SerialNumber": "4080", "question": "In which city was the film star of Singhasan Battisi born ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Singhasan_Battisi_(TV_series)", "label": "Singhasan Battisi"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/starring", "label": "star"}, {"uri": "http://dbpedia.org/property/birthPlace", "label": "born"}], "id": "9a26ec1acb5a49ebb1c6f3430eaf3aec"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/John_Derek> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "4081", "question": "Who all are starring in the  movies where director of photography is John Derek ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Derek", "label": "John Derek"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/cinematography", "label": "photography"}, {"uri": "http://dbpedia.org/property/starring", "label": "starring"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "e9e11aac69384f7ea4b8193f5237bb97"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/Software_as_a_service>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}", "SerialNumber": "4090", "question": "Name some software as a service?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Software_as_a_service", "label": "software as a service"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/license"}, {"uri": "http://dbpedia.org/ontology/Software", "label": "software"}], "id": "644aaef215cc484f9b712c5bc532d4b8"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Remote_Desktop_Protocol> . ?x <http://dbpedia.org/ontology/product> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "4091", "question": "What are some other things developed by the company who made the remote desktop protocol?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Remote_Desktop_Protocol", "label": "remote desktop protocol"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/products", "label": "made"}, {"uri": "http://dbpedia.org/ontology/product", "label": "made"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "179d3cc2b7f440ed93b9efb89aa4ff9a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus> . ?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "4093", "question": "Which office holder's predecessor is  Lucius Cornelius and his associate is Marcus Calpurnius Bibulus?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus", "label": "cornelius lucius"}, {"uri": "http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus", "label": "Marcus Calpurnius Bibulus"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/predecessor", "label": "predecessor"}, {"uri": "http://dbpedia.org/ontology/associate", "label": "associate"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "office holder"}], "id": "a21a8d3f8da84d2aa14502672faa0091"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School> . ?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Palo_Alto,_California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "4097", "question": "List the people educated at Harvard-Westlake School and has resting place as Palo Alto, California?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Harvard-Westlake_School", "label": "Harvard-Westlake School"}, {"uri": "http://dbpedia.org/resource/Palo_Alto,_California", "label": "Palo Alto, California"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/almaMater", "label": "edu"}, {"uri": "http://dbpedia.org/property/restingPlace", "label": "resting place"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "cated"}], "id": "7f370a0e523a45c1a3b23489c96c5c88"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/The_Shirelles> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "SerialNumber": "4100", "question": "What did other artists associated with the Shirelles make?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Shirelles", "label": "the Shirelles"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/associatedBand", "label": "associated"}, {"uri": "http://dbpedia.org/ontology/occupation", "label": "make"}, {"uri": "http://dbpedia.org/ontology/Artist", "label": "artist"}], "id": "ebe0a1b44e2c4bb081fc827147037d26"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cornell_University_Press> <http://dbpedia.org/ontology/parentCompany> ?uri. <http://dbpedia.org/resource/Mario_Garc\u00eda_Menocal> <http://dbpedia.org/ontology/almaMater> ?uri} ", "SerialNumber": "4101", "question": "Which parent company of the Cornell University Press is also the alma mater of the Mario Garca Menocal?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cornell_University_Press", "label": "Cornell University Press"}, {"uri": "http://dbpedia.org/resource/Mario_Garc\u00eda_Menocal", "label": "menocal mario"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/parentCompany", "label": "parent company"}, {"uri": "http://dbpedia.org/ontology/almaMater", "label": "alma mater"}], "id": "0a735fe654c440d3aa2c9dcdb4aaf390"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Skull_Gang> <http://dbpedia.org/ontology/bandMember> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "4102", "question": "Count the band members of Skull Gang?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Skull_Gang", "label": "Skull Gang"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/bandMember", "label": "band member"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "Count"}], "id": "faf06a2c20664530a15b7b7d5b272fdc"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Nutting> <http://dbpedia.org/ontology/knownFor> ?uri } ", "SerialNumber": "4104", "question": "What is the political party to which Purnima Banerjee is a member of?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Nutting", "label": "Purnima Banerjee"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/knownFor", "label": "member"}], "id": "f01315d63b924a25a46e91aae29457bc"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/John_Hospers> . ?x <http://dbpedia.org/ontology/incumbent> ?uri  . }", "SerialNumber": "4105", "question": "Who was the president during the time the opponent of John Hospers was in the office?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Hospers", "label": "John Hospers"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/opponent", "label": "opponent"}, {"uri": "http://dbpedia.org/ontology/incumbent", "label": "office"}], "id": "7c3c9d3e96c54807847b7a2b14049933"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Malik_Al-Hassan_Yakubu> <http://dbpedia.org/property/constituency> ?uri. <http://dbpedia.org/resource/CitiTrends_(radio_show)> <http://dbpedia.org/ontology/country> ?uri} ", "SerialNumber": "4106", "question": "Whcih land of Citi Trends is also the constituency of Malik Al-Hassan Yakubu ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Malik_Al-Hassan_Yakubu", "label": "Malik Al-Hassan Yakubu"}, {"uri": "http://dbpedia.org/resource/CitiTrends_(radio_show)", "label": "trends"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/constituency", "label": "constituency"}, {"uri": "http://dbpedia.org/ontology/country", "label": "land"}], "id": "7adccf6358744d82b563e59f30b482fa"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Panos_Ioannides> . ?x <http://dbpedia.org/property/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Publisher>}", "SerialNumber": "4107", "question": "In which country does the publishing house exist which was cofounded by Panos Loannides?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Panos_Ioannides", "label": "Panos Loannides"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/founder", "label": "founded by"}, {"uri": "http://dbpedia.org/property/country", "label": "country"}, {"uri": "http://dbpedia.org/ontology/Publisher", "label": "exist"}], "id": "4bd70a53db094071a29c3e999f05bee9"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elliott_Bay> <http://dbpedia.org/property/cities> ?uri } ", "SerialNumber": "4110", "question": "To which settlement does Elliot Bay belong to?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Elliott_Bay", "label": "Elliot Bay"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/cities", "label": "belong"}], "id": "48faaecba3194be8a5d4216c2e5bbe29"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/album> <http://dbpedia.org/resource/Aida_(musical)> . ?x <http://dbpedia.org/ontology/musicalArtist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>}", "SerialNumber": "4115", "question": "Which band produced the album Aida?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Aida_(musical)", "label": "Aida"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/album", "label": "album"}, {"uri": "http://dbpedia.org/ontology/musicalArtist", "label": "band"}, {"uri": "http://dbpedia.org/ontology/MusicalWork", "label": "produced"}], "id": "ccc04aa37c9b42178de44ab219cf6834"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parentCompany> <http://dbpedia.org/resource/Ministry_of_Finance_(Norway)> . ?x <http://dbpedia.org/property/products> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}", "SerialNumber": "4117", "question": "What do the banks owned by Norwegian ministry of finance produce?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ministry_of_Finance_(Norway)", "label": "ministry of finance"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/parentCompany", "label": "produce"}, {"uri": "http://dbpedia.org/property/products", "label": "produce"}, {"uri": "http://dbpedia.org/ontology/Bank", "label": "bank"}], "id": "5a074df3521141adb1aefaec144c1510"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/ontology/tenant> ?uri } ", "SerialNumber": "4122", "question": "What organisation regulates and controls the New Sanno Hotel?", "entity mapping": [{"uri": "http://dbpedia.org/resource/New_Sanno_Hotel", "label": "New Sanno Hotel"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/tenant", "label": "controls"}], "id": "97da8d0de1584a23a8560ea19c285153"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/affiliation> <http://dbpedia.org/resource/ETC_(TV_channel)> . ?x <http://dbpedia.org/property/area> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}", "SerialNumber": "4131", "question": "Where do networks affiliated with ETC broadcast?", "entity mapping": [{"uri": "http://dbpedia.org/resource/ETC_(TV_channel)", "label": "ETC"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/affiliation", "label": "affiliated"}, {"uri": "http://dbpedia.org/property/area", "label": "affiliated"}, {"uri": "http://dbpedia.org/ontology/BroadcastNetwork", "label": "broadcast"}], "id": "ff08a87358c14e6a98db33b34547c5b5"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Duddeston_railway_station> <http://dbpedia.org/property/borough> ?uri. <http://dbpedia.org/resource/Bordesley_railway_station> <http://dbpedia.org/property/borough> ?uri . }", "SerialNumber": "4132", "question": "Which borough is common for Duddeston and Bordesley railway station ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Duddeston_railway_station", "label": "duddeston station railway"}, {"uri": "http://dbpedia.org/resource/Bordesley_railway_station", "label": "Bordesley railway station"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/borough", "label": "borough"}, {"uri": "http://dbpedia.org/property/borough", "label": "borough"}], "id": "62e1ac6a48374811b387c936277abf3f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Siege_of_Fort_Recovery> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/North_Bend,_Ohio>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "4133", "question": "Name the office holder whose final resting place is North Bend and was part of Siege of fort recovery conflict ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Siege_of_Fort_Recovery", "label": "Siege of fort recovery"}, {"uri": "http://dbpedia.org/resource/North_Bend,_Ohio", "label": "north bend"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/battle", "label": "conflict"}, {"uri": "http://dbpedia.org/property/restingplace", "label": "resting place"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "office holder"}], "id": "ae35cc3329ac40a08ebe49385e806d35"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Goose_Lake_Valley> <http://dbpedia.org/ontology/state> ?uri. <http://dbpedia.org/resource/Lava_River_Cave> <http://dbpedia.org/ontology/location> ?uri} ", "SerialNumber": "4134", "question": "In which state is Goose Lake Valle, which is also part of Lava River Cave ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Goose_Lake_Valley", "label": "Goose Lake Valle,"}, {"uri": "http://dbpedia.org/resource/Lava_River_Cave", "label": "Lava River Cave"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/state", "label": "state"}, {"uri": "http://dbpedia.org/ontology/location", "label": "part"}], "id": "19aa6a8901924e0998a44283eaa9aef4"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Lausanne> . ?x <http://dbpedia.org/property/fields> ?uri  . }", "SerialNumber": "4135", "question": "In which fields have people born in Lausanne worked?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lausanne", "label": "Lausanne"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBirth"}, {"uri": "http://dbpedia.org/property/fields", "label": "fields"}], "id": "75b80b3f8a524509a21451d9a7acc46e"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Springer> <http://dbpedia.org/property/team> ?uri. <http://dbpedia.org/resource/Donald_Brooks> <http://dbpedia.org/property/education> ?uri} ", "SerialNumber": "4137", "question": "For whom did Michael Springer palyed for which is also had a former student named Donald Brooks ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Springer", "label": "Michael Springer"}, {"uri": "http://dbpedia.org/resource/Donald_Brooks", "label": "Donald Brooks"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/team", "label": "named"}, {"uri": "http://dbpedia.org/property/education", "label": "named"}], "id": "86888920922147cfbbe21f09a0e2c077"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Guitar> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "SerialNumber": "4139", "question": "How many artists have collaborated with famous guitar players?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Guitar", "label": "guitar"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/notableInstruments", "label": "players"}, {"uri": "http://dbpedia.org/ontology/associatedMusicalArtist", "label": "artists"}, {"uri": "http://dbpedia.org/ontology/Artist", "label": "artist"}], "id": "8fb26b1d97b449afb64a79c4c66ada90"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/United_States_Coast_Guard> . ?x <http://dbpedia.org/ontology/profession> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}", "SerialNumber": "4141", "question": "List the profession of senate whose one of the profession is United States Coast Guard ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_Coast_Guard", "label": "United States Coast Guard"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/profession", "label": "profession"}, {"uri": "http://dbpedia.org/ontology/profession", "label": "profession"}, {"uri": "http://dbpedia.org/ontology/Politician", "label": "senate"}], "id": "30605f74aa054fabbb707ab5e85247fe"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/citizenship> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }", "SerialNumber": "4143", "question": "What have some US citizens died of?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": "US"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/citizenship", "label": "citizens"}, {"uri": "http://dbpedia.org/ontology/deathCause", "label": "died"}], "id": "3d8f7450e4e84935b8f482bf336f0843"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/field> <http://dbpedia.org/resource/Veterinary_physician> . ?x <http://dbpedia.org/property/knownFor> ?uri  . }", "SerialNumber": "4144", "question": "What are some famous veterinary physicians known for?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Veterinary_physician", "label": "veterinary physicians"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/field", "label": "famous"}, {"uri": "http://dbpedia.org/property/knownFor", "label": "known for"}], "id": "60f9b1b1c6234d06881d6c6c2211192a"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Platte_River> <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/Colorado> }", "SerialNumber": "4145", "question": "Does the platte river originate in Colorado?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Platte_River", "label": "platte river"}, {"uri": "http://dbpedia.org/resource/Colorado", "label": "Colorado"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourceRegion", "label": "originate"}], "id": "da022345367d441484d1fdcb8582c86b"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Kulim> }", "SerialNumber": "4147", "question": "Is the Hyundai Lavita assembled in Kulim?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Hyundai_Lavita", "label": "Hyundai Lavita"}, {"uri": "http://dbpedia.org/resource/Kulim", "label": "Kulim"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/assembly", "label": "assembled"}], "id": "1045a9b2aa9742818b6c4fc9ba72c399"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/National_Endowment_for_the_Arts> <http://dbpedia.org/property/jurisdiction> <http://dbpedia.org/resource/Federal_government_of_the_United_States> }", "SerialNumber": "4156", "question": "Is the national endowment of arts under the jurisdiction of federal government of US?", "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Endowment_for_the_Arts", "label": "endowment national"}, {"uri": "http://dbpedia.org/resource/Federal_government_of_the_United_States", "label": "federal"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/jurisdiction", "label": "jurisdiction"}], "id": "ae5b96d1769c443288f79abd58151136"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Julia_Gillard> <http://dbpedia.org/ontology/primeMinister> <http://dbpedia.org/resource/Kevin_Rudd> }", "SerialNumber": "4157", "question": "Was Kevin Rudd the PM of Julia Gillard?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Julia_Gillard", "label": "Julia Gillard"}, {"uri": "http://dbpedia.org/resource/Kevin_Rudd", "label": "Kevin Rudd"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/primeMinister", "label": "PM"}], "id": "e01fcd131f144d599b2e638f003d7552"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Ramon_Magsaysay_Award> . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "4158", "question": "Which country were the people from who became famous for the Ramon Mangsaysay Award?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ramon_Magsaysay_Award", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/knownFor", "label": "Award"}, {"uri": "http://dbpedia.org/ontology/stateOfOrigin"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "Award"}], "id": "8b01cd75cf8c483682925fdc176c2317"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_M._Sears> <http://dbpedia.org/ontology/employer> ?uri. <http://dbpedia.org/resource/Delta_III> <http://dbpedia.org/ontology/manufacturer> ?uri} ", "SerialNumber": "4159", "question": "Which employer of Michael M. Sears is also the producer of Delta III ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_M._Sears", "label": "Michael M. Sears"}, {"uri": "http://dbpedia.org/resource/Delta_III", "label": "Delta III"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/employer", "label": "employer"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "producer"}], "id": "976416dab3a74a80855d6d582a488ff4"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Guggenheim_family> . ?uri <http://dbpedia.org/property/owner> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}", "SerialNumber": "4161", "question": "Guggenheim family is the cofounder of a company that invested stocks in which baseball teams?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Guggenheim_family", "label": "Guggenheim family"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/founder", "label": "founder of"}, {"uri": "http://dbpedia.org/property/owner", "label": "stocks"}, {"uri": "http://dbpedia.org/ontology/BaseballTeam", "label": "baseball team"}], "id": "83152a2adbe949ab904fda1101384ee7"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010> <http://dbpedia.org/property/incumbent> ?uri } ", "SerialNumber": "4162", "question": "Who won the ohio house of representatives, 2010?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010", "label": "2010"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/incumbent", "label": "house"}], "id": "2779011abe114ab58fb5e700589ea345"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/American_Boulevard_(Metro_Transit_station)> <http://dbpedia.org/ontology/owningOrganisation> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PublicTransitSystem>}", "SerialNumber": "4163", "question": "Where is the headquarters of the public transit system which owns the American Boulevard (Metro Transit station) located ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/American_Boulevard_(Metro_Transit_station)", "label": "American Boulevard (Metro Transit station)"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owningOrganisation"}, {"uri": "http://dbpedia.org/property/headquarters", "label": "headquarters"}, {"uri": "http://dbpedia.org/ontology/PublicTransitSystem", "label": "public transit system"}], "id": "8a38e3ab78b24fbbb14d1cc919014e96"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/membership> <http://dbpedia.org/resource/Bangladesh> . ?x <http://dbpedia.org/property/membership> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "SerialNumber": "4166", "question": "List all the members of the organization whose one of the members is Bangladesh ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bangladesh", "label": "Bangladesh"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/membership", "label": "members"}, {"uri": "http://dbpedia.org/property/membership", "label": "members"}, {"uri": "http://dbpedia.org/ontology/Organisation"}], "id": "ffe42b8531f540398540cdb1b6cb13ca"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/school> <http://dbpedia.org/resource/Michaelhouse> . ?x <http://dbpedia.org/property/school> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RugbyPlayer>}", "SerialNumber": "4170", "question": "List all the school of the rugby player whose one of the school is Michael House ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Michaelhouse", "label": "michael house"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/school", "label": "school"}, {"uri": "http://dbpedia.org/property/school", "label": "school"}, {"uri": "http://dbpedia.org/ontology/RugbyPlayer", "label": "rugby player"}], "id": "d85c374fb7e047cda434efae8462b69b"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/deathCause> <http://dbpedia.org/resource/Suicide> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }", "SerialNumber": "4172", "question": "What is the total number of professions in which someone who has suicided worked?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Suicide", "label": "suicide"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/deathCause", "label": "worked"}, {"uri": "http://dbpedia.org/ontology/occupation", "label": "profession"}], "id": "fda94b922adc4c96852e7800f60f797a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Waitakere_United> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "SerialNumber": "4173", "question": "To which country do the players of Waitakere United belong?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Waitakere_United", "label": "Waitakere United"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/team", "label": "belong"}, {"uri": "http://dbpedia.org/ontology/country", "label": "country"}, {"uri": "http://dbpedia.org/ontology/Athlete", "label": "belong"}], "id": "59100a9ec0e24b988611ea5a66675140"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Operation_Barbarossa> . ?x <http://dbpedia.org/ontology/relation> ?uri  . }", "SerialNumber": "4174", "question": "How many relatives are there of veterans of operation Barbarossa?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Operation_Barbarossa", "label": "operation Barbarossa"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/battle", "label": "veterans"}, {"uri": "http://dbpedia.org/ontology/relation", "label": "veterans"}], "id": "75a241fa2e024a7a95e0108a8b6b66ff"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/O.co_Coliseum> <http://dbpedia.org/ontology/tenant> ?uri  . }", "SerialNumber": "4175", "question": "How many leagues have used the O.co Coliseum?", "entity mapping": [{"uri": "http://dbpedia.org/resource/O.co_Coliseum", "label": "O.co Coliseum"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/tenant", "label": "leagues"}], "id": "5f69f094954f4553a0bd03d14da852d6"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Interplay_Entertainment> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "SerialNumber": "4176", "question": "What kind of games are made by Interplay Entertainment?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Interplay_Entertainment", "label": "Interplay Entertainment"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/publisher", "label": "made"}, {"uri": "http://dbpedia.org/property/genre", "label": "made"}, {"uri": "http://dbpedia.org/ontology/VideoGame", "label": "games"}], "id": "23a0e9e271d44ba286716b46fd3eb912"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/P\u014dmare_II> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }", "SerialNumber": "4178", "question": "Where did the spouse of pmare ii die?", "entity mapping": [{"uri": "http://dbpedia.org/resource/P\u014dmare_II", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/spouse", "label": "spouse"}, {"uri": "http://dbpedia.org/ontology/deathPlace", "label": "die"}], "id": "46880d365fbe4d54b1b965e5b5e1bb77"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cherry_Chevapravatdumrong> <http://dbpedia.org/ontology/residence> ?uri. <http://dbpedia.org/resource/Daisi_Pollard> <http://dbpedia.org/ontology/residence> ?uri . }", "SerialNumber": "4180", "question": "Where do cherry chevapravatdumrong and daisi pollard both live?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cherry_Chevapravatdumrong", "label": "cherry chevapravatdumrong"}, {"uri": "http://dbpedia.org/resource/Daisi_Pollard", "label": "daisi pollard"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/residence", "label": "live"}, {"uri": "http://dbpedia.org/ontology/residence", "label": "live"}], "id": "eb285e418d9641bcb6ba0c86c444d355"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/London>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "SerialNumber": "4185", "question": "How many bands are based in London?", "entity mapping": [{"uri": "http://dbpedia.org/resource/London", "label": "London"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/hometown", "label": "based"}, {"uri": "http://dbpedia.org/ontology/Band", "label": "band"}], "id": "431e3662c6994776a8f35a3d3eb26027"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cornell_University_Press> <http://dbpedia.org/ontology/parentCompany> ?uri } ", "SerialNumber": "4187", "question": "To which educational institute does Cornell University Press belong to?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cornell_University_Press", "label": "Cornell University Press"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/parentCompany", "label": "belong"}], "id": "910a28df8fc54d3cbd74bc9e7923cc70"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Robert_Boyle> <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Chemistry> }", "SerialNumber": "4188", "question": "Is Robert Boyle a chemist?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Boyle", "label": "Robert Boyle"}, {"uri": "http://dbpedia.org/resource/Chemistry", "label": "chemist"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/field", "label": "chemist"}], "id": "f1bd78d345634e9d9d237a044ba8599b"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Live_in_Detroit,_MI> <http://dbpedia.org/ontology/recordedIn> ?uri. <http://dbpedia.org/resource/Ken_Holland> <http://dbpedia.org/ontology/residence> ?uri} ", "SerialNumber": "4189", "question": "What city was recorded in Live in detroit which is also the official residence of ken Holland ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Live_in_Detroit,_MI", "label": "detroit live"}, {"uri": "http://dbpedia.org/resource/Ken_Holland", "label": "ken Holland"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/recordedIn", "label": "recorded in"}, {"uri": "http://dbpedia.org/ontology/residence", "label": "residence"}], "id": "f6df767b04b1431ab3fbfb73d45d7c56"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Benjamin_Pulleyn>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "SerialNumber": "4190", "question": "Which famous physicist was academically advised by Benjamin Pulleyn?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Benjamin_Pulleyn", "label": "Benjamin Pulleyn"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/academicAdvisor", "label": "advised"}, {"uri": "http://dbpedia.org/ontology/Scientist", "label": "advised"}], "id": "9f90dd10b77a48d1a9a361b34af9145d"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Beckler_River> <http://dbpedia.org/ontology/district> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>}", "SerialNumber": "4191", "question": "What is the county seat of the district through which the Beckler River flows?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Beckler_River", "label": "Beckler River"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/district", "label": "district"}, {"uri": "http://dbpedia.org/ontology/countySeat", "label": "county seat"}, {"uri": "http://dbpedia.org/ontology/AdministrativeRegion", "label": "flows"}], "id": "3e34613e0d93409d81b5a5ed8d0736e8"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Mixed-sex_education> . ?x <http://dbpedia.org/ontology/localAuthority> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}", "SerialNumber": "4193", "question": "Name some local authorities of schools which have a mixed gender education system?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mixed-sex_education", "label": "education mixed"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/gender", "label": "gender"}, {"uri": "http://dbpedia.org/ontology/localAuthority", "label": "authorities"}, {"uri": "http://dbpedia.org/ontology/School", "label": "school"}], "id": "a64b3098de204f9fa741346a1da0d672"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Babylon_5:_The_Lost_Tales> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "4195", "question": "Name the TV shows related to Babylon 5: The Lost Tales and is aired on Prime TIme Entertainment Networks ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Babylon_5:_The_Lost_Tales", "label": "Babylon 5: The Lost Tales"}, {"uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network", "label": "Prime TIme Entertainment Network"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/related", "label": "related"}, {"uri": "http://dbpedia.org/ontology/network", "label": "Network"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "aired"}], "id": "eee8cd2ce7864cc18d521259b6385d55"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Christianity> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }", "SerialNumber": "4201", "question": "What have some famous Christians died of?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Christianity", "label": "Christians"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/religion", "label": "died"}, {"uri": "http://dbpedia.org/ontology/deathCause", "label": "died"}], "id": "97750e1c2bda4a70a98f6a3d3fde3cc5"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/KOMC_(AM)> <http://dbpedia.org/ontology/programmeFormat> <http://dbpedia.org/resource/Gospel_music> }", "SerialNumber": "4202", "question": "Does KOMC play Gospel Music?", "entity mapping": [{"uri": "http://dbpedia.org/resource/KOMC_(AM)", "label": "KOMC"}, {"uri": "http://dbpedia.org/resource/Gospel_music", "label": "Gospel Music"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/programmeFormat"}], "id": "efac36cec91343a9b9f1ede98613d8b2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/Emacs_Lisp> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }", "SerialNumber": "4204", "question": "What are some developers which use Emacs Lisp in their projects?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Emacs_Lisp", "label": "Emacs Lisp"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/programmingLanguage", "label": "projects"}, {"uri": "http://dbpedia.org/ontology/developer", "label": "developer"}], "id": "9d830815b20d441b91c44bc90f8e9dc0"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_2:_Judgment_Day> . ?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Josh_Friedman>  . }", "SerialNumber": "4208", "question": "Which creation of Josh Friedman was portrayed in Terminator 2 ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Terminator_2:_Judgment_Day", "label": "terminator"}, {"uri": "http://dbpedia.org/resource/Josh_Friedman", "label": "Josh Friedman"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/portrayer", "label": "portrayed"}, {"uri": "http://dbpedia.org/property/creator", "label": "Terminator"}], "id": "fe5a0610c6e741c2a1b2f059c072dfbf"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Justin_Trudeau> . ?uri <http://dbpedia.org/ontology/majorShrine> ?x  . }", "SerialNumber": "4209", "question": "Whose shrines are in a place governed by Justin Trudeau?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Justin_Trudeau", "label": "Justin Trudeau"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/leaderName", "label": "governed"}, {"uri": "http://dbpedia.org/ontology/majorShrine", "label": "shrines"}], "id": "f897b6b86feb462eab03a36bc0502824"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Graham_Holdings_Company> . ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Iowa>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "SerialNumber": "4213", "question": "List the uni. having affiliation with Graham Holding Company and have a campus in Iowa ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Graham_Holdings_Company", "label": "holding company graham"}, {"uri": "http://dbpedia.org/resource/Iowa", "label": "Iowa"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/affiliations", "label": "affiliation"}, {"uri": "http://dbpedia.org/ontology/campus", "label": "campus"}, {"uri": "http://dbpedia.org/ontology/University", "label": "Company"}], "id": "efb6271731a0486c9038f72e14ad2143"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/workInstitutions> <http://dbpedia.org/resource/American_College_of_Surgeons> . ?x <http://dbpedia.org/ontology/education> ?uri  . }", "SerialNumber": "4216", "question": "Where did the employees of American College of Surgeons study?", "entity mapping": [{"uri": "http://dbpedia.org/resource/American_College_of_Surgeons", "label": "American College of Surgeons"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/workInstitutions", "label": "study"}, {"uri": "http://dbpedia.org/ontology/education", "label": "study"}], "id": "4ef28f32c3dc4c17a10aaed5ef42c084"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide> . ?x <http://dbpedia.org/property/address> ?uri  . }", "SerialNumber": "4217", "question": "In how many different places do Starwood hotels and resorts worldwide operate?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide", "label": "Starwood hotels and resorts worldwide"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/operator", "label": "operate"}, {"uri": "http://dbpedia.org/property/address", "label": "operate"}], "id": "e96091eb6e334719adfadbe72dea01c8"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2006\u201307_Middlesbrough_F.C._season> <http://dbpedia.org/ontology/manager> ?uri. <http://dbpedia.org/resource/England_national_under-21_football_team> <http://dbpedia.org/property/coach> ?uri} ", "SerialNumber": "4220", "question": "Who was the head coach of Middlesbrough F.C. season 2006-7 also the coach of England national under 21 footbal team ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2006\u201307_Middlesbrough_F.C._season", "label": "middlesbrough season"}, {"uri": "http://dbpedia.org/resource/England_national_under-21_football_team", "label": "national footbal england under team"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/manager", "label": "coach"}, {"uri": "http://dbpedia.org/property/coach", "label": "coach"}], "id": "cedb96883e1c403a8e3e85521917b919"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/San_Francisco_Giants>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "SerialNumber": "4222", "question": "How many players are in the San Francisco Giants?", "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Francisco_Giants", "label": "San Francisco Giants"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/team", "label": "players"}, {"uri": "http://dbpedia.org/ontology/Athlete", "label": "players"}], "id": "6c08066f4c4a468eabda070b76f407e2"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Aghasalim_Childagh> <http://dbpedia.org/property/deathDate> ?uri } ", "SerialNumber": "4226", "question": "Where did Aghasalim Childagh die?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Aghasalim_Childagh", "label": "Aghasalim Childagh"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/deathDate", "label": "die"}], "id": "51d0d9be06c244229efab43ae8e9d45d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco> . ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Haight-Ashbury> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "4228", "question": "Name the office holder whose constituency are Duboce Triangle and Haight-Ashbury ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco", "label": "triangle duboce"}, {"uri": "http://dbpedia.org/resource/Haight-Ashbury", "label": "Haight-Ashbury"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/constituency", "label": "constituency"}, {"uri": "http://dbpedia.org/property/constituency", "label": "constituency"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "office holder"}], "id": "8b82edef302d47feaa60aaf940fbf225"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Daniel_Waters_(screenwriter)> . ?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Tim_Burton>  . }", "SerialNumber": "4232", "question": "Which Tim Birton's movie has a screenplay by Daniel Waters ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Daniel_Waters_(screenwriter)", "label": "Daniel Waters"}, {"uri": "http://dbpedia.org/resource/Tim_Burton", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/screenplay", "label": "screenplay"}, {"uri": "http://dbpedia.org/property/director", "label": "movie"}], "id": "16be3ab972a8420cb9d1ab24a7d7ee5b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Peter_Grauer> <http://dbpedia.org/property/occupation> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}", "SerialNumber": "4233", "question": "Who is the stock holder of the bank where  Peter Grauer works  ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Peter_Grauer", "label": "Peter Grauer"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/occupation", "label": "work"}, {"uri": "http://dbpedia.org/property/owner", "label": "holder"}, {"uri": "http://dbpedia.org/ontology/Bank", "label": "bank"}], "id": "25d2a7baa3b14844812b55facf7b52e1"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Sylvain_L\u00e9vi> . ?x <http://dbpedia.org/property/fields> ?uri  . }", "SerialNumber": "4234", "question": "In which areas did the pupils of Sylvain Levi work?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sylvain_L\u00e9vi", "label": "Sylvain Levi"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/academicAdvisor", "label": "work"}, {"uri": "http://dbpedia.org/property/fields", "label": "area"}], "id": "d353e53adbc14a819a6b8cb914e9288f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/ethnicity> <http://dbpedia.org/resource/Puerto_Rico> . ?x <http://dbpedia.org/property/awards> ?uri  . }", "SerialNumber": "4235", "question": "Which awards have Puerto Ricons won?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Puerto_Rico", "label": "Puerto Rico"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/ethnicity", "label": "won"}, {"uri": "http://dbpedia.org/property/awards", "label": "awards"}], "id": "c3d6509c0674423e8ae5a2a25f581062"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/Selangor> . ?x <http://dbpedia.org/property/hubs> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}", "SerialNumber": "4236", "question": "Name all the hubs of the airlines whose one of the hubs is Selangir ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Selangor", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/hubs", "label": "hubs"}, {"uri": "http://dbpedia.org/property/hubs", "label": "hubs"}, {"uri": "http://dbpedia.org/ontology/Airline", "label": "airline"}], "id": "60dc7ef22ac346bc876c2956344ebbbc"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Y._S._Rajasekhara_Reddy> . ?x <http://dbpedia.org/ontology/affiliation> ?uri  . }", "SerialNumber": "4238", "question": "How many parties have come in power in elections where Y. S. Rajasekhara Reddy won?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Y._S._Rajasekhara_Reddy", "label": "Rajasekhara Reddy"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/leader", "label": "won"}, {"uri": "http://dbpedia.org/ontology/affiliation", "label": "won"}], "id": "e6f50ea5f26b41a2bbee70ecae25690d"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Non-governmental_organization> . ?x <http://dbpedia.org/property/purpose> ?uri  . }", "SerialNumber": "4242", "question": "What do typically NGOs work for?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Non-governmental_organization", "label": "NGOs"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/type", "label": "work"}, {"uri": "http://dbpedia.org/property/purpose", "label": "work"}], "id": "285b636ff13c48e1bcd7306d6a9b680a"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Lung_cancer> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}", "SerialNumber": "4245", "question": "How many awards have been given to the ones who died of lung cancer?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lung_cancer", "label": "lung cancer"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/deathCause", "label": "died"}, {"uri": "http://dbpedia.org/ontology/award", "label": "awards"}, {"uri": "http://dbpedia.org/ontology/Award", "label": "awards"}], "id": "7fbcbc8dbf064a76a60ec0159eeb54f0"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network> . ?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Douglas_Netter>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "4246", "question": "Which show's network is Prime time Entertainment and has Douglas Netter as executive producer ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network", "label": "entertainment network prime time"}, {"uri": "http://dbpedia.org/resource/Douglas_Netter", "label": "Douglas Netter"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/network", "label": "network"}, {"uri": "http://dbpedia.org/ontology/executiveProducer", "label": "executive producer"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show's"}], "id": "d12e9dcf5e3944eb88c56c3e6cdab8ad"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Upper_Neretva> <http://dbpedia.org/ontology/riverMouth> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "SerialNumber": "4247", "question": "How many countries surround the sea into which the Upper Neratva flow?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Upper_Neretva", "label": "Upper Neratva"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/riverMouth", "label": "flow"}, {"uri": "http://dbpedia.org/ontology/country", "label": "in"}, {"uri": "http://dbpedia.org/ontology/Sea", "label": "sea"}], "id": "7b3af4a72c904d328c38aa676e5e556d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Johnny_Cash> . ?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Kris_Kristofferson> . }", "SerialNumber": "4248", "question": "Who collaborated with Johnny Cash and Kris Kristofferson ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Johnny_Cash", "label": "Johnny Cash"}, {"uri": "http://dbpedia.org/resource/Kris_Kristofferson", "label": "Kris Kristofferson"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/associatedActs", "label": "collaborated"}, {"uri": "http://dbpedia.org/property/associatedActs", "label": "collaborated"}], "id": "0ba454c0de9a4184b651f6e7a8d17307"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_&_Metabolism> <http://dbpedia.org/ontology/academicDiscipline> <http://dbpedia.org/resource/Brain> }", "SerialNumber": "4249", "question": "Is the Journal of Cerebral Blood Flow and Metabolism about Brains?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_&_Metabolism", "label": "metabolism cerebral journal blood"}, {"uri": "http://dbpedia.org/resource/Brain", "label": "Brain"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/academicDiscipline", "label": "Metabolism"}], "id": "d8c7892603d64401909742551945fd10"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Shawnee> } ", "SerialNumber": "4252", "question": "list some shawnee people?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Shawnee", "label": "shawnee people"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/nationality"}], "id": "8c154ef0c2574f25bdfcee184bd120a9"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/honours> <http://dbpedia.org/resource/National_Museum_of_Racing_and_Hall_of_Fame> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "SerialNumber": "4253", "question": "Count the birthplaces of recepients of the National Museum of Racing and Hall of Fame.", "entity mapping": [{"uri": "http://dbpedia.org/resource/National_Museum_of_Racing_and_Hall_of_Fame", "label": "National Museum of Racing and Hall of Fame"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/honours"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "birthplace"}, {"uri": "http://dbpedia.org/ontology/Place", "label": "place"}], "id": "705316a27c694cf5ac53ee6bfd9bbed7"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/'03_Bonnie_&_Clyde> <http://dbpedia.org/ontology/writer> ?x . ?x <http://dbpedia.org/ontology/associatedBand> ?uri  . }", "SerialNumber": "4259", "question": "List down all the bands to which the writers of 03 Bonnie & Clyde are associated?", "entity mapping": [{"uri": "http://dbpedia.org/resource/'03_Bonnie_&_Clyde", "label": "bonnie clyde"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/writer", "label": "writers"}, {"uri": "http://dbpedia.org/ontology/associatedBand", "label": "associated"}], "id": "ec5f6894f5484d34a2f951ca88436084"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pandaruan_Bridge> <http://dbpedia.org/ontology/maintainedBy> ?uri. <http://dbpedia.org/resource/Malaysia_Junior_Hockey_League> <http://dbpedia.org/ontology/country> ?uri} ", "SerialNumber": "4261", "question": "Which mainter of Pandaruan Bridge is also the land of Malaysia junior Hockey league ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pandaruan_Bridge", "label": "Pandaruan Bridge"}, {"uri": "http://dbpedia.org/resource/Malaysia_Junior_Hockey_League", "label": "Malaysia junior Hockey league"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/maintainedBy"}, {"uri": "http://dbpedia.org/ontology/country", "label": "land"}], "id": "b03b5f24df79423eaa4cf91798ceaa81"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Galician_Wikipedia> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/German_Wikipedia> <http://dbpedia.org/ontology/owner> ?uri . }", "SerialNumber": "4262", "question": "Organization holding stocks of  Galician and German wikipedias?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Galician_Wikipedia", "label": ""}, {"uri": "http://dbpedia.org/resource/German_Wikipedia", "label": "German wikipedia"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/owner", "label": "Galician"}, {"uri": "http://dbpedia.org/ontology/owner", "label": "Galician"}], "id": "5b4bb78a68b94d218437f69956f6fba9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Wiktionary> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/ontology/board> ?uri  . }", "SerialNumber": "4264", "question": "In which companies boards do the writers of Wikitionary belong?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Wiktionary", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/author", "label": "writers"}, {"uri": "http://dbpedia.org/ontology/board", "label": "board"}], "id": "dc3368caf7294bbea8b07fd01859706d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Monty_Python> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "4268", "question": "Which Monty Python's movie is distributed by Cinema International Corporation ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Monty_Python", "label": "Monty Python"}, {"uri": "http://dbpedia.org/resource/Cinema_International_Corporation", "label": "Cinema International Corporation"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/writer"}, {"uri": "http://dbpedia.org/property/distributor", "label": "distributed by"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "f1363bc48be643bd99b68fa31d8b0d19"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/American_Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}", "SerialNumber": "4272", "question": "Count the number of cities around the American Mediterranean Sea?", "entity mapping": [{"uri": "http://dbpedia.org/resource/American_Mediterranean_Sea", "label": "American Mediterranean Sea"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/cities", "label": "cities"}, {"uri": "http://dbpedia.org/ontology/City", "label": "number"}], "id": "82ce66b7bf8f4a0dae15269c66cc2753"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/University_of_California,_Santa_Cruz>  . }", "SerialNumber": "4273", "question": "What are some employees of Uni of California, santa cruz?", "entity mapping": [{"uri": "http://dbpedia.org/resource/University_of_California,_Santa_Cruz", "label": "California"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/employer", "label": "cruz"}], "id": "3412c129527f4e78a14421f84b364adf"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/PrivateCore> } ", "SerialNumber": "4274", "question": "What is the parent company of PrivateCore?", "entity mapping": [{"uri": "http://dbpedia.org/resource/PrivateCore", "label": "PrivateCore"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/subsidiary", "label": "company"}], "id": "68d3363523454c20b8b113b8ca87eaed"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Bellator_MMA:_Season_Eleven> <http://dbpedia.org/property/city> ?uri  . }", "SerialNumber": "4275", "question": "Over how many cities did the Bellaton MMA, Season 11 take place?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bellator_MMA:_Season_Eleven", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/city", "label": "place"}], "id": "3e719418e0ae4a06bc1819295c66394e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Toronto> . ?uri <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Mike_Babcock>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HockeyTeam>}", "SerialNumber": "4279", "question": "Name the hockey team which has head coach as Mike babcock and is based in Toronto ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto", "label": "Toronto"}, {"uri": "http://dbpedia.org/resource/Mike_Babcock", "label": "Mike babcock"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locationCity", "label": "based"}, {"uri": "http://dbpedia.org/property/headCoach", "label": "head coach"}, {"uri": "http://dbpedia.org/ontology/HockeyTeam", "label": "hockey team"}], "id": "7657e13a3b7e4ab58937e184cef0f93d"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mike_McCurry_(press_secretary)> <http://dbpedia.org/ontology/president> ?uri. <http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000> <http://dbpedia.org/ontology/incumbent> ?uri} ", "SerialNumber": "4280", "question": "Which incumbent of Al Gore presidential campaign wass also the president of Mike McCurry ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mike_McCurry_(press_secretary)", "label": "Mike McCurry"}, {"uri": "http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000", "label": "presidential campaign gore"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/president", "label": "president"}, {"uri": "http://dbpedia.org/ontology/incumbent", "label": "incumbent"}], "id": "b630eb72fd3f4ca194622759e3fdeb79"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pierre_R._Graham> <http://dbpedia.org/property/branch> ?uri. <http://dbpedia.org/resource/Edwin_F._Hunter> <http://dbpedia.org/property/branch> ?uri . }", "SerialNumber": "4283", "question": "Where in the us military did pierre r graham and edwin f hunter work?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Pierre_R._Graham", "label": "pierre graham"}, {"uri": "http://dbpedia.org/resource/Edwin_F._Hunter", "label": "hunter edwin"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/branch", "label": "work"}, {"uri": "http://dbpedia.org/property/branch", "label": "work"}], "id": "e5477236f4194919a7df41836fd59a7b"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/school> <http://dbpedia.org/resource/Penn_State_Nittany_Lions_football> . ?x <http://dbpedia.org/property/highschool> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}", "SerialNumber": "4285", "question": "In how many different highschools have people schooled in Penn State Nittany Lions football studied?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Penn_State_Nittany_Lions_football", "label": "Penn State Nittany Lions football"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/school", "label": "school"}, {"uri": "http://dbpedia.org/property/highschool", "label": "highschool"}, {"uri": "http://dbpedia.org/ontology/EducationalInstitution", "label": "studied"}], "id": "f012a543e72c4aea922b35c177311d35"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Sony_Corporation_shareholders_and_subsidiaries> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }", "SerialNumber": "4286", "question": "What are some products of the the company whose subsidiary is Sony Corp shareholders and subsidies?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony_Corporation_shareholders_and_subsidiaries", "label": "Sony Corp"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/subsidiary", "label": "subsidiary"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "subsidies"}], "id": "28d65bdcbc9a48288e72664ab13c4ddc"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sire> <http://dbpedia.org/resource/Mon_Capitaine> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}", "SerialNumber": "4292", "question": "In which races did the horses of Mon Capitaine take part?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mon_Capitaine", "label": "Mon Capitaine"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sire", "label": "part"}, {"uri": "http://dbpedia.org/property/race", "label": "race"}, {"uri": "http://dbpedia.org/ontology/Horse", "label": "horse"}], "id": "12e72b1d62c843d09c2b6f02cab2cd04"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_2:_Judgment_Day> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Josh_Friedman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "SerialNumber": "4298", "question": "Which fictional character portrayed in Terminator 2: Judgment Day is painted by Josh Friedman?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Terminator_2:_Judgment_Day", "label": "Terminator 2: Judgment Day"}, {"uri": "http://dbpedia.org/resource/Josh_Friedman", "label": "Josh Friedman"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/portrayer", "label": "portrayed"}, {"uri": "http://dbpedia.org/ontology/creator"}, {"uri": "http://dbpedia.org/ontology/FictionalCharacter", "label": "fictional character"}], "id": "380331c1f63e4822be0531e79d89d530"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Marion_Dufresne_(1995)> <http://dbpedia.org/ontology/operator> ?x . ?x <http://dbpedia.org/ontology/currency> ?uri  . }", "SerialNumber": "4301", "question": "What is the base currency of the country which operates the Marion Dufresne?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Marion_Dufresne_(1995)", "label": "Marion Dufresne"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/operator", "label": "operates"}, {"uri": "http://dbpedia.org/ontology/currency", "label": "base currency"}], "id": "e887507cbcda4bd8956a82825a4a84ac"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/property/discipline> ?uri  . }", "SerialNumber": "4302", "question": "Journals of how many fields can be found in US?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": "US"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/country", "label": "found"}, {"uri": "http://dbpedia.org/property/discipline", "label": "fields"}], "id": "6f8cdbe8fb024dcbb7da14e008bca23c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Saint-Amand-en-Puisaye> . ?x <http://dbpedia.org/property/knownFor> ?uri  . }", "SerialNumber": "4307", "question": "People born in Saint-Amand-en-Puisaye are famous for what things ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Saint-Amand-en-Puisaye", "label": "Saint-Amand-en-Puisaye"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/birthPlace", "label": "born in"}, {"uri": "http://dbpedia.org/property/knownFor", "label": "things"}], "id": "88fe848accd14ee5a63e3264234651e8"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/broadcastArea> <http://dbpedia.org/resource/Washington,_D.C.> . ?x <http://dbpedia.org/ontology/programmeFormat> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}", "SerialNumber": "4308", "question": "Radios on what topics can be tuned in to in Washington DC?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Washington,_D.C.", "label": "Washington"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/broadcastArea", "label": "DC"}, {"uri": "http://dbpedia.org/ontology/programmeFormat"}, {"uri": "http://dbpedia.org/ontology/RadioStation", "label": "radios"}], "id": "4dbb409284b34e848777db3a91349022"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Winston_Bryant> <http://dbpedia.org/property/governor> ?uri } ", "SerialNumber": "4309", "question": "List the goverener of Winston Bryant?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Winston_Bryant", "label": "Winston Bryant"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/governor"}], "id": "5088b38a69ba4f1f9f7c17c493dbb67e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Celluloid_Records> . ?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Africa_'70_(band)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "SerialNumber": "4311", "question": "Name the musician who was given label by Celluloid Records and has been associated with Africa'70 ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Celluloid_Records", "label": "Celluloid Records"}, {"uri": "http://dbpedia.org/resource/Africa_'70_(band)", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/label", "label": "label"}, {"uri": "http://dbpedia.org/ontology/associatedMusicalArtist", "label": "associated"}, {"uri": "http://dbpedia.org/ontology/MusicalArtist", "label": "musician"}], "id": "aa54fbc2c1df4f47af6e7a074f77535f"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)> <http://dbpedia.org/property/firstAired> ?uri. <http://dbpedia.org/resource/Sergei_Ovchinnikov_(volleyball)> <http://dbpedia.org/property/placeOfDeath> ?uri} ", "SerialNumber": "4312", "question": "What is the country where Sergei Ovchinnikov the volleyball player die, and Gumus was first aired ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)", "label": ""}, {"uri": "http://dbpedia.org/resource/Sergei_Ovchinnikov_(volleyball)", "label": "Sergei Ovchinnikov"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/firstAired", "label": "first aired"}, {"uri": "http://dbpedia.org/property/placeOfDeath"}], "id": "a74c7e7aafe049f6b82e092e907da465"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Walson_Augustin> <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/Brothers_Union> }", "SerialNumber": "4315", "question": "Does Walson Augustin play for the Brothers Union?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Walson_Augustin", "label": "Walson Augustin"}, {"uri": "http://dbpedia.org/resource/Brothers_Union", "label": "Brothers Union"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentclub"}], "id": "f08511a93db54c32a2dcbc4a4f4d74d4"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }", "SerialNumber": "4316", "question": "What are the prizes won by the animator of The Skeleton Dance ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Skeleton_Dance", "label": "The Skeleton Dance"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/animator", "label": "animator"}, {"uri": "http://dbpedia.org/ontology/award", "label": "won"}], "id": "216cc8eb3adc4058b3dae6dc542bc2cc"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Swedish_language> . ?uri <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}", "SerialNumber": "4317", "question": "List the Swedish newspaper headquarted in Stockholm ? ", "entity mapping": [{"uri": "http://dbpedia.org/resource/Swedish_language", "label": "swedish"}, {"uri": "http://dbpedia.org/resource/Stockholm", "label": "Stockholm"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/language", "label": "Swedish"}, {"uri": "http://dbpedia.org/property/headquarters", "label": "headquarted"}, {"uri": "http://dbpedia.org/ontology/Newspaper", "label": "newspaper"}], "id": "12811fd9d1ea480ca482f1b7a6f61ea8"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/magazine> <http://dbpedia.org/resource/Jump_Square> . ?x <http://dbpedia.org/property/author> ?uri  . }", "SerialNumber": "4323", "question": "How many different writers have written for Jump Square?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jump_Square", "label": "Jump Square"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/magazine", "label": "written"}, {"uri": "http://dbpedia.org/property/author", "label": "writers"}], "id": "5d24a8016b944ebd949de53d198f4823"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Cape_Town>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "4326", "question": "How many politicians reside in Cape Town?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cape_Town", "label": "Cape Town"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/residence", "label": "reside"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "politicians"}], "id": "2067b624202249069e8e6fa28ea3b460"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Masahiko_Minami> . ?x <http://dbpedia.org/ontology/author> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Manga>}", "SerialNumber": "4327", "question": "Who wrote the mangas produced by Masahike Minami?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Masahiko_Minami", "label": "Masahike Minami"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/producer", "label": "produced"}, {"uri": "http://dbpedia.org/ontology/author", "label": "wrote"}, {"uri": "http://dbpedia.org/ontology/Manga", "label": "manga"}], "id": "08222072602a432fb36950cb1d93428a"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Oakland_Athletics> . ?x <http://dbpedia.org/property/architect> ?uri  . }", "SerialNumber": "4329", "question": "How many architects are there who have made something used by Oakland athletics?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Oakland_Athletics", "label": "Oakland athletics"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/tenant", "label": "made"}, {"uri": "http://dbpedia.org/property/architect", "label": "architect"}], "id": "acbfdfd774604545abda627572f18dca"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/titles> <http://dbpedia.org/resource/Doctor_of_the_Church> . ?x <http://dbpedia.org/ontology/canonizedBy> ?uri  . }", "SerialNumber": "4330", "question": "Who has canonized someone who's a doctor of the church?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Doctor_of_the_Church", "label": "doctor of the church"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/titles", "label": "who's"}, {"uri": "http://dbpedia.org/ontology/canonizedBy", "label": "canonized"}], "id": "9cf295983ac2497eaa90acc50a0e9839"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Ch\u00eane-Bougeries>  . }", "SerialNumber": "4335", "question": "What municipalities are adjacent to Chne-Bougeries?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ch\u00eane-Bougeries", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/neighboringMunicipalities", "label": "municipalities"}], "id": "3bf63415902341c8804e4053a565b1cc"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Baikal_Mountains> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Laptev_Sea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "4338", "question": "Which river's source mountain is Baikal Mountains and is located in Laptev Sea ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Baikal_Mountains", "label": "Baikal Mountains"}, {"uri": "http://dbpedia.org/resource/Laptev_Sea", "label": "Laptev Sea"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourceMountain", "label": "source mountain"}, {"uri": "http://dbpedia.org/property/mouthLocation", "label": "located"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "6597dba043f3446ab99c8ec65686e304"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/EMI> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}", "SerialNumber": "4339", "question": "What are some musical artists associated with the ones signed up with EMI?", "entity mapping": [{"uri": "http://dbpedia.org/resource/EMI", "label": "EMI"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/recordLabel", "label": "signed"}, {"uri": "http://dbpedia.org/ontology/associatedMusicalArtist", "label": "associated musical"}, {"uri": "http://dbpedia.org/ontology/MusicalArtist", "label": "musical artist"}], "id": "c1be660170c343e1a9cfe8079b722267"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Sierra_Nevada_(U.S.)> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . }", "SerialNumber": "4343", "question": "Give me the list of people who scaled mountains in Sierra Nevada?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)", "label": "Sierra Nevada"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/mountainRange", "label": "mountains"}, {"uri": "http://dbpedia.org/ontology/firstAscentPerson"}], "id": "b9af1aab1cdb4df3b8aad53370c82fd7"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Suburb> . ?uri <http://dbpedia.org/property/education> ?x  . }", "SerialNumber": "4344", "question": "Who studied in universities located in suburbs?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Suburb", "label": "suburb"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/campus", "label": "located"}, {"uri": "http://dbpedia.org/property/education", "label": "located"}], "id": "de004bcd703247ab981d0d8784c0b7e0"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Reading,_Berkshire> . ?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Southend-on-Sea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "4345", "question": "Name the river with Readin, Brekshire in its path and mouth place is Sothend-on-sea ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Reading,_Berkshire", "label": ""}, {"uri": "http://dbpedia.org/resource/Southend-on-Sea", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/city", "label": "in"}, {"uri": "http://dbpedia.org/ontology/mouthPlace", "label": "mouth place"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "ce0a65de462c4482be2bcc4c57c67e39"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Lovelace_Medal> . ?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility> . }", "SerialNumber": "4355", "question": "Who  won the Lovelace Medal and the Norbert Wiener Award for Social and Professional Responsibility?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lovelace_Medal", "label": "Lovelace Medal"}, {"uri": "http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility", "label": "Norbert Wiener Award for Social and Professional Responsibility"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/prizes", "label": "won"}, {"uri": "http://dbpedia.org/property/prizes", "label": "won"}], "id": "7d3aa7abddce4885924e51a17c2b5e0d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "4357", "question": "Which TV show's setting is in Massachusetts and is the subsequent work of Fraiser ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Frasier", "label": ""}, {"uri": "http://dbpedia.org/resource/Massachusetts", "label": "Massachusetts"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/subsequentWork", "label": "subsequent work"}, {"uri": "http://dbpedia.org/ontology/location", "label": "Fraiser"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show's"}], "id": "179e610843e145489491954c3a91b179"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Raymond_Conner> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_CH-47_Chinook>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "4361", "question": "Name the company whose key person is Raymond Conner and produces Boeing CH-47 Chinook?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Raymond_Conner", "label": "Raymond Conner"}, {"uri": "http://dbpedia.org/resource/Boeing_CH-47_Chinook", "label": "Boeing CH-47 Chinook"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/keyPeople", "label": "key"}, {"uri": "http://dbpedia.org/property/products", "label": "produces"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "59b915743bb142afb10240174db2a7d0"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/Filipinos>  . }", "SerialNumber": "4362", "question": "How many famous people are from the Filipinos?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Filipinos", "label": "Filipinos"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/stateOfOrigin"}], "id": "1f6af3eda6964bc7a5230797aaa04e0f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Balanidae> . ?x <http://dbpedia.org/ontology/binomialAuthority> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Crustacean>}", "SerialNumber": "4365", "question": "Who is considered to be the deciding person when it comes to crustaceans from the Balanidae family?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Balanidae", "label": "Balanidae"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/family", "label": "family"}, {"uri": "http://dbpedia.org/ontology/binomialAuthority", "label": "person"}, {"uri": "http://dbpedia.org/ontology/Crustacean", "label": "crustacean"}], "id": "4803820b51af42549d4d664118ac2d00"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Tandem_Computers> . ?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Jim_Harris_(entrepreneur)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "4369", "question": "Name the subsidary of Tandem Computers which was founded by Jim Harris ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tandem_Computers", "label": "Tandem Computers"}, {"uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)", "label": "Jim Harris"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/subsidiary", "label": "subsidary"}, {"uri": "http://dbpedia.org/ontology/foundedBy", "label": "was founded by"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "subsidary"}], "id": "0e868d8761e84ba0981c4780e8fd572f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Kelly_Osbourne> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ozzy_Osbourne> . }", "SerialNumber": "4371", "question": "Who is  related to Kelly Osbourne & Ozzy Osbourne?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kelly_Osbourne", "label": "Kelly Osbourne"}, {"uri": "http://dbpedia.org/resource/Ozzy_Osbourne", "label": "Ozzy Osbourne"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/relatives", "label": "related"}, {"uri": "http://dbpedia.org/property/relatives", "label": "related"}], "id": "53694c0e5c2548419756478331137c13"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Louisiana> . ?x <http://dbpedia.org/property/knownFor> ?uri  . }", "SerialNumber": "4376", "question": "What are some things people born in Louisiana are famous for?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Louisiana", "label": "Louisiana"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBirth"}, {"uri": "http://dbpedia.org/property/knownFor", "label": "famous"}], "id": "7b6a1325fab14f1c91fb9c24f98be16c"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> <http://dbpedia.org/resource/Buddhism> }", "SerialNumber": "4377", "question": "Is Neungin High school a buddhist school?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Neungin_High_School", "label": "Neungin High school"}, {"uri": "http://dbpedia.org/resource/Buddhism", "label": "buddhist"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/religiousAffiliation", "label": "school"}], "id": "c51d1f39ce0e4040be9f32af0eefad06"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/arena> <http://dbpedia.org/resource/Bankers_Life_Fieldhouse> . ?uri <http://dbpedia.org/property/team> ?x  . }", "SerialNumber": "4379", "question": "How many people have played for the ones who own the stadium of Bankers Life Fieldhouse?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bankers_Life_Fieldhouse", "label": "Bankers Life Fieldhouse"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/arena", "label": "stadium"}, {"uri": "http://dbpedia.org/property/team", "label": "stadium"}], "id": "c0ee1e99d29e4deb86fc700898d5bed5"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Raoul_Magrin-Vernerey> <http://dbpedia.org/property/battles> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "4381", "question": "Count the battles fought by Raoul Magrin-Vernerey?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Raoul_Magrin-Vernerey", "label": "Raoul Magrin-Vernerey"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/battles", "label": "battles"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "fought"}], "id": "074f740dbbf64210b7a84f51d6f9e6bd"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Harry_Harlow>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "4383", "question": "Who are the people whose phD advisor was Harry Harlow?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Harry_Harlow", "label": "Harry Harlow"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/doctoralAdvisor", "label": "phD advisor"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "a0360818041d40528ccba0161760b180"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/New_York_City> . ?uri <http://dbpedia.org/ontology/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "4386", "question": "Which sitcoms are made by a company headquartered in NYC?", "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_City", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/headquarter", "label": "headquarter"}, {"uri": "http://dbpedia.org/ontology/company", "label": "company"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "NYC"}], "id": "21af0cba33be4e3a978696b579445972"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/countySeat> <http://dbpedia.org/resource/Heathsville,_Virginia> . ?uri <http://dbpedia.org/property/mouthLocation> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "4389", "question": "Which river starts from the county seat of Heathsville, Virginia?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Heathsville,_Virginia", "label": "Heathsville, Virginia"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/countySeat", "label": "county seat"}, {"uri": "http://dbpedia.org/property/mouthLocation", "label": "starts"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "1c466c5bdf984fa28bf9ba070374e8a8"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sverre_Krogh_Sundb\u00f8> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/H\u00e5vard_Vad_Petersson> <http://dbpedia.org/property/placeOfBirth> ?uri} ", "SerialNumber": "4390", "question": "Where were sverre krogh sundbo and havard vad petersson born?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sverre_Krogh_Sundb\u00f8", "label": "sverre krogh sundbo"}, {"uri": "http://dbpedia.org/resource/H\u00e5vard_Vad_Petersson", "label": "petersson"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/birthPlace", "label": "born"}, {"uri": "http://dbpedia.org/property/placeOfBirth"}], "id": "be80acb7f7b34c65b0e6ea8452711a51"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thorington_railway_station> <http://dbpedia.org/ontology/district> ?uri } ", "SerialNumber": "4391", "question": "where is the thorington train station located?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Thorington_railway_station", "label": "thorington station"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/district", "label": "in"}], "id": "a0f82706207747b0b7e49ff34a2321ab"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Microsoft_Visual_Studio>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "4394", "question": "Name the company founded in US and created Visual Studio ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": ""}, {"uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio", "label": "Visual Studio"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/foundation", "label": "founded"}, {"uri": "http://dbpedia.org/property/products", "label": "created"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "534aa17cdbb94593be95eb3051ede21e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Tangerine_Dream> . ?uri <http://dbpedia.org/property/artist> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}", "SerialNumber": "4397", "question": "What are the albums whose artists have performed with the Tangerine Dream?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tangerine_Dream", "label": "Tangerine Dream"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/associatedBand", "label": "performed"}, {"uri": "http://dbpedia.org/property/artist", "label": "artist"}, {"uri": "http://dbpedia.org/ontology/Album", "label": "album"}], "id": "5e45892fa3ce4473ba70cdeecaff4d39"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/nonFictionSubject> <http://dbpedia.org/resource/Jazz> . ?x <http://dbpedia.org/ontology/publisher> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "SerialNumber": "4398", "question": "Which house has published books about Jazz?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jazz", "label": "Jazz"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/nonFictionSubject"}, {"uri": "http://dbpedia.org/ontology/publisher", "label": "published"}, {"uri": "http://dbpedia.org/ontology/Book", "label": "book"}], "id": "aa8ca34e4003474990f876a54b184d6b"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Madison> <http://dbpedia.org/ontology/relation> ?uri. <http://dbpedia.org/resource/Levi_Lincoln,_Sr.> <http://dbpedia.org/property/successor> ?uri} ", "SerialNumber": "4406", "question": "Which sucessor of George Madison is the sucessor of levi Lincoln, Sr. ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/George_Madison", "label": "George Madison"}, {"uri": "http://dbpedia.org/resource/Levi_Lincoln,_Sr.", "label": "levi Lincoln, Sr."}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relation", "label": "sucessor"}, {"uri": "http://dbpedia.org/property/successor", "label": "sucessor"}], "id": "2fb718468f46401ea78bc4721495af49"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Nederlander> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Gary_S\u00e1nchez> <http://dbpedia.org/ontology/debutTeam> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}", "SerialNumber": "4408", "question": "What team is famous for Robert Nederlander and also the debuting team of Gary Sanchez?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Nederlander", "label": "Robert Nederlander"}, {"uri": "http://dbpedia.org/resource/Gary_S\u00e1nchez", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/knownFor", "label": "Sanchez"}, {"uri": "http://dbpedia.org/ontology/debutTeam", "label": "team"}, {"uri": "http://dbpedia.org/ontology/SportsTeam", "label": "team"}], "id": "a0ea895157fe4bc6ac0e2ac8f852f6b0"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor> . ?uri <http://dbpedia.org/ontology/deathPlace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "4411", "question": "Which politicians died in cities built by the Roman emperor Charles 5?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor", "label": "emperor charles roman"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/builder", "label": "built by"}, {"uri": "http://dbpedia.org/ontology/deathPlace", "label": "died in"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "Charles"}], "id": "0863ef35f0474efda395d6bdafbcde40"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/CFRX> <http://dbpedia.org/ontology/broadcastArea> ?uri. <http://dbpedia.org/resource/North_American_Poker_Tour> <http://dbpedia.org/ontology/country> ?uri} ", "SerialNumber": "4413", "question": "Which broad cast area od CFRX is the country of North America Poker Tour ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/CFRX", "label": "CFRX"}, {"uri": "http://dbpedia.org/resource/North_American_Poker_Tour", "label": "america poker north tour"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/broadcastArea", "label": "broad cast area"}, {"uri": "http://dbpedia.org/ontology/country", "label": "country"}], "id": "da861f99dfe244209207a2f1ddbd8a39"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/John_Robert_Woodyard>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "SerialNumber": "4414", "question": "Which scientist was advised by John Robert Woodyard?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Robert_Woodyard", "label": "John Robert Woodyard"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/doctoralAdvisor", "label": "advised"}, {"uri": "http://dbpedia.org/ontology/Scientist", "label": "scientist"}], "id": "eadddca2aa7a4d2daa245624e12ba871"}, {"sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Bacillales> . ?uri <http://dbpedia.org/property/domain> <http://dbpedia.org/resource/Bacteria> } ", "SerialNumber": "4416", "question": "How many bacterias have taxonomy as Bacillales and domain as Bacteria? ", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bacillales", "label": "Bacillales"}, {"uri": "http://dbpedia.org/resource/Bacteria", "label": "Bacteria"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/order"}, {"uri": "http://dbpedia.org/property/domain", "label": "domain"}], "id": "deee0126b45443878ab649c3acfb2756"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Marja'> . ?x <http://dbpedia.org/ontology/location> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}", "SerialNumber": "4418", "question": "In how many places are Marjas found?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Marja'", "label": "Marjas"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/title", "label": "found"}, {"uri": "http://dbpedia.org/ontology/location", "label": "found"}, {"uri": "http://dbpedia.org/ontology/Location", "label": ""}], "id": "dd10bc648d304c6e87f26f46a808f82d"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/product> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "4419", "question": "What products do US companies make?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": "US"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/location", "label": "make"}, {"uri": "http://dbpedia.org/ontology/product", "label": "product"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "companies"}], "id": "dcf94c6a97794f5eaa21c501a7046906"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)> <http://dbpedia.org/property/religiousAffiliation> ?uri. <http://dbpedia.org/resource/Vesak> <http://dbpedia.org/ontology/type> ?uri} ", "SerialNumber": "4421", "question": "What is the common religious affiliation of the Wickramabahu Central College (National School) and that of  Vesak?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)", "label": "Wickramabahu Central College (National School)"}, {"uri": "http://dbpedia.org/resource/Vesak", "label": "Vesak"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/religiousAffiliation", "label": "religious affiliation"}, {"uri": "http://dbpedia.org/ontology/type", "label": "College"}], "id": "df803beedd644f2685bc04e7975727c4"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Piano> . ?uri <http://dbpedia.org/property/voices> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "4428", "question": "What are some shows whose voice actors play the piano?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Piano", "label": "piano"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/instrument", "label": "play"}, {"uri": "http://dbpedia.org/property/voices", "label": "voice"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "829939d409714b7b9fb93dfd57ceccc9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Francis_Palmer_Smith> . ?x <http://dbpedia.org/property/address> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "SerialNumber": "4429", "question": "Where is the building located whose architect was Francis Palmer Smith?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Francis_Palmer_Smith", "label": "Francis Palmer Smith"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/architect", "label": "architect"}, {"uri": "http://dbpedia.org/property/address", "label": "located"}, {"uri": "http://dbpedia.org/ontology/Building", "label": "building"}], "id": "77bba5ef70ba44d79cf600cc5ea05d22"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Naval_Station_Mobile> <http://dbpedia.org/ontology/type> ?uri. <http://dbpedia.org/resource/Naval_Support_Activity_Naples> <http://dbpedia.org/ontology/type> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}", "SerialNumber": "4431", "question": "Naval station mobile and naval support activity, naples are under which branch of Us military?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Naval_Station_Mobile", "label": "Naval station mobile"}, {"uri": "http://dbpedia.org/resource/Naval_Support_Activity_Naples", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/type", "label": "branch"}, {"uri": "http://dbpedia.org/ontology/type", "label": "branch"}, {"uri": "http://dbpedia.org/ontology/MilitaryUnit", "label": "military"}], "id": "80e469b7945f4f16a8801256c157cab0"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2006\u201307_Middlesbrough_F.C._season> <http://dbpedia.org/ontology/manager> ?uri } ", "SerialNumber": "4433", "question": "Name the team manger of Middlebrough F.C season 2006-07 ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2006\u201307_Middlesbrough_F.C._season", "label": "2006-07"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/manager", "label": "season"}], "id": "e3851817df724055bf9d59adc6155746"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8> . ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> . }", "SerialNumber": "4436", "question": "Who was in missions of Gemini 8 and Apollo 11?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gemini_8", "label": "Gemini 8"}, {"uri": "http://dbpedia.org/resource/Apollo_11", "label": "Apollo 11"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mission", "label": "mission"}, {"uri": "http://dbpedia.org/property/mission", "label": "mission"}], "id": "a02542cdbf71477b8b35e4db7fa67cfa"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/champion> <http://dbpedia.org/resource/Joe_McKeehen> . ?x <http://dbpedia.org/property/founded> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>}", "SerialNumber": "4437", "question": "Who founded the league which was won by Joe McKeehen?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Joe_McKeehen", "label": "Joe McKeehen"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/champion", "label": "won"}, {"uri": "http://dbpedia.org/property/founded", "label": "founded"}, {"uri": "http://dbpedia.org/ontology/SportsLeague", "label": "league"}], "id": "a222bccc883b4487896ae0312ec2c17c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/nominee> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "4438", "question": "Give me some nominees of politicians in the US?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": "US"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/residence", "label": "politicians"}, {"uri": "http://dbpedia.org/ontology/nominee", "label": "nominee"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "politicians"}], "id": "e905a1686f744be6b8e33f6c79a49c7b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Lohan_Ratwatte> . ?x <http://dbpedia.org/property/allegiance> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}", "SerialNumber": "4439", "question": "To what did the parliament member swore her oath to, whose has sons is Lohan Ratwatte?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lohan_Ratwatte", "label": "Lohan Ratwatte"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/child", "label": "has sons"}, {"uri": "http://dbpedia.org/property/allegiance", "label": "oath"}, {"uri": "http://dbpedia.org/ontology/MemberOfParliament", "label": "parliament member"}], "id": "c34b719cd3be44ab82c70eb8f169d6c6"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Tillingdale> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}", "SerialNumber": "4440", "question": "In which races have Tillingdale's horses participated?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tillingdale", "label": "Tillingdale"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/owner", "label": "participated"}, {"uri": "http://dbpedia.org/property/race", "label": "race"}, {"uri": "http://dbpedia.org/ontology/Horse", "label": "horse"}], "id": "0bd745b22ebe404a8b28d4cf5954c9e7"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose> . ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Erik_Bork> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "4443", "question": "Name the tv series produced by Stephen Ambrose and Erik Bork?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Stephen_E._Ambrose", "label": "stephen ambrose"}, {"uri": "http://dbpedia.org/resource/Erik_Bork", "label": "Erik Bork"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/producer", "label": "produced"}, {"uri": "http://dbpedia.org/ontology/producer", "label": "produced"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "Ambrose"}], "id": "605675f72f0449d6a0b72908f4546a13"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/system> <http://dbpedia.org/resource/Chicago_and_North_Western_Transportation_Company> . ?x <http://dbpedia.org/ontology/routeStart> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}", "SerialNumber": "4445", "question": "Where do the railroads owned by the Chicago and Northwestern Transportation company begin?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chicago_and_North_Western_Transportation_Company", "label": "transportation"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/system", "label": "begin"}, {"uri": "http://dbpedia.org/ontology/routeStart", "label": "begin"}, {"uri": "http://dbpedia.org/ontology/RailwayLine", "label": "begin"}], "id": "e90f562181834b19b5ca9d4787d19f19"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/John_Tory> . ?uri <http://dbpedia.org/ontology/location> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "SerialNumber": "4447", "question": "Give me a list of all the buildings which are located in districts governed by John Tory.", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Tory", "label": "John Tory"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/leaderName", "label": "governed"}, {"uri": "http://dbpedia.org/ontology/location", "label": "governed"}, {"uri": "http://dbpedia.org/ontology/Building", "label": "building"}], "id": "2c2a4120329e4f2a96503a5534340a63"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dzogchen_Ponlop_Rinpoche> <http://dbpedia.org/property/location> ?uri } ", "SerialNumber": "4449", "question": "Where can one find the Dzogchen Ponolop Rinpoche?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dzogchen_Ponlop_Rinpoche", "label": "rinpoche dzogchen"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/location", "label": "Rinpoche"}], "id": "c43401a585454b6f9d0987e6511a91f9"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Bob_Suci> <http://dbpedia.org/property/pastteams> <http://dbpedia.org/resource/New_England_Patriots> }", "SerialNumber": "4451", "question": "Did Bob Suci play for the New England Patriots?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bob_Suci", "label": "Bob Suci"}, {"uri": "http://dbpedia.org/resource/New_England_Patriots", "label": "New England Patriots"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/pastteams"}], "id": "cb2281af4c674df6a881117802e8115c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neil_Cross> <http://dbpedia.org/ontology/notableWork> ?uri. <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/ontology/notableWork> ?uri . }", "SerialNumber": "4452", "question": "What would be the most important creation which involved both Neil Cross and Russel Davies ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Neil_Cross", "label": "Neil Cross"}, {"uri": "http://dbpedia.org/resource/Russell_T_Davies", "label": "russel davies"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/notableWork", "label": "Davies"}, {"uri": "http://dbpedia.org/ontology/notableWork", "label": "Davies"}], "id": "2435496704084a5992c396fcba62cd33"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "4454", "question": "Which TV show produced by Paramount Television and is located in Massachusetts ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Paramount_Television", "label": "Paramount Television"}, {"uri": "http://dbpedia.org/resource/Massachusetts", "label": "Massachusetts"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/company", "label": "located"}, {"uri": "http://dbpedia.org/ontology/location", "label": "located"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "television show"}], "id": "fa41d6a62ed040f5a195ea1fa799f2d4"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Progressive_rock> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . }", "SerialNumber": "4457", "question": "How many labels sign up progressive rock artists?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Progressive_rock", "label": "progressive rock"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/genre", "label": "artists"}, {"uri": "http://dbpedia.org/ontology/recordLabel", "label": "label"}], "id": "17ce149639704a6da50a88f32bc5eff6"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arunachal_Pradesh_Legislative_Assembly_election,_2014> <http://dbpedia.org/property/party> ?uri. <http://dbpedia.org/resource/Fourth_Legislative_Assembly_of_Delhi> <http://dbpedia.org/property/party> ?uri . }", "SerialNumber": "4463", "question": "Which indian party has won the arunachal pradesh elections of 2014, and has been in the 4th legislative assembly?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Arunachal_Pradesh_Legislative_Assembly_election,_2014", "label": "legislative arunachal assembly"}, {"uri": "http://dbpedia.org/resource/Fourth_Legislative_Assembly_of_Delhi", "label": "legislative assembly"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/party", "label": "party"}, {"uri": "http://dbpedia.org/property/party", "label": "party"}], "id": "ee09ab7feb1344e7b513cd18e2f891e7"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Sanjay_Gandhi> . ?x <http://dbpedia.org/ontology/party> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "4465", "question": "What is the party of the politicians whose children is Sanjay Gandhi ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sanjay_Gandhi", "label": "Sanjay Gandhi"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/children", "label": "children"}, {"uri": "http://dbpedia.org/ontology/party", "label": "party"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "politicians"}], "id": "0cd8980e09074dc185a0889b18d53657"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Cobham_Training_Centre> <http://dbpedia.org/property/owner> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}", "SerialNumber": "4466", "question": "Who is the owner of the FC which owns the Cobham Training Centre?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cobham_Training_Centre", "label": "Cobham Training Centre"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/owner", "label": "owner"}, {"uri": "http://dbpedia.org/property/owner", "label": "owner"}, {"uri": "http://dbpedia.org/ontology/SoccerClub", "label": "owns"}], "id": "d348e34b15b34282bcca4892641b5f9d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Ikelenge_District> . ?uri <http://dbpedia.org/property/mouthCountry> <http://dbpedia.org/resource/Mozambique>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "4469", "question": "Name the river whose source is located in Ikelenge  District and mouth in Mozambique?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ikelenge_District", "label": "ikelenge district"}, {"uri": "http://dbpedia.org/resource/Mozambique", "label": "Mozambique"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/sourceLocation", "label": "source"}, {"uri": "http://dbpedia.org/property/mouthCountry", "label": "mouth"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "b4321c4410c14121844377a286ff893f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Amalgamated_Clothing_Workers_of_America> <http://dbpedia.org/ontology/affiliation> ?x . ?x <http://dbpedia.org/property/founded> ?uri  . }", "SerialNumber": "4471", "question": "Who is the founder of the trade union with whom Amalgamated Clothing Workers of America is affiliated?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Amalgamated_Clothing_Workers_of_America", "label": "Amalgamated Clothing Workers of America"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/affiliation", "label": "affiliated"}, {"uri": "http://dbpedia.org/property/founded", "label": "founder of"}], "id": "3691b72c47ef41ecb0642a31737f3b86"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/New_York_Post>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "4472", "question": "What are some people working for the New York Post?", "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York_Post", "label": "New York Post"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/employer", "label": "working for"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "4af5c60efca84897ae3b0cf6c727f603"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cpu> <http://dbpedia.org/resource/Cell_(microprocessor)> . ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony>  . }", "SerialNumber": "4473", "question": "Which gaming console's central processing unit is microprocessor and built by Sony?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cell_(microprocessor)", "label": "microprocessor"}, {"uri": "http://dbpedia.org/resource/Sony", "label": "Sony"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/cpu", "label": "central processing unit"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "built by"}], "id": "001da0a604d74bae8d29e5bfc521e92e"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Canadians> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }", "SerialNumber": "4477", "question": "How many things have made different people living in Canada famous?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Canadians", "label": "Canada"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/nationality", "label": "famous"}, {"uri": "http://dbpedia.org/ontology/knownFor", "label": "famous"}], "id": "cb1b7e3030df44b592c6bca8cf93d76f"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Madison> <http://dbpedia.org/ontology/relation> ?uri } ", "SerialNumber": "4478", "question": "Which famous political figures are relatives to George Madison?", "entity mapping": [{"uri": "http://dbpedia.org/resource/George_Madison", "label": "George Madison"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relation", "label": "relatives"}], "id": "b9053f165ad74242808b096ce9040971"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Judy_Hart_Angelo> . ?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Glen_and_Les_Charles>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "4479", "question": "Which TV show's composer is Judy  Hart  Angelo and executive producer as Glen and Les Charles?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Judy_Hart_Angelo", "label": "angelo judy hart"}, {"uri": "http://dbpedia.org/resource/Glen_and_Les_Charles", "label": "Glen and Les Charles"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/composer", "label": "composer"}, {"uri": "http://dbpedia.org/ontology/executiveProducer", "label": "executive producer"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show's"}], "id": "170a69d8ac1c40e0930df1a674d5c1cf"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_\u2013_Women's_singles> <http://dbpedia.org/ontology/silverMedalist> <http://dbpedia.org/resource/Maria_Sharapova> }", "SerialNumber": "4487", "question": "Is Maria Sharapova the silver medalist of Tennis at the 2012 Summer Olympics  Women's singles?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_\u2013_Women's_singles", "label": "olympics women's singles tennis summer"}, {"uri": "http://dbpedia.org/resource/Maria_Sharapova", "label": "Maria Sharapova"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/silverMedalist", "label": "medalist silver"}], "id": "3efd4b46f83649b8b2b937bbe752427f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relatedMeanOfTransportation> <http://dbpedia.org/resource/Subaru_Outback> . ?x <http://dbpedia.org/ontology/layout> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "SerialNumber": "4488", "question": "What is the layout of the cars similar to that of the Subaru Outback?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Subaru_Outback", "label": "Subaru Outback"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relatedMeanOfTransportation"}, {"uri": "http://dbpedia.org/ontology/layout", "label": "layout"}, {"uri": "http://dbpedia.org/ontology/Automobile", "label": "similar"}], "id": "f2f115531d7445d49155fe03258dffe1"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia> . ?x <http://dbpedia.org/ontology/riverMouth> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "4489", "question": "Where do the rivers starting from Zambia end?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Zambia", "label": "Zambia"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourceCountry", "label": "end"}, {"uri": "http://dbpedia.org/ontology/riverMouth", "label": "rivers"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "09a1b808c0fa4f2f8839a1ce8279556d"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Naval_Support_Activity_Naples> <http://dbpedia.org/ontology/type> ?uri } ", "SerialNumber": "4492", "question": "What is Naval Support Activity Naples a part of?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Naval_Support_Activity_Naples", "label": "Naval Support Activity Naples"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/type", "label": "part"}], "id": "81a79bece2344b4aaa91302154014fbc"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/John_Orloff> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "4499", "question": "Which series was written by Eric Jendresen and John Orloff?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Erik_Jendresen", "label": "jendresen"}, {"uri": "http://dbpedia.org/resource/John_Orloff", "label": "John Orloff"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/writer", "label": "written by"}, {"uri": "http://dbpedia.org/property/writer", "label": "written by"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "Jendresen"}], "id": "a9844619aaa14527a44829ee64b0658b"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Sony_Music_Entertainment> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>}", "SerialNumber": "4500", "question": "Count the number of musical work which were sold by Sony Music?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sony_Music_Entertainment", "label": "Sony Music"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/label", "label": "sold"}, {"uri": "http://dbpedia.org/property/music", "label": "music"}, {"uri": "http://dbpedia.org/ontology/MusicalWork", "label": "musical work"}], "id": "a3f36caa2ac0432a9aca31a86472fe19"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Art\u00far_G\u00f6rgei>  . }", "SerialNumber": "4502", "question": "Who was succeeded by Arthur Gegei as the office ho0lder ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Art\u00far_G\u00f6rgei", "label": "Arthur Gegei"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/successor", "label": "office"}], "id": "f59c8bc3349a4d1e8edfa572284dd9be"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mississippi_River> <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/Clearwater_County,_Minnesota> }", "SerialNumber": "4505", "question": "Does the mississippi orignate in the clearwater county, minnesota?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mississippi_River", "label": "mississippi"}, {"uri": "http://dbpedia.org/resource/Clearwater_County,_Minnesota", "label": "clearwater county"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sourceRegion", "label": "minnesota"}], "id": "6b16d12e156b4bb294b527c83c07f76a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Microsoft_Visual_Studio> . ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Surface>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "4508", "question": "Name the company with product lines like Visual studio and Surface ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio", "label": "Visual studio"}, {"uri": "http://dbpedia.org/resource/Microsoft_Surface", "label": "surface"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/products", "label": "product"}, {"uri": "http://dbpedia.org/ontology/product", "label": "product"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "a3c5942a30ca4e078b7cac835d4eb065"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Black_Grape_Global> <http://dbpedia.org/ontology/locationCity> ?uri } ", "SerialNumber": "4513", "question": "Which city is Black Grape Global located ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Black_Grape_Global", "label": "Black Grape Global"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locationCity", "label": "located"}], "id": "1a57597da91944a4ac167a67fcca0174"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "4516", "question": "Who preceded Lucius Crus as an office holder?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus", "label": "Lucius Crus"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/predecessor", "label": "preceded"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "office holder"}], "id": "a234b1c5bf4d4ae29790e87b267333fc"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Gerard_Marino> . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "SerialNumber": "4522", "question": "Which company has developed games whose music is done by Gerard Marino?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gerard_Marino", "label": "Gerard Marino"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/composer", "label": "music"}, {"uri": "http://dbpedia.org/ontology/developer", "label": "developed"}, {"uri": "http://dbpedia.org/ontology/VideoGame", "label": "games"}], "id": "d094fc39be5943518c758621e7598c9f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shim\u014dsa_Plateau> <http://dbpedia.org/ontology/border> ?uri. <http://dbpedia.org/resource/Siberia> <http://dbpedia.org/ontology/border> ?uri . }", "SerialNumber": "4524", "question": "What would be a common border of Siberia and the shimsa plateau?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Shim\u014dsa_Plateau", "label": "plateau"}, {"uri": "http://dbpedia.org/resource/Siberia", "label": "Siberia"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/border", "label": "border"}, {"uri": "http://dbpedia.org/ontology/border", "label": "border"}], "id": "27ec0051c6fa4b6c8224afcec91fc1ac"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Hall_(economist)> <http://dbpedia.org/ontology/institution> ?uri } ", "SerialNumber": "4525", "question": "List the institute of Robert hall ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Robert_Hall_(economist)", "label": "Robert hall"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/institution", "label": "institute"}], "id": "c6c9dbbe628c4282bac952abf1b6d056"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "4527", "question": "What are some shows by Comedy Central?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Comedy_Central", "label": "Comedy Central"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/network"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "e7fab35dd5cf469895cae4ef222fbcd7"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Rock_and_Roll_Hall_of_Fame> . ?uri <http://dbpedia.org/ontology/publisher> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}", "SerialNumber": "4529", "question": "What are some magazines whose publishers are themselves Rock and Roll Hall of Fame members?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Rock_and_Roll_Hall_of_Fame", "label": "Rock and Roll Hall of Fame"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/award", "label": "members"}, {"uri": "http://dbpedia.org/ontology/publisher", "label": "publisher"}, {"uri": "http://dbpedia.org/ontology/Magazine", "label": "magazine"}], "id": "b9b68b1ab73f47e48473bbb74c50ba1a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/style> <http://dbpedia.org/resource/Truss_bridge> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}", "SerialNumber": "4530", "question": "In which states can I find Truss bridges?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Truss_bridge", "label": "Truss bridge"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/style", "label": "find"}, {"uri": "http://dbpedia.org/ontology/state", "label": "state"}, {"uri": "http://dbpedia.org/ontology/Bridge", "label": "bridge"}], "id": "25322000923943a3b7694bfcabc42a66"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Richard_Marx> <http://dbpedia.org/property/instrument> <http://dbpedia.org/resource/Guitar> }", "SerialNumber": "4531", "question": "Does Richard Marx play guitar?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Richard_Marx", "label": "Richard Marx"}, {"uri": "http://dbpedia.org/resource/Guitar", "label": "guitar"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/instrument", "label": "play"}], "id": "e3dd3f0c6fa442b6ad746b3be43c9d41"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Rostock> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Kaliningrad> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "SerialNumber": "4532", "question": "Which sea is surrounded by Rostock and Kaliningrad?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Rostock", "label": "Rostock"}, {"uri": "http://dbpedia.org/resource/Kaliningrad", "label": "Kaliningrad"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/cities", "label": "surrounded"}, {"uri": "http://dbpedia.org/property/cities", "label": "surrounded"}, {"uri": "http://dbpedia.org/ontology/Sea", "label": "sea"}], "id": "79a4891fa50c4add9ea19a97a185d544"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Jay_Gogue>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "SerialNumber": "4533", "question": "Which university is led by Jay Gogue?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jay_Gogue", "label": "Jay Gogue"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/president", "label": "led"}, {"uri": "http://dbpedia.org/ontology/University", "label": "university"}], "id": "4d42ac9615894cb8b1670248b35ff581"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/John_McEwen> . ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Park_Chung-hee> . }", "SerialNumber": "4537", "question": "Whose commanders are John Mc Ewen and Park Chunghee?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_McEwen", "label": "john ewen mc"}, {"uri": "http://dbpedia.org/resource/Park_Chung-hee", "label": "Park Chunghee"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/commander", "label": "commander"}, {"uri": "http://dbpedia.org/ontology/commander", "label": "commander"}], "id": "598d49c1f1db4938ab50cc5492fbf488"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerry_Tagge> <http://dbpedia.org/property/highSchool> ?uri. <http://dbpedia.org/resource/Tennie_and_Laura_(schooner)> <http://dbpedia.org/property/nearestCity> ?uri} ", "SerialNumber": "4541", "question": "Which high school of jerry Tagge is also the nearest city of Tennie laura ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jerry_Tagge", "label": "jerry Tagge"}, {"uri": "http://dbpedia.org/resource/Tennie_and_Laura_(schooner)", "label": "tennie laura"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/highSchool", "label": "high school"}, {"uri": "http://dbpedia.org/property/nearestCity", "label": "nearest city"}], "id": "88f545749cc4451988e2442225fa9bca"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Grandmaster_(chess)> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }", "SerialNumber": "4543", "question": "In which cities were the chess grand masters born?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Grandmaster_(chess)", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/title", "label": "born"}, {"uri": "http://dbpedia.org/ontology/birthPlace", "label": "born"}], "id": "ad0d34bb16504702b756a8c82100920b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ricardo_Alfonso_Cerna> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/Apostolic_Vicariate_of_El_Pet\u00e9n> <http://dbpedia.org/ontology/country> ?uri . }", "SerialNumber": "4546", "question": "What nation is the motherland of Ricardo Alfonso Cerna  where Apostolic Vicariate of El Petn is located?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ricardo_Alfonso_Cerna", "label": "Ricardo Alfonso Cerna"}, {"uri": "http://dbpedia.org/resource/Apostolic_Vicariate_of_El_Pet\u00e9n", "label": "vicariate apostolic"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/birthPlace", "label": "located"}, {"uri": "http://dbpedia.org/ontology/country", "label": "nation"}], "id": "433a238279f1423380425f507a28d1b7"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/border> <http://dbpedia.org/resource/Bjela\u0161nica> . ?x <http://dbpedia.org/ontology/mouthCountry> ?uri  . }", "SerialNumber": "4550", "question": "What does the river end on whose border we find in Bjelasnica?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bjela\u0161nica", "label": "Bjelasnica"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/border", "label": "border"}, {"uri": "http://dbpedia.org/ontology/mouthCountry", "label": "find"}], "id": "9202537eff6a4bbba5a512ca97ef35ff"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Oslo> . ?uri <http://dbpedia.org/property/owners> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}", "SerialNumber": "4553", "question": "Which newspapers are owned by Oslo citizens?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Oslo", "label": "Oslo"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/location", "label": "citizens"}, {"uri": "http://dbpedia.org/property/owners", "label": "owned"}, {"uri": "http://dbpedia.org/ontology/Newspaper", "label": "newspaper"}], "id": "1aa73156801547f1babc504ef1f539a5"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/property/playedFor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>}", "SerialNumber": "4554", "question": "Which hockey teams have had people playing as Defenceman?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Defenceman", "label": "Defenceman"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/position", "label": "playing"}, {"uri": "http://dbpedia.org/property/playedFor", "label": "team"}, {"uri": "http://dbpedia.org/ontology/IceHockeyPlayer", "label": "hockey"}], "id": "7794edb4bced489bad560bde6d7f1b1d"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1984_in_fine_arts_of_the_Soviet_Union> <http://dbpedia.org/property/title> ?uri } ", "SerialNumber": "4558", "question": "What monument was unveiled in 1984 of fine arts of the Soviet Union ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/1984_in_fine_arts_of_the_Soviet_Union", "label": "soviet union fine arts 1984"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/title", "label": "Union"}], "id": "748e2f950c61435586ef72d009b2f7c1"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Tulane_Green_Wave>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}", "SerialNumber": "4559", "question": "Which universities are also known as the Tulane Green wave?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tulane_Green_Wave", "label": "Tulane Green wave"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/nickname", "label": "known"}, {"uri": "http://dbpedia.org/ontology/University", "label": "universities"}], "id": "f9d4553365b340d89df7041600ddb304"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/British_Columbia> . ?x <http://dbpedia.org/property/religion> ?uri  . }", "SerialNumber": "4562", "question": "Count the religions followed by people living in British Columbia.", "entity mapping": [{"uri": "http://dbpedia.org/resource/British_Columbia", "label": "British Columbia"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/residence", "label": "living"}, {"uri": "http://dbpedia.org/property/religion", "label": "religion"}], "id": "3783ed5014f64bc59ce995cf1be1dc9c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Louis_Bri\u00e8re_de_l'Isle> . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "4566", "question": "Where did the conflict take place where Louis Briere de I'Isle was a commander?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Louis_Bri\u00e8re_de_l'Isle", "label": "Louis Briere"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/commander", "label": "commander"}, {"uri": "http://dbpedia.org/ontology/territory", "label": "de"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "conflict"}], "id": "bd8a29101ec64bdaa50f4f3c3c3de808"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/ontology/founder> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Publisher>}", "SerialNumber": "4567", "question": "How many publisher have been founded by american citizens?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/stateOfOrigin"}, {"uri": "http://dbpedia.org/ontology/founder", "label": "founded by"}, {"uri": "http://dbpedia.org/ontology/Publisher", "label": "publisher"}], "id": "1f1e8a30a2d348d09ee11446805e1382"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Yellow_Claw_(DJs)> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Elasticsearch> <http://dbpedia.org/property/location> ?uri . }", "SerialNumber": "4572", "question": "In which city can I find both the office of Elasticsearch and the Yellow Claw DJ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Yellow_Claw_(DJs)", "label": "Yellow Claw"}, {"uri": "http://dbpedia.org/resource/Elasticsearch", "label": "Elasticsearch"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/location", "label": "DJ"}, {"uri": "http://dbpedia.org/property/location", "label": "DJ"}], "id": "00792920d6934b74b1aac3738f061200"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Chicago> . ?uri <http://dbpedia.org/property/editor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}", "SerialNumber": "4573", "question": "Give me all magazines whose editors live in Chicago?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chicago", "label": "Chicago"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/hometown", "label": "live"}, {"uri": "http://dbpedia.org/property/editor", "label": "editor"}, {"uri": "http://dbpedia.org/ontology/Magazine", "label": "magazine"}], "id": "cc62ecdc3a6b49c0abb8041c806f783b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "4574", "question": "Which religions are followed by people in England?", "entity mapping": [{"uri": "http://dbpedia.org/resource/England", "label": "England"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/residence", "label": "people"}, {"uri": "http://dbpedia.org/property/religion", "label": "religion"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "people"}], "id": "e14c2eb6c1784c0b8a72befd991b28b9"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "4575", "question": "Which televison shows have location as Massachusetts ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Massachusetts", "label": "Massachusetts"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/location", "label": "location"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "shows"}], "id": "4545adc58a0241e7a7f875171495d9db"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/governor> <http://dbpedia.org/resource/Charles_Willing_Byrd> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/John_Scott_Harrison>  . }", "SerialNumber": "4576", "question": "Which governor of Charles Willing had a child named John Scott ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles_Willing_Byrd", "label": "willing charles"}, {"uri": "http://dbpedia.org/resource/John_Scott_Harrison", "label": "scott"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/governor", "label": "governor"}, {"uri": "http://dbpedia.org/ontology/child", "label": "child"}], "id": "f42b1c36286b47c8958cf2d6a74f511a"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Blue_Lagoon_Island> <http://dbpedia.org/ontology/archipelago> <http://dbpedia.org/resource/The_Bahamas> }", "SerialNumber": "4580", "question": "is blue lagoon island a part of the bahamas achipelago?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Blue_Lagoon_Island", "label": "blue lagoon island"}, {"uri": "http://dbpedia.org/resource/The_Bahamas", "label": "bahamas"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/archipelago", "label": "part"}], "id": "7909a81b56b34a5fb3669d704b262965"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kirk_Fordice> <http://dbpedia.org/property/battles> ?uri. <http://dbpedia.org/resource/Percy_Fitzwallace> <http://dbpedia.org/property/battles> ?uri . }", "SerialNumber": "4582", "question": "What is the war in which both K Fordice and P Fitzwallace fight?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kirk_Fordice", "label": "fordice"}, {"uri": "http://dbpedia.org/resource/Percy_Fitzwallace", "label": "fitzwallace"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/battles", "label": "fight"}, {"uri": "http://dbpedia.org/property/battles", "label": "fight"}], "id": "113e33dbe9dc46c58978e463ef3ce85f"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/FC_Barcelona> } ", "SerialNumber": "4584", "question": "Who are currently playing for Barcelona FC?", "entity mapping": [{"uri": "http://dbpedia.org/resource/FC_Barcelona", "label": "Barcelona FC"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentclub"}], "id": "0a8fde7c5b8543ea9cbcbe3cd2931cd0"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Just_Another_Day...> <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/Queen_Latifah> }", "SerialNumber": "4586", "question": "Was Just Another day made by Queen Latifah?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Just_Another_Day...", "label": "another just day"}, {"uri": "http://dbpedia.org/resource/Queen_Latifah", "label": "Queen Latifah"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/musicalBand", "label": "made"}], "id": "b4dfd5c3a0424173bb8d70e4152cdbf7"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/Ferran_Soriano> . ?uri <http://dbpedia.org/property/currentclub> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "4587", "question": "Who are the players whose current clubs have Ferran Soriano as chairman?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ferran_Soriano", "label": "Ferran Soriano"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/chairman", "label": "chairman"}, {"uri": "http://dbpedia.org/property/currentclub", "label": "current"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "clubs"}], "id": "8cb03d7f98d14093b047782ba028ffa2"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kurt_Vonnegut_Memorial_Library> <http://dbpedia.org/ontology/location> ?uri. <http://dbpedia.org/resource/Louis_LeCocq> <http://dbpedia.org/property/placeOfDeath> ?uri} ", "SerialNumber": "4589", "question": "Of the places where Kurt Vonnegut Memorial Library exists, where did Louis LeCocq die?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kurt_Vonnegut_Memorial_Library", "label": "Kurt Vonnegut Memorial Library"}, {"uri": "http://dbpedia.org/resource/Louis_LeCocq", "label": "Louis LeCocq"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/location", "label": "die"}, {"uri": "http://dbpedia.org/property/placeOfDeath", "label": "places"}], "id": "15e2bcfdb55148b2a535b757cdfae2bd"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/highschool> <http://dbpedia.org/resource/Palm_City,_Florida> . ?x <http://dbpedia.org/ontology/college> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "4591", "question": "The people who did their high school in Palm City, Florida did their college where?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Palm_City,_Florida", "label": "Palm City, Florida"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/highschool", "label": "school high"}, {"uri": "http://dbpedia.org/ontology/college", "label": "college"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "school"}], "id": "ca66cfc326e54da8afe7236d75e259f7"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Google_Web_Toolkit> <http://dbpedia.org/ontology/author> ?uri. <http://dbpedia.org/resource/Google_Custom_Search> <http://dbpedia.org/ontology/author> ?uri . }", "SerialNumber": "4594", "question": "Which company developed Google Web Toolkit and Google custom search?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Google_Web_Toolkit", "label": "Google Web Toolkit"}, {"uri": "http://dbpedia.org/resource/Google_Custom_Search", "label": "Google custom search"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/author", "label": "developed"}, {"uri": "http://dbpedia.org/ontology/author", "label": "developed"}], "id": "3fe61b9c19eb497db424c23986cb1dce"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ben_Wilson_(American_football)> <http://dbpedia.org/ontology/highschool> ?uri } ", "SerialNumber": "4597", "question": "From where did Ben Wilson (American football) do his highscool?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ben_Wilson_(American_football)", "label": "Ben Wilson (American football)"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/highschool", "label": "Wilson"}], "id": "3b97fa49140f452d85633a8d1f63764f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Fr._Agnel_Stadium> <http://dbpedia.org/property/operator> ?x . ?x <http://dbpedia.org/ontology/sport> ?uri  . }", "SerialNumber": "4598", "question": "Which sports are played in the school which runs the Fr. Agnel Stadium?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fr._Agnel_Stadium", "label": "Fr. Agnel Stadium"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/operator", "label": "runs"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}], "id": "dd871c9e9b134d939271640e81c6095d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/North\u2013South_Transport_Corridor> <http://dbpedia.org/ontology/routeEnd> ?uri. <http://dbpedia.org/resource/Mumbai_Vadodara_Expressway> <http://dbpedia.org/ontology/routeEnd> ?uri . }", "SerialNumber": "4599", "question": "Name the route end of the North-South Transport Corridor and Mumbai Vadodara Expressway?", "entity mapping": [{"uri": "http://dbpedia.org/resource/North\u2013South_Transport_Corridor", "label": ""}, {"uri": "http://dbpedia.org/resource/Mumbai_Vadodara_Expressway", "label": "Mumbai Vadodara Expressway"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/routeEnd", "label": "route end"}, {"uri": "http://dbpedia.org/ontology/routeEnd", "label": "route end"}], "id": "ea3bd4ab943c4ebf82618c545d171971"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/movement> <http://dbpedia.org/resource/Katharevousa> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "SerialNumber": "4602", "question": "Katharevousa writers have been given which awards?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Katharevousa", "label": "Katharevousa"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/movement"}, {"uri": "http://dbpedia.org/ontology/award", "label": "awards"}, {"uri": "http://dbpedia.org/ontology/Writer", "label": "writers"}], "id": "0312574f280d45a89cd5147313fad0b1"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/subject> <http://dbpedia.org/resource/Paul_Broca> . ?x <http://dbpedia.org/property/subject> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "SerialNumber": "4608", "question": "List the subjects of the books whose one of the topics is Pau Broca ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Paul_Broca", "label": "broca pau"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/subject", "label": "subject"}, {"uri": "http://dbpedia.org/property/subject", "label": "subject"}, {"uri": "http://dbpedia.org/ontology/Book", "label": "book"}], "id": "7d287a0404374984833426b01ed42751"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Instagram> } ", "SerialNumber": "4612", "question": "Which company owns instagram?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Instagram", "label": "instagram"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/subsidiary", "label": "owns"}], "id": "233b7a9099164868a3abc029100949c1"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/debutteam> <http://dbpedia.org/resource/Homestead_Grays> . ?x <http://dbpedia.org/property/birthDate> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}", "SerialNumber": "4614", "question": "Where were the sportsmen born, who started their careers with Homestead Grays?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Homestead_Grays", "label": "Homestead Grays"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/debutteam"}, {"uri": "http://dbpedia.org/property/birthDate", "label": "careers"}, {"uri": "http://dbpedia.org/ontology/Athlete", "label": "careers"}], "id": "7c1138e9bbe54bf79f56584f88d64515"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/movement> <http://dbpedia.org/resource/Feminism> . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "SerialNumber": "4616", "question": "In which countries can i find some feminist writers?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Feminism", "label": "feminist"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/movement", "label": "find"}, {"uri": "http://dbpedia.org/ontology/nationality", "label": "find"}, {"uri": "http://dbpedia.org/ontology/Writer", "label": "writers"}], "id": "67b58e4d4ed94311a8d0d1ab84d2154d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deathDate> <http://dbpedia.org/resource/Euboea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Philosopher>}", "SerialNumber": "4617", "question": "Which famous philosopher died on island Euboea?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Euboea", "label": "Euboea"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/deathDate", "label": "island"}, {"uri": "http://dbpedia.org/ontology/Philosopher", "label": "philosopher"}], "id": "794526bf2c154e83bd9954aed2e8d6ea"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/John_W._Weeks> . ?x <http://dbpedia.org/property/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TennisPlayer>}", "SerialNumber": "4620", "question": "Who was the president under which a tennis player held office before John W. Weeks?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_W._Weeks", "label": "John W. Weeks"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/predecessor", "label": "office"}, {"uri": "http://dbpedia.org/property/president", "label": "president"}, {"uri": "http://dbpedia.org/ontology/TennisPlayer", "label": "tennis player"}], "id": "fece7229f9bf482dbebf1709a0fb8112"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/UFC_140> <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "SerialNumber": "4626", "question": "Who are the tenants of the stadium where the UFC 140 is located?", "entity mapping": [{"uri": "http://dbpedia.org/resource/UFC_140", "label": "UFC 140"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/location", "label": "located"}, {"uri": "http://dbpedia.org/ontology/tenant", "label": "tenant"}, {"uri": "http://dbpedia.org/ontology/Stadium", "label": "stadium"}], "id": "0fa03d2ba63f4f22b7c78644d60f399d"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Royal_Thai_Army> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "4628", "question": "Which religion followers are in the Royal Thai Army?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Royal_Thai_Army", "label": "Royal Thai Army"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/militaryBranch", "label": "followers"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}], "id": "cbc87af1e755447fa98c05a0e64a2eb2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . }", "SerialNumber": "4629", "question": "In which teams did anyone who played as a defencemen, play previously?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Defenceman", "label": "previously"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/position", "label": "play"}, {"uri": "http://dbpedia.org/ontology/formerTeam", "label": "teams"}], "id": "572bc2bfc3424538bdc77b22722dfe47"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Killing_Is_Out,_School_Is_In> <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/James_Brown> }", "SerialNumber": "4630", "question": "Did James brown make the song Killing is Out, School Is In?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Killing_Is_Out,_School_Is_In", "label": "Killing is Out, School Is In"}, {"uri": "http://dbpedia.org/resource/James_Brown", "label": "James brown"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/musicalBand", "label": "song"}], "id": "dab9358e5ab14f72b0af6926cb98b371"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Siddhartha_Shankar_Ray> <http://dbpedia.org/ontology/party> ?uri. <http://dbpedia.org/resource/Kamla_Beniwal> <http://dbpedia.org/property/party> ?uri . }", "SerialNumber": "4632", "question": "What party are Siddharta Shankar Ray and Kamla Beniwal from?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Siddhartha_Shankar_Ray", "label": ""}, {"uri": "http://dbpedia.org/resource/Kamla_Beniwal", "label": "Kamla Beniwal"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/party", "label": "party"}, {"uri": "http://dbpedia.org/property/party", "label": "party"}], "id": "16a642c2d9054f76866946a7e2aa742a"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Ape>  . }", "SerialNumber": "4635", "question": "How many apes are there?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ape", "label": "ape"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/family"}], "id": "09f4a767c4ef49b09ad81beafe0dcf61"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Zuo_Zongtang> . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "4640", "question": "Where did the war take place where one of the commander was Zuo Zongtang?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Zuo_Zongtang", "label": "Zuo Zongtang"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/commander", "label": "commander"}, {"uri": "http://dbpedia.org/ontology/territory", "label": "place"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "place"}], "id": "e41dd0cd6d1140b8b8f3f4cf25ac51e1"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway> <http://dbpedia.org/ontology/routeStart> ?uri. <http://dbpedia.org/resource/2011\u201312_FC_Spartak_Moscow_season> <http://dbpedia.org/ontology/homeStadium> ?uri} ", "SerialNumber": "4642", "question": "Which route start of Moscow-Kazan high-speed railway is the home stadium of 2011-12 FC Spartak Moscow ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway", "label": "Moscow-Kazan high-speed railway"}, {"uri": "http://dbpedia.org/resource/2011\u201312_FC_Spartak_Moscow_season", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/routeStart", "label": "route start"}, {"uri": "http://dbpedia.org/ontology/homeStadium", "label": "home stadium"}], "id": "6d665a3fde3242e690e58cf5a30b7331"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Deane> <http://dbpedia.org/ontology/primeMinister> ?uri  . }", "SerialNumber": "4644", "question": "Who was the PM under which William Deane served?", "entity mapping": [{"uri": "http://dbpedia.org/resource/William_Deane", "label": "William Deane"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/primeMinister", "label": "served"}], "id": "a5f5c0c2445b4506b6b33166953033e2"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Thomson_Mason_(1787\u20131850)> <http://dbpedia.org/ontology/deathCause> ?uri. <http://dbpedia.org/resource/Martino_Martini> <http://dbpedia.org/ontology/deathCause> ?uri . }", "SerialNumber": "4646", "question": "What killed John Thompson Mason and Martino Martini?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Thomson_Mason_(1787\u20131850)", "label": ""}, {"uri": "http://dbpedia.org/resource/Martino_Martini", "label": "Martino Martini"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/deathCause", "label": "Mason"}, {"uri": "http://dbpedia.org/ontology/deathCause", "label": "Mason"}], "id": "a66454f689bf4ec393eef188c8ea0fb6"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/leaderTitle> <http://dbpedia.org/resource/President_of_France> . ?x <http://dbpedia.org/ontology/currency> ?uri  . }", "SerialNumber": "4647", "question": "How many different currencies are used in the places governed by the president of France?", "entity mapping": [{"uri": "http://dbpedia.org/resource/President_of_France", "label": "president of France"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/leaderTitle", "label": "governed"}, {"uri": "http://dbpedia.org/ontology/currency", "label": "currencies"}], "id": "36e913ffdfe04f3c836be75b16def3a4"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Dallas_Cowboys>  . }", "SerialNumber": "4649", "question": "How many people play for the Dallas Cowboys?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dallas_Cowboys", "label": "Dallas Cowboys"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/team", "label": "play"}], "id": "a850c2eb0a1a4e92b601ea447d0228f2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Young_Life> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "4651", "question": "Where did the people die who were known for Young Life?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Young_Life", "label": "Young Life"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/knownFor", "label": "known for"}, {"uri": "http://dbpedia.org/ontology/deathPlace", "label": "die"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "die"}], "id": "2d3593472ac64342ae437da2e0f9880f"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Josh_Groban> . ?x <http://dbpedia.org/property/judges> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "4655", "question": "Who are the  judges of the television show whose anchor is Josh Groban?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Josh_Groban", "label": "Josh Groban"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/presenter", "label": "anchor"}, {"uri": "http://dbpedia.org/property/judges", "label": "judges"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "television show"}], "id": "0652b6c013d14959a266fdbb14f106ab"}, {"sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell> . ?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller> } ", "SerialNumber": "4656", "question": "Give me the total number of television shows whose theme music composer is Julian Gingell and created by  Simon Fuller?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Julian_Gingell", "label": "Julian Gingell"}, {"uri": "http://dbpedia.org/resource/Simon_Fuller", "label": "Simon Fuller"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/themeMusicComposer", "label": "theme music composer"}, {"uri": "http://dbpedia.org/property/creator", "label": "created"}], "id": "dba124f2991542c596c0081858c11b79"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/British_Columbia> . ?x <http://dbpedia.org/ontology/ethnicity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "4658", "question": "What ethnicity do people in British Columbia belong to?", "entity mapping": [{"uri": "http://dbpedia.org/resource/British_Columbia", "label": "British Columbia"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/residence", "label": "belong"}, {"uri": "http://dbpedia.org/ontology/ethnicity", "label": "ethnicity"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "belong"}], "id": "0d93df312f8448acb89d604531f0dcc3"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/A_Barrel_of_Laughs,_a_Vale_of_Tears> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>}", "SerialNumber": "4661", "question": "Which awards did the creator of A Barrel of Laughs, a Vale of Tears won ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/A_Barrel_of_Laughs,_a_Vale_of_Tears", "label": "A Barrel of Laughs, a Vale of Tears"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/author", "label": "won"}, {"uri": "http://dbpedia.org/ontology/award", "label": "awards"}, {"uri": "http://dbpedia.org/ontology/ComicsCreator", "label": "creator"}], "id": "214ff25fe3d84f69a29dc354d42a6207"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Carlene_Carter>  . }", "SerialNumber": "4662", "question": "What is father's name who also served in military of Carlene Carter?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Carlene_Carter", "label": "Carlene Carter"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/children", "label": "military"}], "id": "8c3a21bdc66d4755b75c98c498773f1e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harlan_Mathews> <http://dbpedia.org/ontology/almaMater> ?uri. <http://dbpedia.org/resource/Richard_Merrill_Atkinson> <http://dbpedia.org/ontology/almaMater> ?uri . }", "SerialNumber": "4663", "question": "In which university did Harlan Mathews study, where Richard Meriil Atkinson went too?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Harlan_Mathews", "label": "Harlan Mathews"}, {"uri": "http://dbpedia.org/resource/Richard_Merrill_Atkinson", "label": "atkinson richard"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/almaMater", "label": "Atkinson"}, {"uri": "http://dbpedia.org/ontology/almaMater", "label": "Atkinson"}], "id": "930ba27955d9475587dbbb75ffcae399"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/billed> <http://dbpedia.org/resource/Wisconsin> . ?x <http://dbpedia.org/ontology/trainer> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "4664", "question": "How many people have trained the wrestlers who were billed in Wisconsin?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Wisconsin", "label": "Wisconsin"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/billed", "label": "billed"}, {"uri": "http://dbpedia.org/ontology/trainer", "label": "trained"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "wrestlers"}], "id": "e36c53ecf3f04cf7a35675ce5ff859ea"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Chant\u00e9_mas> <http://dbpedia.org/ontology/stylisticOrigin> <http://dbpedia.org/resource/West_Africa> }", "SerialNumber": "4667", "question": "Did Chant Mas originate in West Africa?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chant\u00e9_mas", "label": "chant mas"}, {"uri": "http://dbpedia.org/resource/West_Africa", "label": "West Africa"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/stylisticOrigin", "label": "originate"}], "id": "df518a80342e4fb984830368c9884d96"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls> . ?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Los_Angeles_Clippers>  . }", "SerialNumber": "4671", "question": "Which current player of Chicago Bulls was drafted by Los Angeles Clippers ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chicago_Bulls", "label": "Chicago Bulls"}, {"uri": "http://dbpedia.org/resource/Los_Angeles_Clippers", "label": "Los Angeles Clippers"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/team", "label": "player"}, {"uri": "http://dbpedia.org/property/draftTeam", "label": "drafted"}], "id": "105528dc63e94de280ca2dd24c29a603"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cyril_Hume> <http://dbpedia.org/property/education> ?uri } ", "SerialNumber": "4675", "question": "tell me the school to which Cyril Hume went?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cyril_Hume", "label": "Cyril Hume"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/education", "label": "school"}], "id": "cd0e2088c4334a499439865a4b8605d1"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/2013_Central_American_Games> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}", "SerialNumber": "4676", "question": "Who has built the stadiums which were rented by the Central american games of 2013?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2013_Central_American_Games", "label": "american central games 2013"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/tenant", "label": "games"}, {"uri": "http://dbpedia.org/ontology/builder", "label": "built"}, {"uri": "http://dbpedia.org/ontology/Stadium", "label": "stadium"}], "id": "2518d2b2d1ac4e4fbd3d905d8ea634bd"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/International_Association_of_Universities> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }", "SerialNumber": "4677", "question": "Estimate the number of sports divisions at the universities under international association of universities.", "entity mapping": [{"uri": "http://dbpedia.org/resource/International_Association_of_Universities", "label": "international association of universities"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/affiliation", "label": "universities"}, {"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}], "id": "3f549a2b9eb34b59bd94ab9d9d2a60d2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/George_Roberts_Andrews> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }", "SerialNumber": "4679", "question": "What is sovereignity of the successor of Mr. George Robert Andrews ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/George_Roberts_Andrews", "label": "George Robert Andrews"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/successor", "label": "successor"}, {"uri": "http://dbpedia.org/ontology/country", "label": "Mr."}], "id": "600bf1ca0e93442ba5fa63154cf524a9"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Brian_Graden> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "4681", "question": "Which show developed by Brain Graden has theme music composed by Primus ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Brian_Graden", "label": "graden"}, {"uri": "http://dbpedia.org/resource/Primus_(band)", "label": "Primus"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/developer", "label": "developed by"}, {"uri": "http://dbpedia.org/property/themeMusicComposer", "label": "composed"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "aed72becd6f144b194afb38e15d9b5c2"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Diprotodontia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}", "SerialNumber": "4682", "question": "What mammals are classified into Diprotodontia ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Diprotodontia", "label": "Diprotodontia"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/order"}, {"uri": "http://dbpedia.org/ontology/Mammal", "label": "mammal"}], "id": "55b30011d61b4084beb7e4971374cac2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Rome> . ?x <http://dbpedia.org/ontology/successor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}", "SerialNumber": "4683", "question": "Who all have succeeded the kings buried in Rome?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Rome", "label": "Rome"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/placeOfBurial", "label": "buried in"}, {"uri": "http://dbpedia.org/ontology/successor", "label": "kings"}, {"uri": "http://dbpedia.org/ontology/Royalty", "label": "kings"}], "id": "acf96951be6c4bdda4d3fe9e77b9da55"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Monument_to_Salavat_Yulaev> <http://dbpedia.org/ontology/designer> ?x . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }", "SerialNumber": "4685", "question": "Where did the  designer of Monument to Salavat Yulaev die?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Monument_to_Salavat_Yulaev", "label": "Monument to Salavat Yulaev"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/designer", "label": "designer"}, {"uri": "http://dbpedia.org/property/placeOfDeath"}], "id": "e0c15d9cbe7d442b90853f84915861a9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/John_Smith_Griffin> <http://dbpedia.org/property/constituency> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . }", "SerialNumber": "4687", "question": "Where is the constituency of John Smith Griffin ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_Smith_Griffin", "label": "John Smith Griffin"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/constituency", "label": "constituency"}, {"uri": "http://dbpedia.org/ontology/location"}], "id": "bea54664fe0f4bb38b817c38546b103d"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Vandenberg_Air_Force_Base> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }", "SerialNumber": "4689", "question": "Which companies have launched from the Vandenberg Air Force Air base?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Vandenberg_Air_Force_Base", "label": "Vandenberg Air Force Air"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/launchSite", "label": "launched"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "base"}], "id": "55f6d1bfea1c4facbb55ebbb90805560"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Venkatraman_Ramakrishnan> . ?uri <http://dbpedia.org/property/prizes> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}", "SerialNumber": "4693", "question": " How many scientist have won an award by the society led by Venkatraman Ramakrishnan?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Venkatraman_Ramakrishnan", "label": "Venkatraman Ramakrishnan"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/leaderName", "label": "led"}, {"uri": "http://dbpedia.org/property/prizes", "label": "society"}, {"uri": "http://dbpedia.org/ontology/Scientist", "label": "scientist"}], "id": "84f2de8922174f768151cc95ffc13a23"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "4695", "question": "Which television show is based in Massachusetts and has opening theme as \"Where Everybody Knows Your Name\" ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name", "label": "Where Everybody Knows Your Name"}, {"uri": "http://dbpedia.org/resource/Massachusetts", "label": "Massachusetts"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/openingTheme", "label": "opening theme"}, {"uri": "http://dbpedia.org/ontology/location", "label": "based"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "television show"}], "id": "a94b8573bbf7434592b2463cc3700be8"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Guido_Guerrini> <http://dbpedia.org/property/currentTeam> ?uri. <http://dbpedia.org/resource/Massimo_Liverani> <http://dbpedia.org/property/currentTeam> ?uri . }", "SerialNumber": "4701", "question": "For which team do Guido Guerrini and Massimo Liverani currently play for?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Guido_Guerrini", "label": "Guido Guerrini"}, {"uri": "http://dbpedia.org/resource/Massimo_Liverani", "label": "Massimo Liverani"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/currentTeam", "label": "play"}, {"uri": "http://dbpedia.org/property/currentTeam", "label": "play"}], "id": "03a102b6e3c94e6d819336676a2e112d"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/ontology/publisher> ?x  . }", "SerialNumber": "4702", "question": "Which games publishers are located in California?", "entity mapping": [{"uri": "http://dbpedia.org/resource/California", "label": "California"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/location", "label": "located"}, {"uri": "http://dbpedia.org/ontology/publisher", "label": "publisher"}], "id": "10f14cccfbd949feb78ff964c2f44eb9"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Azure> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "4714", "question": "Name the company with product named Microsft Azure and provides OneDrive as a service ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Azure", "label": ""}, {"uri": "http://dbpedia.org/resource/OneDrive", "label": "OneDrive"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/product", "label": "product"}, {"uri": "http://dbpedia.org/property/services", "label": "service"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "company"}], "id": "05243a944c564231bfbdcc7577bf0492"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Siege_of_Fort_Meigs> <http://dbpedia.org/ontology/commander> ?uri. <http://dbpedia.org/resource/Battle_of_Fort_Stephenson> <http://dbpedia.org/ontology/commander> ?uri . }", "SerialNumber": "4716", "question": "Which famous commander led the Siege of forn meigs and was involved in the battle of fort stephenson?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Siege_of_Fort_Meigs", "label": "siege meigs fort"}, {"uri": "http://dbpedia.org/resource/Battle_of_Fort_Stephenson", "label": "battle of fort stephenson"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/commander", "label": "commander"}, {"uri": "http://dbpedia.org/ontology/commander", "label": "commander"}], "id": "11258ba9f4464dabb69a719605f61b78"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Teriitaria_II> <http://dbpedia.org/property/spouse> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }", "SerialNumber": "4721", "question": "Where did the partner of Teriitaria II die?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Teriitaria_II", "label": "Teriitaria II"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/spouse", "label": "partner"}, {"uri": "http://dbpedia.org/ontology/deathPlace", "label": "die"}], "id": "d03cf8ab9ba54ead94c0ab2b0355b918"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Andrew_Schally> <http://dbpedia.org/property/workInstitutions> ?uri. <http://dbpedia.org/resource/WTUL> <http://dbpedia.org/property/owner> ?uri} ", "SerialNumber": "4722", "question": "Which work institue of andrew Schally belongs to WTUL ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Andrew_Schally", "label": "andrew Schally"}, {"uri": "http://dbpedia.org/resource/WTUL", "label": "WTUL"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/workInstitutions", "label": "institue"}, {"uri": "http://dbpedia.org/property/owner", "label": "belongs to"}], "id": "e5fd26f8366941a1a8300ce006874f4c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Trinity_School,_Brentwood> <http://dbpedia.org/ontology/localAuthority> ?uri. <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri . }", "SerialNumber": "4726", "question": "Under which common jurisdiction do Trinity School, Brentwood and Buckhurst Hill County High School fall?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Trinity_School,_Brentwood", "label": "Trinity School, Brentwood"}, {"uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School", "label": "Buckhurst Hill County High School"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/localAuthority", "label": "fall"}, {"uri": "http://dbpedia.org/ontology/localAuthority", "label": "fall"}], "id": "28ad5ec354e644e4adfd4890503082b9"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C++>  . }", "SerialNumber": "4729", "question": "How many things are written in C++?", "entity mapping": [{"uri": "http://dbpedia.org/resource/C++", "label": "C++"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/programmingLanguage", "label": "written"}], "id": "79277088dda94649b2348c07d0dd17e5"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Rickenbacker>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}", "SerialNumber": "4730", "question": "How many artists play as Rickenbacker?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Rickenbacker", "label": "Rickenbacker"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/instrument", "label": "play"}, {"uri": "http://dbpedia.org/ontology/Artist", "label": "artist"}], "id": "4d5845bcd6044165bbcdfa12d79bd84d"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/Henry_Howard,_1st_Earl_of_Northampton> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . }", "SerialNumber": "4731", "question": "Who were the opponents of employees of Henry Howard, the Northampton Earl?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Henry_Howard,_1st_Earl_of_Northampton", "label": "northampton howard, henry earl"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/employer", "label": "Earl"}, {"uri": "http://dbpedia.org/ontology/opponent", "label": "opponent"}], "id": "5617f56ff171400ebf9650a950609f0c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Diprotodontia> . ?uri <http://dbpedia.org/ontology/phylum> <http://dbpedia.org/resource/Chordate>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}", "SerialNumber": "4732", "question": "List the mammals whose taxonomy is Diprotodontia and phylum is Chordate?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Diprotodontia", "label": "Diprotodontia"}, {"uri": "http://dbpedia.org/resource/Chordate", "label": "Chordate"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/order"}, {"uri": "http://dbpedia.org/ontology/phylum", "label": "phylum"}, {"uri": "http://dbpedia.org/ontology/Mammal", "label": "mammal"}], "id": "14fbed5378264537bb4a579854d59789"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia> . ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Ikelenge_District>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "4734", "question": "Name the river whose source region is North-Western Province, Zambia and source location is Ikelenge  District?", "entity mapping": [{"uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia", "label": "North-Western Province, Zambia"}, {"uri": "http://dbpedia.org/resource/Ikelenge_District", "label": "ikelenge district"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/sourceRegion", "label": "source region"}, {"uri": "http://dbpedia.org/property/sourceLocation", "label": "source location"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "bb053b427bf8492cabece4ccf6a9a256"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nice_&_Smooth> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Same_Song_(Digital_Underground_song)> <http://dbpedia.org/property/writer> ?uri . }", "SerialNumber": "4736", "question": "Which collaborator of Nice and Smooth wrote Same Song ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Nice_&_Smooth", "label": "smooth nice"}, {"uri": "http://dbpedia.org/resource/Same_Song_(Digital_Underground_song)", "label": "Same Song"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/associatedBand", "label": "and"}, {"uri": "http://dbpedia.org/property/writer", "label": "wrote"}], "id": "b4b6cd2e49ad4a12b209a01e1eab720b"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Screenwriter> . ?x <http://dbpedia.org/property/awards> ?uri  . }", "SerialNumber": "4741", "question": "How many awards have been given to screenwriters?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Screenwriter", "label": "screenwriter"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/occupation"}, {"uri": "http://dbpedia.org/property/awards", "label": "awards"}], "id": "a0c73428e66a4f2bb89939cc2149d2bf"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tremont_Avenue> <http://dbpedia.org/property/counties> ?uri } ", "SerialNumber": "4744", "question": "To which county of New York city does the Tremount Avenue street belong?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tremont_Avenue", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/counties", "label": "county"}], "id": "db2a89ff91b04227888c9c20728914c9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Bruce_Lee> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }", "SerialNumber": "4747", "question": "Where is the tomb of son of Bruce Lee?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Bruce_Lee", "label": "Bruce Lee"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/parent"}, {"uri": "http://dbpedia.org/ontology/restingPlace", "label": "tomb"}], "id": "e3f73674fbdd41a38021d60204f7196f"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Powell_(lacrosse)> <http://dbpedia.org/ontology/team> ?uri. <http://dbpedia.org/resource/Syracuse_University_Press> <http://dbpedia.org/property/parent> ?uri} ", "SerialNumber": "4752", "question": "Which university has a sports team member called Micheal Powell and also owns Syracuse University Press ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Powell_(lacrosse)", "label": "powell"}, {"uri": "http://dbpedia.org/resource/Syracuse_University_Press", "label": "Syracuse University Press"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/team", "label": "sports team"}, {"uri": "http://dbpedia.org/property/parent", "label": "owns"}], "id": "1c527306fea14763ad07d75de14f267f"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Delta_III> <http://dbpedia.org/ontology/manufacturer> ?uri. <http://dbpedia.org/resource/McDonnell_Douglas> <http://dbpedia.org/property/successor> ?uri} ", "SerialNumber": "4754", "question": "Whihc successor of McDonnell Douglas was built bu Delta 3 ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Delta_III", "label": "delta"}, {"uri": "http://dbpedia.org/resource/McDonnell_Douglas", "label": "McDonnell Douglas"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/manufacturer", "label": "Delta"}, {"uri": "http://dbpedia.org/property/successor", "label": "successor"}], "id": "8d5634ca304b423292db69a546b53974"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> ?uri. <http://dbpedia.org/resource/Sylvain_L\u00e9vi> <http://dbpedia.org/property/fields> ?uri} ", "SerialNumber": "4757", "question": "What is the religious affiliation of the Neungin High School which is also the academic interest of Sylvain Lvi ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Neungin_High_School", "label": "Neungin High School"}, {"uri": "http://dbpedia.org/resource/Sylvain_L\u00e9vi", "label": "sylvain"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/religiousAffiliation", "label": "religious affiliation"}, {"uri": "http://dbpedia.org/property/fields", "label": "Sylvain"}], "id": "23a3176ce04642ab9202377c16bb86d2"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Europe> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Oulu>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "SerialNumber": "4758", "question": "Which European sea has Oulu as one of the shore city ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Europe", "label": "Europe"}, {"uri": "http://dbpedia.org/resource/Oulu", "label": "Oulu"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/location", "label": "shore"}, {"uri": "http://dbpedia.org/property/cities", "label": "city"}, {"uri": "http://dbpedia.org/ontology/Sea", "label": "sea"}], "id": "d615e5224cae43fabb824a9522e63556"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dick_Redding> <http://dbpedia.org/property/birthDate> ?uri } ", "SerialNumber": "4763", "question": "In which province was Dick Redding born?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Dick_Redding", "label": "Dick Redding"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/birthDate", "label": "born"}], "id": "d90413f58c7e4ec4926d84d822483e59"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/engine> <http://dbpedia.org/resource/V8_engine> . ?x <http://dbpedia.org/property/related> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "SerialNumber": "4766", "question": "What are some cars related to the ones with a V8?", "entity mapping": [{"uri": "http://dbpedia.org/resource/V8_engine", "label": "V8"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/engine", "label": "cars"}, {"uri": "http://dbpedia.org/property/related", "label": "related"}, {"uri": "http://dbpedia.org/ontology/Automobile", "label": "cars"}], "id": "8bacd9f637114aacb4f912ee3339497c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Airman_first_class> . ?x <http://dbpedia.org/property/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "4767", "question": "Where is the person from whose military rank is Airman first class?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Airman_first_class", "label": "Airman first class"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/militaryRank", "label": "military rank"}, {"uri": "http://dbpedia.org/property/state"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "person"}], "id": "211240c6dae54cc2a76f849270ff99e9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Chicago,_St._Paul,_Minneapolis_and_Omaha_Railway> . ?x <http://dbpedia.org/ontology/operatedBy> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}", "SerialNumber": "4770", "question": "Who currently operates the railway lines one of whose stockholder is Chicago, St Paul, Minneapolis and Omaha railway?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chicago,_St._Paul,_Minneapolis_and_Omaha_Railway", "label": "minneapolis chicago, railway"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/owner", "label": "stockholder"}, {"uri": "http://dbpedia.org/ontology/operatedBy", "label": ""}, {"uri": "http://dbpedia.org/ontology/RailwayLine", "label": "railway line"}], "id": "7e5cf8ddee13481fb0d168850d0ba814"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Worcester_College,_Oxford> . ?x <http://dbpedia.org/ontology/field> ?uri  . }", "SerialNumber": "4771", "question": "In how many different people are alumini of the University of Oxford working?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Worcester_College,_Oxford", "label": "University of Oxford"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/almaMater", "label": "working"}, {"uri": "http://dbpedia.org/ontology/field", "label": "working"}], "id": "bbf6d77abc1d4097b5073835a08375a0"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fort_Heath_radar_station> <http://dbpedia.org/property/district> ?uri. <http://dbpedia.org/resource/Joseph_Story> <http://dbpedia.org/property/state> ?uri} ", "SerialNumber": "4772", "question": "Which district of Fort Heath radar station is also the state of Joesph Story ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fort_Heath_radar_station", "label": "Fort Heath radar station"}, {"uri": "http://dbpedia.org/resource/Joseph_Story", "label": "story"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/district", "label": "district"}, {"uri": "http://dbpedia.org/property/state", "label": "district"}], "id": "22bc7e7fb2b44679a76b1872370adf4c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/jurisdiction> <http://dbpedia.org/resource/German-occupied_Europe> . ?x <http://dbpedia.org/ontology/leader> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}", "SerialNumber": "4773", "question": "Who were the head of government agencies working in the German occupied Europe?", "entity mapping": [{"uri": "http://dbpedia.org/resource/German-occupied_Europe", "label": "German occupied Europe"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/jurisdiction", "label": "working"}, {"uri": "http://dbpedia.org/ontology/leader", "label": "working"}, {"uri": "http://dbpedia.org/ontology/GovernmentAgency", "label": "government"}], "id": "325df11498174809bd9488b134a0bf82"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Ragout_fin> <http://dbpedia.org/ontology/ingredient> ?uri  . }", "SerialNumber": "4774", "question": "How many ingedients are required to make the Ragout Fin?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ragout_fin", "label": "Ragout Fin"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/ingredient", "label": "make"}], "id": "edd0fb4fe2274a5fb2e3de95d13d2066"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Werner_Heisenberg> <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica> }", "SerialNumber": "4775", "question": "Is Serbian Titieca a doctoral student of Werner Heisenberghttp://dbpedia.org/resource/Werner_Heisenberg", "entity mapping": [{"uri": "http://dbpedia.org/resource/Werner_Heisenberg", "label": "Werner Heisenberg"}, {"uri": "http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/doctoralStudent", "label": "doctoral student"}], "id": "cd7f39c8d3324c20a0beff615cfa9063"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Randy_Jackson> . ?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "4776", "question": "What show has  judge as Randy Jackson sculptors as Simon Fuller?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Randy_Jackson", "label": "Randy Jackson"}, {"uri": "http://dbpedia.org/resource/Simon_Fuller", "label": "Simon Fuller"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/judges", "label": "judge"}, {"uri": "http://dbpedia.org/property/creator", "label": "sculptors"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "54ca819c32f845f1830c057254adb0e4"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cooper_Mountain_Vineyards> <http://dbpedia.org/ontology/location> ?uri. <http://dbpedia.org/resource/Mount_Bachelor_ski_area> <http://dbpedia.org/ontology/location> ?uri . }", "SerialNumber": "4778", "question": "Where are the cooper mountain vineyards and Mt. bachelor ski area located?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cooper_Mountain_Vineyards", "label": "cooper mountain vineyards"}, {"uri": "http://dbpedia.org/resource/Mount_Bachelor_ski_area", "label": "bachelor"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/location", "label": "located"}, {"uri": "http://dbpedia.org/ontology/location", "label": "located"}], "id": "35de725b9a904932a4c7cad2d4f6d3dd"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Western_pygmy_blue> <http://dbpedia.org/ontology/binomialAuthority> ?x . ?x <http://dbpedia.org/ontology/citizenship> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "4780", "question": "From which countries are the people from who are an academic authority of the Western pygmy blue species?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Western_pygmy_blue", "label": "Western pygmy blue"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/binomialAuthority", "label": "authority"}, {"uri": "http://dbpedia.org/ontology/citizenship", "label": "species"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "species"}], "id": "be8e6c435f1e4b00978abbd40786446f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Josh_Friedman> . ?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_Genisys>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "SerialNumber": "4782", "question": "Name the fictional character painted by Josh Friedman and portrayed in Terminator Genisys ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Josh_Friedman", "label": "Josh Friedman"}, {"uri": "http://dbpedia.org/resource/Terminator_Genisys", "label": "Terminator Genisys"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/creator"}, {"uri": "http://dbpedia.org/ontology/portrayer", "label": "portrayed"}, {"uri": "http://dbpedia.org/ontology/FictionalCharacter", "label": "fictional character"}], "id": "37ea4965d2b64433a69300a0f28f5c84"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Politician> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "4783", "question": "What is the total number of religions that politicians have followed?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Politician", "label": "politician"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/profession", "label": "number"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}], "id": "0954f05704294cdc948715c7348303d7"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Continental_Army> . ?x <http://dbpedia.org/property/president> ?uri  . }", "SerialNumber": "4787", "question": "For how many different presidents have people in the Continental Army served?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Continental_Army", "label": "Continental Army"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/branch", "label": "served"}, {"uri": "http://dbpedia.org/property/president", "label": "president"}], "id": "4bb6b234a89a4be49aac5792626314a1"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mongolian_legislative_election,_2004> <http://dbpedia.org/property/leader> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "4788", "question": "What is the religion of the president who won the Mongolian legislative election, 2004 ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mongolian_legislative_election,_2004", "label": "Mongolian legislative election, 2004"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/leader", "label": "won"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}], "id": "da38af790e6e4c63a38c8f834d67ca62"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maryanne_Trump_Barry> <http://dbpedia.org/ontology/relation> ?uri. <http://dbpedia.org/resource/Trump_Entertainment_Resorts> <http://dbpedia.org/ontology/keyPerson> ?uri . }", "SerialNumber": "4792", "question": "Which leader of Trump Entertainment Resorts is a relative of Maryanne Barry?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Maryanne_Trump_Barry", "label": "maryanne trump barry"}, {"uri": "http://dbpedia.org/resource/Trump_Entertainment_Resorts", "label": "Trump Entertainment Resorts"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/relation", "label": "Barry"}, {"uri": "http://dbpedia.org/ontology/keyPerson", "label": "Barry"}], "id": "ba66549d7ede4f90ad8fa7a436face6c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Barasat_(Lok_Sabha_constituency)> . ?x <http://dbpedia.org/ontology/party> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "4793", "question": "From which party is the politician who was selected  in Barasat constituency?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Barasat_(Lok_Sabha_constituency)", "label": "Barasat"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/constituency", "label": "constituency"}, {"uri": "http://dbpedia.org/ontology/party", "label": "party"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "selected"}], "id": "af0335e9c71440b287a6a62d2211645c"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mount_Hoffmann> <http://dbpedia.org/ontology/firstAscentPerson> <http://dbpedia.org/resource/John_Muir> }", "SerialNumber": "4796", "question": "Was John muir one of the first to ascend a mountain on Mt hoffmann?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mount_Hoffmann", "label": "hoffmann"}, {"uri": "http://dbpedia.org/resource/John_Muir", "label": "John muir"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/firstAscentPerson", "label": "first"}], "id": "168ccd9fd66449a2a3587324aa89e190"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/England_national_under-21_football_team> <http://dbpedia.org/property/coach> ?uri. <http://dbpedia.org/resource/2000\u201301_Aston_Villa_F.C._season> <http://dbpedia.org/property/name> ?uri} ", "SerialNumber": "4797", "question": "Which coach of England national under 21 footbal team is also the coach of Aston Villa F.C season ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/England_national_under-21_football_team", "label": "national footbal england under team"}, {"uri": "http://dbpedia.org/resource/2000\u201301_Aston_Villa_F.C._season", "label": "season villa aston"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/coach", "label": "coach"}, {"uri": "http://dbpedia.org/property/name", "label": "season"}], "id": "fab10ec7feeb4e3790ee4563b268c058"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Cricket> . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "SerialNumber": "4802", "question": "In how many countries are people born who play cricket?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cricket", "label": "cricket"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/occupation", "label": "play"}, {"uri": "http://dbpedia.org/ontology/stateOfOrigin"}, {"uri": "http://dbpedia.org/ontology/Country", "label": "countries"}], "id": "048f33e69989456e87cecd1566322fe2"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Perkins_School_for_the_Blind> . ?x <http://dbpedia.org/ontology/author> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>}", "SerialNumber": "4804", "question": "Who has authored books published by the Perkins school for the Blind?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Perkins_School_for_the_Blind", "label": "Perkins school for the Blind"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/publisher", "label": "published"}, {"uri": "http://dbpedia.org/ontology/author", "label": "author"}, {"uri": "http://dbpedia.org/ontology/WrittenWork", "label": "books"}], "id": "d4566c91a3a1479e8ed3152f7892af27"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Chaeng_Watthana_Government_Complex> . ?x <http://dbpedia.org/property/agencyName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "SerialNumber": "4806", "question": "Give me the name of the organization hqed at  Chaeng Watthana Govt Complex?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chaeng_Watthana_Government_Complex", "label": "watthana complex chaeng"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/headquarter", "label": "hq"}, {"uri": "http://dbpedia.org/property/agencyName", "label": "name"}, {"uri": "http://dbpedia.org/ontology/Organisation"}], "id": "3aba37a171704d5ebb0b4ae966a6d176"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/West_Sacramento,_California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}", "SerialNumber": "4807", "question": "Which footballers did their high school in west Sacramento california? ", "entity mapping": [{"uri": "http://dbpedia.org/resource/West_Sacramento,_California", "label": "Sacramento california"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/highSchool", "label": "high school"}, {"uri": "http://dbpedia.org/ontology/AmericanFootballPlayer", "label": "west"}], "id": "91ccac916105446b8d75a09eee63c100"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Microsoft_BASIC> <http://dbpedia.org/ontology/designer> ?uri. <http://dbpedia.org/resource/Language_Integrated_Query> <http://dbpedia.org/ontology/designer> ?uri . }", "SerialNumber": "4809", "question": "Which company created BASIC and Language Integrated Query ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_BASIC", "label": "basic"}, {"uri": "http://dbpedia.org/resource/Language_Integrated_Query", "label": "Language Integrated Query"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/designer", "label": "BASIC"}, {"uri": "http://dbpedia.org/ontology/designer", "label": "BASIC"}], "id": "b1b8eee4fef548d282895877658d0862"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/London> . ?x <http://dbpedia.org/ontology/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}", "SerialNumber": "4810", "question": "Who has recorded their singles in London?", "entity mapping": [{"uri": "http://dbpedia.org/resource/London", "label": "London"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/recordedIn", "label": "recorded in"}, {"uri": "http://dbpedia.org/ontology/writer", "label": "recorded"}, {"uri": "http://dbpedia.org/ontology/Single", "label": "single"}], "id": "2808134095db47bfaa55a5b9ae17a35e"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Wallace_and_Gromit> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "SerialNumber": "4812", "question": "What awards have been given to the writers of Wallace and Gromit?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Wallace_and_Gromit", "label": "Gromit"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/notableworks"}, {"uri": "http://dbpedia.org/ontology/award", "label": "awards"}, {"uri": "http://dbpedia.org/ontology/Writer", "label": "writers"}], "id": "249281ef2b90405aba4523fe74c3f855"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/material> <http://dbpedia.org/resource/Concrete> . ?x <http://dbpedia.org/ontology/builder> ?uri  . }", "SerialNumber": "4813", "question": "How many companies have built concrete bridges?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Concrete", "label": "concrete"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/material", "label": "bridges"}, {"uri": "http://dbpedia.org/ontology/builder", "label": "built"}], "id": "5fa75359b2f34008a02d32e4d86ae9f4"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alvin_Bell> <http://dbpedia.org/ontology/college> ?uri. <http://dbpedia.org/resource/Charles_Plosser> <http://dbpedia.org/property/almaMater> ?uri} ", "SerialNumber": "4814", "question": "What is the alma mater of Alvin Bell and Charles Plosser?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Alvin_Bell", "label": "Alvin Bell"}, {"uri": "http://dbpedia.org/resource/Charles_Plosser", "label": "Charles Plosser"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/college"}, {"uri": "http://dbpedia.org/property/almaMater", "label": "alma mater"}], "id": "a51285af64f54bbc8cc0e2548ad0b92f"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Michael_Jackson> . ?x <http://dbpedia.org/property/producer> ?uri  . }", "SerialNumber": "4815", "question": "How many producers have casted Michael Jackson?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Michael_Jackson", "label": "Michael Jackson"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/starring", "label": "casted"}, {"uri": "http://dbpedia.org/property/producer", "label": "producer"}], "id": "8679debda0a14d0a87042b3eb712b95b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Cookie> . ?x <http://dbpedia.org/property/creator> ?uri  . }", "SerialNumber": "4816", "question": "Who all have created new kinds of cookies?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cookie", "label": "cookie"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/type", "label": "kinds"}, {"uri": "http://dbpedia.org/property/creator", "label": "kinds"}], "id": "34cf6c9abf5c40c8a73553a1ea992f28"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/Terminator_(franchise)> . ?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_2:_Judgment_Day>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}", "SerialNumber": "4818", "question": "Name the fictional character who was in Terminator and portrayer is Terminator 2: Judgment Day?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Terminator_(franchise)", "label": "Terminator"}, {"uri": "http://dbpedia.org/resource/Terminator_2:_Judgment_Day", "label": "Terminator 2: Judgment Day"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/series", "label": "Day"}, {"uri": "http://dbpedia.org/ontology/portrayer", "label": "portrayer"}, {"uri": "http://dbpedia.org/ontology/FictionalCharacter", "label": "fictional character"}], "id": "c00fa42c4aa643d4aad94464399b60ea"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/affiliation> <http://dbpedia.org/resource/Christen-Democratisch_en_Vlaams> . ?uri <http://dbpedia.org/ontology/leaderName> ?x  . }", "SerialNumber": "4819", "question": "Whose mayors are affiliated with Christen-Democratisch en Vlaams?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Christen-Democratisch_en_Vlaams", "label": "Christen-Democratisch en Vlaams"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/affiliation", "label": "affiliated"}, {"uri": "http://dbpedia.org/ontology/leaderName", "label": "affiliated"}], "id": "8a1d6eb70486401e9b03768061fb6933"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Google_Web_Toolkit> <http://dbpedia.org/ontology/author> ?uri. <http://dbpedia.org/resource/PlayN> <http://dbpedia.org/ontology/author> ?uri . }", "SerialNumber": "4821", "question": "What company is the one which wrote the google web toolkit and PlayN?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Google_Web_Toolkit", "label": "google web toolkit"}, {"uri": "http://dbpedia.org/resource/PlayN", "label": "PlayN"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/author", "label": "wrote"}, {"uri": "http://dbpedia.org/ontology/author", "label": "wrote"}], "id": "f4f5ee1369484c24bff925aa0c0f67c5"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Tupelo,_Mississippi> . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "4824", "question": "Who fought in the battle at Tupelo Mississippi?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tupelo,_Mississippi", "label": "Tupelo Mississippi"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/place"}, {"uri": "http://dbpedia.org/property/combatant", "label": "battle"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "battle"}], "id": "e479ae7b3a9c4819b494827f01d6bc9a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Maharashtra> . ?x <http://dbpedia.org/property/purpose> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "SerialNumber": "4828", "question": "What is the purpose of some Maharashtran organizations?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Maharashtra", "label": "Maharashtra"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/headquarter", "label": "organizations"}, {"uri": "http://dbpedia.org/property/purpose", "label": "purpose"}, {"uri": "http://dbpedia.org/ontology/Organisation"}], "id": "dc71852033ea4aa78c0988a5a8353b08"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation> } ", "SerialNumber": "4829", "question": "which movies have been published by Cinema International Corporation?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Cinema_International_Corporation", "label": "Cinema International Corporation"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/distributor", "label": "published"}], "id": "e7b65b4aecc7437f80afe8be2d2a53eb"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ashot_Grashi> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }", "SerialNumber": "4830", "question": "Where the children of Ashot Grashi employed at?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ashot_Grashi", "label": "Ashot Grashi"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/parent"}, {"uri": "http://dbpedia.org/ontology/occupation", "label": "employed"}], "id": "5737744543d348468c3951fddb9f25e1"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Ae_Fond_Kiss> . ?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Halloween_(poem)> . }", "SerialNumber": "4831", "question": "Who is renowned for Ae Fond Kiss and poem of Halloween ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ae_Fond_Kiss", "label": "Ae Fond Kiss"}, {"uri": "http://dbpedia.org/resource/Halloween_(poem)", "label": "Halloween"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/notableworks"}, {"uri": "http://dbpedia.org/property/notableworks"}], "id": "91316e105d274bdbae3927a547e2020a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Steven_Moffat> . ?uri <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Science_fiction>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "4833", "question": "Which  science fiction show has Steven Moffat as executive producer ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Steven_Moffat", "label": "Steven Moffat"}, {"uri": "http://dbpedia.org/resource/Science_fiction", "label": "science fiction"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/executiveProducer", "label": "executive producer"}, {"uri": "http://dbpedia.org/property/genre"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "0fc6655da5464bec8b5a6df22edcaa86"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "SerialNumber": "4836", "question": "What cars were built upon the cars which were assembled in Canada?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Canada", "label": "Canada"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/assembly", "label": "assembled"}, {"uri": "http://dbpedia.org/ontology/predecessor", "label": "assembled"}, {"uri": "http://dbpedia.org/ontology/Automobile", "label": "assembled"}], "id": "1d60b0de9bd444dabe4c059c4f7fde5f"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/San_Salvador_Island> <http://dbpedia.org/ontology/archipelago> <http://dbpedia.org/resource/The_Bahamas> }", "SerialNumber": "4838", "question": "Is San Salvador Island a part of the Bahamas?", "entity mapping": [{"uri": "http://dbpedia.org/resource/San_Salvador_Island", "label": "San Salvador Island"}, {"uri": "http://dbpedia.org/resource/The_Bahamas", "label": "Bahamas"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/archipelago", "label": "part"}], "id": "c9bf804617e04cd194d2f8fcdad0d49c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/type> <http://dbpedia.org/resource/NASA> . ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}", "SerialNumber": "4840", "question": "Which  NASA astronaut was on mission Gemini 8?", "entity mapping": [{"uri": "http://dbpedia.org/resource/NASA", "label": "NASA"}, {"uri": "http://dbpedia.org/resource/Gemini_8", "label": "Gemini 8"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/type"}, {"uri": "http://dbpedia.org/property/mission", "label": "mission"}, {"uri": "http://dbpedia.org/ontology/Astronaut", "label": "astronaut"}], "id": "89d93ab9db184098bea7201d4e1f85c0"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Tales_of_Suspense> <http://dbpedia.org/property/writers> <http://dbpedia.org/resource/Stan_Lee> }", "SerialNumber": "4844", "question": "Did Stanlee write the Tales of Suspense?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tales_of_Suspense", "label": "Tales of Suspense"}, {"uri": "http://dbpedia.org/resource/Stan_Lee", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/writers", "label": "write"}], "id": "6ad08f71a43048129e0b566148bb3665"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/club> <http://dbpedia.org/resource/Middlesbrough_F.C.> . ?x <http://dbpedia.org/ontology/manager> ?uri  . }", "SerialNumber": "4845", "question": "Who is the head coach of the teams in Middlesbrough FC?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Middlesbrough_F.C.", "label": "Middlesbrough FC"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/club", "label": "teams"}, {"uri": "http://dbpedia.org/ontology/manager", "label": "coach"}], "id": "37ebf5a678ed42c3b38fc81a00ff30ff"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/South_Korean_legislative_election,_1992> <http://dbpedia.org/property/leader> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "4852", "question": "What is the religion of the leader of South Korean legislative election of 1992 ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/South_Korean_legislative_election,_1992", "label": "legislative election"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/leader", "label": "leader"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}], "id": "6f97fe98633b44dcb7ba31cf7719b380"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stanford_Cardinal> <http://dbpedia.org/ontology/university> ?uri. <http://dbpedia.org/resource/Gerald_Reaven> <http://dbpedia.org/ontology/institution> ?uri} ", "SerialNumber": "4853", "question": "to which university did both, the Stanford Cardinal and Gerald Reaven go?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Stanford_Cardinal", "label": "Stanford Cardinal"}, {"uri": "http://dbpedia.org/resource/Gerald_Reaven", "label": "Gerald Reaven"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/university", "label": "university"}, {"uri": "http://dbpedia.org/ontology/institution"}], "id": "9f8aa6229d504392a15d7e77b795aadd"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Mark_Davis_(American_football)> . ?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/O.co_Coliseum>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}", "SerialNumber": "4854", "question": "Which american football team is owned by Mark davis and is located in O.co Colliseum ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mark_Davis_(American_football)", "label": "Mark davis"}, {"uri": "http://dbpedia.org/resource/O.co_Coliseum", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/owner", "label": "is owned by"}, {"uri": "http://dbpedia.org/ontology/locationCity", "label": "Colliseum"}, {"uri": "http://dbpedia.org/ontology/AmericanFootballTeam", "label": "american football team"}], "id": "c357921ea8ff43fda72ad08c8e216ab8"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD> . ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "4855", "question": "Which BBC's TV show is related with the Sarah Jane Adventures?", "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC_HD", "label": ""}, {"uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures", "label": "the Sarah Jane Adventures"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/network", "label": "TV"}, {"uri": "http://dbpedia.org/ontology/related", "label": "related"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "17ca429ec4984bb7bc285f94d3de62b9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Autodromo_Enzo_e_Dino_Ferrari> . ?x <http://dbpedia.org/ontology/firstDriver> ?uri  . }", "SerialNumber": "4856", "question": "Who were the first drivers in the grand prix which took place at Autodromo Enzo e Dino Ferrari?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Autodromo_Enzo_e_Dino_Ferrari", "label": "Autodromo Enzo e Dino Ferrari"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/location", "label": "place"}, {"uri": "http://dbpedia.org/ontology/firstDriver", "label": "first driver"}], "id": "2c3931e9e39447a6a5313df14a8934b6"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "SerialNumber": "4857", "question": "How many cars succeed the cars assembled in Canada?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Canada", "label": "Canada"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/assembly", "label": "assembled"}, {"uri": "http://dbpedia.org/ontology/predecessor", "label": "assembled"}, {"uri": "http://dbpedia.org/ontology/Automobile", "label": "assembled"}], "id": "947e3ddd016d41a9b97ecc9eed2e370a"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Novelas_ejemplares> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}", "SerialNumber": "4858", "question": "How many books are written by the author who is famous for Novelas Ejemplares?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Novelas_ejemplares", "label": "Novelas Ejemplares"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/notableWork", "label": "famous"}, {"uri": "http://dbpedia.org/ontology/author", "label": "written by"}, {"uri": "http://dbpedia.org/ontology/Book", "label": "book"}], "id": "d813efbf28c848ec9859bbc3ad45e3ea"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/P._Sathyanarayanan> <http://dbpedia.org/property/birthplace> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "SerialNumber": "4859", "question": "What is the largest city of the country where P. Sathyanarayanan was born?", "entity mapping": [{"uri": "http://dbpedia.org/resource/P._Sathyanarayanan", "label": "P. Sathyanarayanan"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/birthplace", "label": "born"}, {"uri": "http://dbpedia.org/ontology/largestCity", "label": "largest city"}, {"uri": "http://dbpedia.org/ontology/Country", "label": "country"}], "id": "2f9db429754045d79c15661e9175997e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/ontology/board> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "4862", "question": "List the people whose are in the board of an organization kickstarted in New York.", "entity mapping": [{"uri": "http://dbpedia.org/resource/New_York", "label": "New York"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/foundation", "label": "kickstarted"}, {"uri": "http://dbpedia.org/ontology/board", "label": "board"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "kickstarted"}], "id": "f039556b67ef4cb1baad3d5fa816ba36"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/HBO> . ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Erik_Bork>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "4863", "question": "Which HBO's television series was produced by Erik Bork?", "entity mapping": [{"uri": "http://dbpedia.org/resource/HBO", "label": "HBO"}, {"uri": "http://dbpedia.org/resource/Erik_Bork", "label": "Erik Bork"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/distributor", "label": "series"}, {"uri": "http://dbpedia.org/ontology/producer", "label": "produced"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "television"}], "id": "43e17ab32b48408188702fc59b80e3d6"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/ontology/athletics> ?uri} ", "SerialNumber": "4864", "question": "List the common sports between Fr. Agnel Multipurpose School  and Jamiatu Muslim Mindanao", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College", "label": "multipurpose school"}, {"uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao", "label": "Jamiatu Muslim Mindanao"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/sport", "label": "sport"}, {"uri": "http://dbpedia.org/ontology/athletics", "label": "School"}], "id": "1e5190197e764ad2852ced4917575e45"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Rolv_Erik_Ryssdal> . ?uri <http://dbpedia.org/property/owners> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}", "SerialNumber": "4867", "question": "Which newspapers are owned by companies which are under Rolv Erik Ryssdal?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Rolv_Erik_Ryssdal", "label": "Rolv Erik Ryssdal"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/keyPerson", "label": "companies"}, {"uri": "http://dbpedia.org/property/owners", "label": "owned"}, {"uri": "http://dbpedia.org/ontology/Newspaper", "label": "newspaper"}], "id": "8784014ab7f14b28871e97a0df2a4200"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2009\u201310_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri. <http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri . }", "SerialNumber": "4869", "question": "Who coached the Marquette golden eagles men team in 09 to 10 and then again in 13 to 14 ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2009\u201310_Marquette_Golden_Eagles_men's_basketball_team", "label": "marquette golden eagles team men"}, {"uri": "http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team", "label": "marquette golden eagles team men"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/coach", "label": "coach"}, {"uri": "http://dbpedia.org/ontology/coach", "label": "coach"}], "id": "69fc05f2eb85472d8f28a6dec16cf0a8"}, {"sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/Taekwondo> . ?x <http://dbpedia.org/property/athletics> ?uri }", "SerialNumber": "4872", "question": "Count the number of sports played by university which also plays Taekwondo ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Taekwondo", "label": "Taekwondo"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/athletics", "label": "plays"}, {"uri": "http://dbpedia.org/property/athletics", "label": "plays"}], "id": "2ad75f9b93f64498968879d9c695fb02"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Championship_Snooker> <http://dbpedia.org/property/narrated> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }", "SerialNumber": "4873", "question": "Where did the narrators of the Championship snooker die?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Championship_Snooker", "label": "Championship snooker"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/narrated", "label": "die"}, {"uri": "http://dbpedia.org/ontology/deathPlace", "label": "die"}], "id": "b98192ce06ab477dbe39eb6081bfb58c"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Winnipeg_River> . ?x <http://dbpedia.org/property/location> ?uri  . }", "SerialNumber": "4874", "question": "Where is the lake located into which the Winnipeg River flows?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Winnipeg_River", "label": "Winnipeg River"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/outflow", "label": "flows"}, {"uri": "http://dbpedia.org/property/location", "label": "located"}], "id": "259c7da5ba2e4d11814879c79da16742"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Supachai_Somcharoen> . ?x <http://dbpedia.org/property/agencyName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}", "SerialNumber": "4875", "question": "Which government agency is run by Supachai Somcharoen?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Supachai_Somcharoen", "label": "Supachai Somcharoen"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/leader", "label": "run"}, {"uri": "http://dbpedia.org/property/agencyName", "label": "agency"}, {"uri": "http://dbpedia.org/ontology/GovernmentAgency", "label": "government agency"}], "id": "875e9a8ee0ce4454a79b9daa496dcbb6"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Grand_Bahama> <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/The_Bahamas> }", "SerialNumber": "4877", "question": "Is Grand Bahama lie in the achipelago of the bahamas?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Grand_Bahama", "label": "Grand Bahama"}, {"uri": "http://dbpedia.org/resource/The_Bahamas", "label": "bahamas"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/archipelago", "label": "lie"}], "id": "3b485c94a86c4c4e8a6f8929cc0dde2b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Colony_of_Virginia> . ?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "4879", "question": "Which colonel has allegiance to Colony of Virginia ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Colony_of_Virginia", "label": "Colony of Virginia"}, {"uri": "http://dbpedia.org/resource/Colonel_(United_States)", "label": "colonel"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/allegiance", "label": "allegiance"}, {"uri": "http://dbpedia.org/property/rank"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder"}], "id": "08e93b8d4249442b88762e1a51910088"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/United_States>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}", "SerialNumber": "4880", "question": "How many companies were started in the states?", "entity mapping": [{"uri": "http://dbpedia.org/resource/United_States", "label": "states"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/foundationPlace", "label": "states"}, {"uri": "http://dbpedia.org/ontology/Company", "label": "companies"}], "id": "f01fe449ce054eacad63ba079a2cdd2e"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Kaliningrad> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Gda\u0144sk> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}", "SerialNumber": "4885", "question": "What is the sea connected to Kaliningrad and Gdask?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kaliningrad", "label": "Kaliningrad"}, {"uri": "http://dbpedia.org/resource/Gda\u0144sk", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/cities", "label": "connected"}, {"uri": "http://dbpedia.org/property/cities", "label": "connected"}, {"uri": "http://dbpedia.org/ontology/Sea", "label": "sea"}], "id": "8595807efc4449d68eed8d38166a812a"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Alexander_Lippisch> . ?x <http://dbpedia.org/property/nationalOrigin> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}", "SerialNumber": "4886", "question": "From how many countries did the aeroplanes designed by Alexander Lippisch originate?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Alexander_Lippisch", "label": "Alexander Lippisch"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/designer", "label": "designed"}, {"uri": "http://dbpedia.org/property/nationalOrigin", "label": "originate"}, {"uri": "http://dbpedia.org/ontology/Country", "label": "countries"}], "id": "9d9692a4132c4495ae0f5931957e586b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/designCompany> <http://dbpedia.org/resource/NASA> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}", "SerialNumber": "4888", "question": "Who has manufactured vehicles designed originally by NASA?", "entity mapping": [{"uri": "http://dbpedia.org/resource/NASA", "label": "NASA"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/designCompany", "label": "designed"}, {"uri": "http://dbpedia.org/ontology/manufacturer", "label": "manufactured"}, {"uri": "http://dbpedia.org/ontology/Automobile", "label": "originally"}], "id": "b4e0d76805604866bf173ea2e1b23a30"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_Les_Paul>  . }", "SerialNumber": "4889", "question": "How many people are famous for the Gibson Les Paul?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Gibson_Les_Paul", "label": "Gibson Les Paul"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/notableInstruments", "label": "famous"}], "id": "fd5f1f21c5d84d139a078d7c277185cd"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Castro_District,_San_Francisco> . ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Haight-Ashbury> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}", "SerialNumber": "4890", "question": "Who is the office holder for constituencies  Castro District and Haight-Ashbury?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Castro_District,_San_Francisco", "label": "district"}, {"uri": "http://dbpedia.org/resource/Haight-Ashbury", "label": "Haight-Ashbury"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/constituency", "label": "constituencies"}, {"uri": "http://dbpedia.org/property/constituency", "label": "constituencies"}, {"uri": "http://dbpedia.org/ontology/OfficeHolder", "label": "office holder"}], "id": "a6ed413a6d5445999356286aac0836d9"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Schutzstaffel> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "SerialNumber": "4893", "question": "In how many places did the Schutzstaffels die?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Schutzstaffel", "label": "Schutzstaffel"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/militaryRank", "label": "die"}, {"uri": "http://dbpedia.org/property/placeOfDeath", "label": "places"}, {"uri": "http://dbpedia.org/ontology/Place", "label": "place"}], "id": "112be4e032d2473e8a45c73e9689419f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hang_Chuon_Naron> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Krom_Ngoy> <http://dbpedia.org/ontology/religion> ?uri . }", "SerialNumber": "4894", "question": "What faith do hang chuon naron and Kron Ngoy follow?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Hang_Chuon_Naron", "label": "hang chuon naron"}, {"uri": "http://dbpedia.org/resource/Krom_Ngoy", "label": "ngoy"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/religion", "label": "faith"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "faith"}], "id": "93b33f2e4d4f4d07a6dbd2be5baba794"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/William_W._Brien> . ?uri <http://dbpedia.org/ontology/residence> ?x  . }", "SerialNumber": "4895", "question": "Name the people living in a place governed by William W Brien?", "entity mapping": [{"uri": "http://dbpedia.org/resource/William_W._Brien", "label": "William W Brien"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/leaderName", "label": "name"}, {"uri": "http://dbpedia.org/ontology/residence", "label": "governed"}], "id": "6904a39015e041cdb5b9e4c8100f6f6a"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/IOS> . ?x <http://dbpedia.org/ontology/series> ?uri  . }", "SerialNumber": "4896", "question": "How many game series exist for iOS?", "entity mapping": [{"uri": "http://dbpedia.org/resource/IOS", "label": "iOS"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/computingPlatform", "label": "exist"}, {"uri": "http://dbpedia.org/ontology/series", "label": "series"}], "id": "4e15567ee9b34922b7ffeb5e3b835c65"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)> <http://dbpedia.org/property/narrated> ?uri } ", "SerialNumber": "4897", "question": "Who is the narrator of The Incredible Hulk , 1982 TV series ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)", "label": "The Incredible Hulk"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/narrated", "label": "series"}], "id": "c43336ea3f5f4a078eae1b1cdbb23ae0"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/St._Peter's_Basilica> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Pope>}", "SerialNumber": "4900", "question": "What is the location of the pope whose major shrine is St. Peter's Basilica ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/St._Peter's_Basilica", "label": "St. Peter's Basilica"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/majorShrine", "label": "major shrine"}, {"uri": "http://dbpedia.org/property/birthPlace", "label": "location"}, {"uri": "http://dbpedia.org/ontology/Pope", "label": "pope"}], "id": "5e448ee7e7a347909af9a05fd941d609"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Lake_Washington> . ?x <http://dbpedia.org/property/sourceLocation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "4902", "question": "Where does the rivers ending in lake washington begin?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Lake_Washington", "label": "lake washington"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/riverMouth", "label": "rivers"}, {"uri": "http://dbpedia.org/property/sourceLocation", "label": "begin"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "c4b41b17bd6e461f9bab1fd5d18fb1cb"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/FedExField> <http://dbpedia.org/ontology/operator> ?uri } ", "SerialNumber": "4903", "question": "What is operated by FedExField ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/FedExField", "label": "FedExField"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/operator", "label": "operated"}], "id": "26c83a9e8dd7414ba4b9740120278949"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Edsel_Villager> . ?x <http://dbpedia.org/property/parent> ?uri  . }", "SerialNumber": "4904", "question": "Who owns the company that made the Edsel Villager?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Edsel_Villager", "label": "Edsel Villager"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/products", "label": "made"}, {"uri": "http://dbpedia.org/property/parent", "label": "made"}], "id": "c3101002a14d4415b13183cee4ce5c19"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Sierra_Madre_de_Chiapas> . ?x <http://dbpedia.org/property/mouthCountry> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "4905", "question": "Where does the river flow into, which starts at the Sierra Madre de Chiapas?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sierra_Madre_de_Chiapas", "label": "Sierra Madre de Chiapas"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/source", "label": "starts"}, {"uri": "http://dbpedia.org/property/mouthCountry", "label": "starts"}, {"uri": "http://dbpedia.org/ontology/River", "label": "river"}], "id": "22fd27d058e34064ab9f3f5f1a1a85b9"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/BBC_Multimedia> <http://dbpedia.org/ontology/product> ?uri. <http://dbpedia.org/resource/Doctor_Who:_The_Mazes_of_Time> <http://dbpedia.org/ontology/series> ?uri} ", "SerialNumber": "4908", "question": "What series is Mazes of Time from, and is produced by BBC multimedia?", "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC_Multimedia", "label": "BBC multimedia"}, {"uri": "http://dbpedia.org/resource/Doctor_Who:_The_Mazes_of_Time", "label": "mazes"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/product", "label": "produced"}, {"uri": "http://dbpedia.org/ontology/series", "label": "series"}], "id": "a600e69fac2b46a58ff1d1fe22877e45"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Doonesbury_(musical)> <http://dbpedia.org/ontology/lyrics> ?uri } ", "SerialNumber": "4909", "question": "WHo gave the lyrcis of Doonesbury ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Doonesbury_(musical)", "label": "Doonesbury"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/lyrics"}], "id": "e1a45956b7a142a8bf2eef25850435d5"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Phelps_Taft_II> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Robert_A._Taft> . }", "SerialNumber": "4911", "question": "Who are the parents of  Charles Phelps Taft II and Robert A. Taft?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Charles_Phelps_Taft_II", "label": "Charles Phelps Taft II"}, {"uri": "http://dbpedia.org/resource/Robert_A._Taft", "label": "Robert A. Taft"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/child", "label": "parents"}, {"uri": "http://dbpedia.org/ontology/child", "label": "parents"}], "id": "db1c3fdf8d784274b4e27db7dd62b263"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Plymouth_Savoy> <http://dbpedia.org/ontology/assembly> ?uri. <http://dbpedia.org/resource/North\u2013South_Transport_Corridor> <http://dbpedia.org/ontology/routeEnd> ?uri} ", "SerialNumber": "4914", "question": "Which assembly of the Plymouth Savoy is the route end of the NorthSouth Transport Corridor?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Plymouth_Savoy", "label": "Plymouth Savoy"}, {"uri": "http://dbpedia.org/resource/North\u2013South_Transport_Corridor", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/assembly", "label": "assembly"}, {"uri": "http://dbpedia.org/ontology/routeEnd", "label": "route end"}], "id": "5bf74194f313453a92938a6069178a82"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Fender_Stratocaster> . ?uri <http://dbpedia.org/property/currentMembers> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}", "SerialNumber": "4915", "question": "Name the band atleast one of whose members is famous for playing the Fender Stratocaster?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Fender_Stratocaster", "label": "Fender Stratocaster"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/notableInstruments", "label": "playing"}, {"uri": "http://dbpedia.org/property/currentMembers", "label": "members"}, {"uri": "http://dbpedia.org/ontology/Band", "label": "band"}], "id": "433e3e8781da456b9fc1184bb9815b88"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Chelsea_F.C.>  . }", "SerialNumber": "4918", "question": "Who owns Chelsea F.C.?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Chelsea_F.C.", "label": "Chelsea F.C."}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/occupation", "label": "owns"}], "id": "5901e1cf900d4564b0ad6a25eb733684"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Kingdom_of_Israel_(united_monarchy)> } ", "SerialNumber": "4919", "question": "During the reigns of which monarchs was the name to the  Israelite kingdom as United Monarch?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Kingdom_of_Israel_(united_monarchy)", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/title", "label": "Monarch"}], "id": "d3ccc70090cb4f15a0c1e6340f773d93"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Malaysian_Public_Works_Department> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "SerialNumber": "4920", "question": "Tell me the total number of organizations who maintain the bridges made by the malaysian PWD?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Malaysian_Public_Works_Department", "label": "malaysian"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/designer", "label": "PWD"}, {"uri": "http://dbpedia.org/ontology/maintainedBy", "label": "maintain"}, {"uri": "http://dbpedia.org/ontology/Organisation"}], "id": "396cc549a7c941308fc6490554d328b0"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> . ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS> . }", "SerialNumber": "4923", "question": "list the  software which works on both the OS  - Microsoft Windows and Mac OS ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Microsoft_Windows", "label": "Microsoft Windows"}, {"uri": "http://dbpedia.org/resource/Mac_OS", "label": "Mac OS"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/operatingSystem", "label": "OS"}, {"uri": "http://dbpedia.org/ontology/operatingSystem", "label": "OS"}], "id": "090fdd1b6e04464eb2afffb08d7868dd"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Palang_Dharma_Party> <http://dbpedia.org/ontology/ideology> ?uri. <http://dbpedia.org/resource/Miao_people> <http://dbpedia.org/ontology/religion> ?uri} ", "SerialNumber": "4926", "question": "Which idelogy of the Palang Dharma Party is also the  faith of Miao people ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Palang_Dharma_Party", "label": "Palang Dharma Party"}, {"uri": "http://dbpedia.org/resource/Miao_people", "label": "Miao people"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/ideology"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "faith"}], "id": "276666cb2dd442d29983656956c65930"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Judge_Advocate_General's_Corps,_United_States_Army> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }", "SerialNumber": "4928", "question": "Where did the members of judge advocate general corps study?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Judge_Advocate_General's_Corps,_United_States_Army", "label": "advocate general judge corps"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/militaryRank", "label": "study"}, {"uri": "http://dbpedia.org/ontology/almaMater", "label": "study"}], "id": "ca35959e3aa54d29a210ae778908d977"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/hairColor> <http://dbpedia.org/resource/Brown_hair> . ?x <http://dbpedia.org/ontology/residence> ?uri  . }", "SerialNumber": "4930", "question": "In how many different places are Brown haired models living?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Brown_hair", "label": "Brown hair"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/hairColor", "label": "haired"}, {"uri": "http://dbpedia.org/ontology/residence", "label": "living"}], "id": "7544359cc60644078fbfd6ee91abdf55"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Solon_Spencer_Beman> . ?x <http://dbpedia.org/property/locationTown> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}", "SerialNumber": "4931", "question": "Solon Spencer Beman has architected in how many cities?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Solon_Spencer_Beman", "label": "Solon Spencer Beman"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/architect", "label": "architect"}, {"uri": "http://dbpedia.org/property/locationTown", "label": "cities"}, {"uri": "http://dbpedia.org/ontology/City", "label": "in"}], "id": "901504aad5414f9b8ea3323d9f9f9e3a"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1967_Mexican_Grand_Prix> <http://dbpedia.org/property/firstTeam> ?uri. <http://dbpedia.org/resource/1971_United_States_Grand_Prix> <http://dbpedia.org/property/firstTeam> ?uri . }", "SerialNumber": "4932", "question": "What was a common first team at the 1967 Mexican Grand Prix and 1971 US one?", "entity mapping": [{"uri": "http://dbpedia.org/resource/1967_Mexican_Grand_Prix", "label": "1967 Mexican Grand Prix"}, {"uri": "http://dbpedia.org/resource/1971_United_States_Grand_Prix", "label": "grand prix 1971"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/firstTeam", "label": "first team"}, {"uri": "http://dbpedia.org/property/firstTeam", "label": "first team"}], "id": "6bfad60b196445aea7c5be7ba2412166"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sam_Sen_Railway_Station> <http://dbpedia.org/property/other> ?uri } ", "SerialNumber": "4933", "question": "What is the location of Sam Sen Railway Station ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Sam_Sen_Railway_Station", "label": "Sam Sen"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/other", "label": "Station"}], "id": "3eedc8d9fc1842a88f9158d88e77eb21"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/City_of_Newcastle> . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}", "SerialNumber": "4934", "question": "In how many places have the companies started in Newcastle worked?", "entity mapping": [{"uri": "http://dbpedia.org/resource/City_of_Newcastle", "label": "Newcastle"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/foundationPlace", "label": "places"}, {"uri": "http://dbpedia.org/ontology/regionServed", "label": "worked"}, {"uri": "http://dbpedia.org/ontology/Place", "label": "place"}], "id": "d3003f279fce43c2bd590feb5ea35a89"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Tehran> . ?x <http://dbpedia.org/ontology/product> ?uri  . }", "SerialNumber": "4935", "question": "How many things are produced by companies located in Tehran?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Tehran", "label": "Tehran"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/location", "label": "located"}, {"uri": "http://dbpedia.org/ontology/product", "label": "located"}], "id": "2c4dcb51677a45c2b824fb2b6faee585"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mickey's_Mellerdrammer> <http://dbpedia.org/property/cinematography> ?uri. <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/property/animator> ?uri} ", "SerialNumber": "4937", "question": "Who was the director of photography of Mickey's Mellerdrammer and the animator of Tommy Tucker's Tooth?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Mickey's_Mellerdrammer", "label": "Mickey's Mellerdrammer"}, {"uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth", "label": "Tommy Tucker's Tooth"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/cinematography", "label": "photography"}, {"uri": "http://dbpedia.org/property/animator", "label": "animator"}], "id": "c750e7c0608b41ceb0f89a608bc35174"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/Quich\u00e9_Department> . ?x <http://dbpedia.org/ontology/origin> ?uri  . }", "SerialNumber": "4938", "question": "Name the origins of the river with Quich Department as one of the origin ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Quich\u00e9_Department", "label": "department quich"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/origin", "label": "origin"}, {"uri": "http://dbpedia.org/ontology/origin", "label": "origin"}], "id": "da6a53f6df164501ac3e5ca040d30802"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> . ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8> . }", "SerialNumber": "4939", "question": "Who was in the missions of Apollo 11 and Gemini 8?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Apollo_11", "label": "Apollo 11"}, {"uri": "http://dbpedia.org/resource/Gemini_8", "label": "Gemini 8"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mission", "label": "mission"}, {"uri": "http://dbpedia.org/property/mission", "label": "mission"}], "id": "4f474c1d102d429188592e6442f0dc85"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wizards_vs_Aliens> <http://dbpedia.org/ontology/producer> ?uri. <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/ontology/notableWork> ?uri} ", "SerialNumber": "4944", "question": "Which producer of Wizards and the aliens is also the notable work of russell T Davies ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Wizards_vs_Aliens", "label": "wizards aliens"}, {"uri": "http://dbpedia.org/resource/Russell_T_Davies", "label": "russell T Davies"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/producer", "label": "producer"}, {"uri": "http://dbpedia.org/ontology/notableWork", "label": "notable work"}], "id": "3b829598cada4093999a79cba952861b"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Arkansas> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}", "SerialNumber": "4945", "question": "Rivers which end in Arkansas go through which cities?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Arkansas", "label": "Arkansas"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/mouthMountain", "label": "cities"}, {"uri": "http://dbpedia.org/ontology/city", "label": "in"}, {"uri": "http://dbpedia.org/ontology/River", "label": "River"}], "id": "1f3d2c8c9b824f60ab080077dcff3dc9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ceratosoma_tenue> <http://dbpedia.org/ontology/binomialAuthority> ?x . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . }", "SerialNumber": "4946", "question": "What is the religion of the academic authority on Ceratosoma tenue?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ceratosoma_tenue", "label": "Ceratosoma tenue"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/binomialAuthority", "label": "authority"}, {"uri": "http://dbpedia.org/property/veneratedIn", "label": "academic"}], "id": "aaded2628d52480a81d952c6157fbd13"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Riley_Reid> <http://dbpedia.org/property/ethnicity> ?uri. <http://dbpedia.org/resource/Holmes_Colbert> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ", "SerialNumber": "4947", "question": "Which ethinicity of  Riley Reid is the state of origin of Holmes Colbert?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Riley_Reid", "label": "Riley Reid"}, {"uri": "http://dbpedia.org/resource/Holmes_Colbert", "label": "Holmes Colbert"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/ethnicity"}, {"uri": "http://dbpedia.org/ontology/stateOfOrigin", "label": "state of origin"}], "id": "6b2c6038daa7480ea340b9f0afc64454"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/place> <http://dbpedia.org/resource/Ohio> . ?x <http://dbpedia.org/ontology/commander> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}", "SerialNumber": "4952", "question": "Who all have been a commander during the battles of Ohio?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ohio", "label": "Ohio"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/place"}, {"uri": "http://dbpedia.org/ontology/commander", "label": "commander"}, {"uri": "http://dbpedia.org/ontology/MilitaryConflict", "label": "battles"}], "id": "fbb1dc5dc78144d4b151528772891c5a"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_O'Connor_(archbishop_of_New_York)> <http://dbpedia.org/ontology/almaMater> ?uri } ", "SerialNumber": "4953", "question": "Where did john o conner study?", "entity mapping": [{"uri": "http://dbpedia.org/resource/John_O'Connor_(archbishop_of_New_York)", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/almaMater", "label": "study"}], "id": "44b54ea88b4c437bbca297ca3c04a6d3"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Jimmy_Wales> . ?x <http://dbpedia.org/ontology/owner> ?uri  . }", "SerialNumber": "4955", "question": "Who owns the websites for which Jimmy wales writes?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Jimmy_Wales", "label": "Jimmy wales"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/author", "label": "writes"}, {"uri": "http://dbpedia.org/ontology/owner", "label": "owns"}], "id": "0d41f404ff594266aac5f28f38fdb49f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ted_Williams_Tunnel> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/Leonard_P._Zakim_Bunker_Hill_Memorial_Bridge> <http://dbpedia.org/property/owner> ?uri . }", "SerialNumber": "4956", "question": "Which city council owns the Ted Williams tunnel and Leonard Memorial ridge?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Ted_Williams_Tunnel", "label": "Ted Williams tunnel"}, {"uri": "http://dbpedia.org/resource/Leonard_P._Zakim_Bunker_Hill_Memorial_Bridge", "label": "memorial leonard ridge"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/owner", "label": "owns"}, {"uri": "http://dbpedia.org/property/owner", "label": "owns"}], "id": "92f7bcc8b88145149f59ce244d965e37"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Yosemite_National_Park> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "4958", "question": "How many people have been the first one to scale a peak in the Yosemite Park?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Yosemite_National_Park", "label": "Yosemite"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/locatedInArea", "label": "in"}, {"uri": "http://dbpedia.org/ontology/firstAscentPerson", "label": "first"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "Park"}], "id": "8ccd8b60f2ef4e8bb9158dd030afb484"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Levant> . ?x <http://dbpedia.org/property/battles> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}", "SerialNumber": "4959", "question": "Name the battle fought by the people which also fought in Levant ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Levant", "label": "Levant"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/battles", "label": "battle"}, {"uri": "http://dbpedia.org/property/battles", "label": "battle"}, {"uri": "http://dbpedia.org/ontology/Person", "label": "fought"}], "id": "aad9f9ceb4364ee9b570d43ca42ce29c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Awakening_(1980_film)> <http://dbpedia.org/property/starring> ?uri. <http://dbpedia.org/resource/55_Days_at_Peking> <http://dbpedia.org/ontology/starring> ?uri . }", "SerialNumber": "4960", "question": "Who starred in Awakening and fifety five days at peknig ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/The_Awakening_(1980_film)", "label": "awakening"}, {"uri": "http://dbpedia.org/resource/55_Days_at_Peking", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/property/starring", "label": "starred"}, {"uri": "http://dbpedia.org/ontology/starring", "label": "starred"}], "id": "c1e28310cb5443f18804bfc7fb1af725"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Le_Cirque:_A_Table_in_Heaven> <http://dbpedia.org/property/starring> ?uri. <http://dbpedia.org/resource/Maryanne_Trump_Barry> <http://dbpedia.org/ontology/relation> ?uri} ", "SerialNumber": "4964", "question": "What actor of Le Cirque is a relative of Maryanne Trump barry?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Le_Cirque:_A_Table_in_Heaven", "label": "cirque"}, {"uri": "http://dbpedia.org/resource/Maryanne_Trump_Barry", "label": "Maryanne Trump barry"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/starring", "label": "actor"}, {"uri": "http://dbpedia.org/ontology/relation", "label": "relative"}], "id": "649d452e63834157a29c6a1db0e777fa"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Toronto>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "SerialNumber": "4965", "question": "How many buildings are located in Toronto ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Toronto", "label": "Toronto"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/location", "label": "located"}, {"uri": "http://dbpedia.org/ontology/Building", "label": "building"}], "id": "6a6a9694fbb44140ada81d7a8c89aa0f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick> . ?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Laurie_Johnson>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}", "SerialNumber": "4966", "question": "List the Stanley Kubrick's movies which has music by Laurie Johnson  ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Stanley_Kubrick", "label": "Stanley Kubrick"}, {"uri": "http://dbpedia.org/resource/Laurie_Johnson", "label": "Laurie Johnson"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/director"}, {"uri": "http://dbpedia.org/property/music", "label": "music"}, {"uri": "http://dbpedia.org/ontology/Film", "label": "movie"}], "id": "d5f39362abb34bc4a563caa4d12fa4ce"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Battle_of_the_Bulge> . ?x <http://dbpedia.org/ontology/relation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}", "SerialNumber": "4970", "question": "What are some relatives of Battle of the Bulge veterans?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Battle_of_the_Bulge", "label": "Battle of the Bulge"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/battles", "label": "battle"}, {"uri": "http://dbpedia.org/ontology/relation", "label": "veterans"}, {"uri": "http://dbpedia.org/ontology/MilitaryPerson", "label": "veterans"}], "id": "219e980d18d243f3a491b427da37633b"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Erich_Bagge> . ?uri <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica> . }", "SerialNumber": "4975", "question": "What is the scientist whose doctoral students are Erich Bagge and erban ieica?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Erich_Bagge", "label": "Erich Bagge"}, {"uri": "http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica", "label": ""}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/doctoralStudent", "label": "doctoral student"}, {"uri": "http://dbpedia.org/ontology/doctoralStudent", "label": "doctoral student"}], "id": "10c135a7b31546cc91c3dacf6c470b5c"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> . ?uri <http://dbpedia.org/property/type> <http://dbpedia.org/resource/NASA>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}", "SerialNumber": "4976", "question": " Who astronaut from NASA was on the mission of Apollo 11?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Apollo_11", "label": "Apollo 11"}, {"uri": "http://dbpedia.org/resource/NASA", "label": "NASA"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mission", "label": "mission"}, {"uri": "http://dbpedia.org/property/type"}, {"uri": "http://dbpedia.org/ontology/Astronaut", "label": "astronaut"}], "id": "3b7d789c05074466884d8e0d189d97c4"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Amiga> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}", "SerialNumber": "4979", "question": "Games on amiga are typically of what kind?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Amiga", "label": "amiga"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/computingPlatform", "label": "games"}, {"uri": "http://dbpedia.org/property/genre", "label": "kind"}, {"uri": "http://dbpedia.org/ontology/VideoGame", "label": "games"}], "id": "c26fb222e05a44ed915b27a0b62b1f35"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Saunders_County,_Nebraska> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stream>}", "SerialNumber": "4982", "question": "Through which states does the stream ending at Saunders county go?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Saunders_County,_Nebraska", "label": "Saunders county"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/mouthLocation", "label": "ending"}, {"uri": "http://dbpedia.org/ontology/state", "label": "county"}, {"uri": "http://dbpedia.org/ontology/Stream", "label": "stream"}], "id": "ac2cdf6aeebd49aba3049d487a9ce8a1"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Miao_Rebellion_(1795\u20131806)> <http://dbpedia.org/property/combatant> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }", "SerialNumber": "4983", "question": "Which religions' people fought in the Miao rebellion?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Miao_Rebellion_(1795\u20131806)", "label": "Miao rebellion"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/combatant", "label": "fought"}, {"uri": "http://dbpedia.org/ontology/religion", "label": "religion"}], "id": "5bba92da3db5463eb604709023bbdce3"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/languageFamily> <http://dbpedia.org/resource/Italic_languages> } ", "SerialNumber": "4984", "question": "What are some languages in the italic family of languages?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Italic_languages", "label": "languages italic"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/languageFamily", "label": "family"}], "id": "639d2cebd1c947d086337507434c201d"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/BBC_Multimedia> <http://dbpedia.org/ontology/product> ?uri. <http://dbpedia.org/resource/Visions_(convention)> <http://dbpedia.org/property/genre> ?uri} ", "SerialNumber": "4985", "question": "What is the product of the BBC Multimedia and is the theme of Visions, the convention?", "entity mapping": [{"uri": "http://dbpedia.org/resource/BBC_Multimedia", "label": "BBC Multimedia"}, {"uri": "http://dbpedia.org/resource/Visions_(convention)", "label": "Visions, the convention"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/product", "label": "product"}, {"uri": "http://dbpedia.org/property/genre", "label": "theme of"}], "id": "bef5d2d4a45a4e84bdc7a586d4247c3c"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Donna_Shalala> . ?x <http://dbpedia.org/property/keyPeople> ?uri  . }", "SerialNumber": "4986", "question": "How many people hold important positions alongwith Donna Shalala?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Donna_Shalala", "label": "Donna Shalala"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/keyPerson", "label": "important positions"}, {"uri": "http://dbpedia.org/property/keyPeople", "label": "people"}], "id": "aa9357296bd640539d42bcd5e05bca8a"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Weber_Thompson> . ?x <http://dbpedia.org/property/address> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}", "SerialNumber": "4988", "question": "Where do I find buildings rented by Weber Thompson?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Weber_Thompson", "label": "Weber Thompson"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/tenant", "label": "rented"}, {"uri": "http://dbpedia.org/property/address", "label": "Where"}, {"uri": "http://dbpedia.org/ontology/Building", "label": "building"}], "id": "c002ce3102a6429a849b2bc1c63213c8"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edith_Vonnegut>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}", "SerialNumber": "4989", "question": "Who is the father of Edith Vonnegut and is also a writer?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Edith_Vonnegut", "label": "Edith Vonnegut"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/child", "label": "father"}, {"uri": "http://dbpedia.org/ontology/Writer", "label": "writer"}], "id": "ab3856e5604443d1967a40d89f070cc9"}, {"sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Amstelveen> . ?x <http://dbpedia.org/property/membership> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}", "SerialNumber": "4994", "question": "Who are the members of organizations headquartered at Amstelveen?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Amstelveen", "label": "Amstelveen"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/headquarters", "label": "headquarter"}, {"uri": "http://dbpedia.org/property/membership", "label": "members"}, {"uri": "http://dbpedia.org/ontology/Organisation", "label": "organizations"}], "id": "824317de97054fe7b674e6cf7d41721f"}, {"sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski> . ?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/TNT_(TV_channel)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}", "SerialNumber": "4997", "question": "Name the show formed by J. Michael Stroczynski and had network as TNT ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/J._Michael_Straczynski", "label": "J. Michael Stroczynski"}, {"uri": "http://dbpedia.org/resource/TNT_(TV_channel)", "label": "TNT"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/developer", "label": "formed by"}, {"uri": "http://dbpedia.org/property/network", "label": "network"}, {"uri": "http://dbpedia.org/ontology/TelevisionShow", "label": "show"}], "id": "03dc94e9c928474f91e0414b14f9e1e4"}, {"sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/field> <http://dbpedia.org/resource/Varsity_Stadium> . ?uri <http://dbpedia.org/ontology/formerTeam> ?x  . }", "SerialNumber": "4998", "question": "Count all those who previously played for a team which ownes Varsity Stadium ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Varsity_Stadium", "label": "Varsity Stadium"}], "predicate mapping": [{"uri": "http://dbpedia.org/property/field", "label": "ownes"}, {"uri": "http://dbpedia.org/ontology/formerTeam", "label": "team for"}], "id": "2ca6c46d4387400999f62cc8354d3f73"}, {"sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Robin_Kovacs> <http://dbpedia.org/ontology/prospectTeam> <http://dbpedia.org/resource/New_York_Rangers> }", "SerialNumber": "4999", "question": "Is NY Rangers a prospective team for Robin Kovacs?", "entity mapping": [{"uri": "http://dbpedia.org/resource/Robin_Kovacs", "label": "Robin Kovacs"}, {"uri": "http://dbpedia.org/resource/New_York_Rangers", "label": "NY Rangers"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/prospectTeam", "label": "team"}], "id": "2b9759c6010b4d4181dbad7e72db419c"}, {"sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri. <http://dbpedia.org/resource/2008\u201309_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/property/headcoach> ?uri} ", "SerialNumber": "5000", "question": "Which headcoach of Marquette Golden Eagles men's basketball team, 2008-09 was also the coach of Marquette Golden Eagles team ?", "entity mapping": [{"uri": "http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team", "label": "Marquette Golden Eagles team"}, {"uri": "http://dbpedia.org/resource/2008\u201309_Marquette_Golden_Eagles_men's_basketball_team", "label": "Marquette Golden Eagles men's basketball team, 2008-09"}], "predicate mapping": [{"uri": "http://dbpedia.org/ontology/coach", "label": "coach"}, {"uri": "http://dbpedia.org/property/headcoach", "label": "headcoach"}], "id": "1740f374977d429492e5c58dce8e4273"}]